// Generated by psc version 0.5.5
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($amp, $up, complement, shl, shr, zshr, $bar) {
        this["&"] = $amp;
        this["^"] = $up;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
        this["|"] = $bar;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function (l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl (f) {  return function (xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function (eq) {    return function (gt) {      return function (x) {        return function (y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $bar = function (dict) {
        return dict["|"];
    };
    var $up = function (dict) {
        return dict["^"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $amp = function (dict) {
        return dict["&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = function () {
        return new Show(function (_99) {
            return "Unit {}";
        });
    };
    var showString = function () {
        return new Show(showStringImpl);
    };
    var showOrdering = function () {
        return new Show(function (_107) {
            if (_107 instanceof LT) {
                return "LT";
            };
            if (_107 instanceof GT) {
                return "GT";
            };
            if (_107 instanceof EQ) {
                return "EQ";
            };
            throw new Error("Failed pattern match");
        });
    };
    var showNumber = function () {
        return new Show(showNumberImpl);
    };
    var showBoolean = function () {
        return new Show(function (_100) {
            if (_100) {
                return "true";
            };
            if (!_100) {
                return "false";
            };
            throw new Error("Failed pattern match");
        });
    };
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_2) {
        return new Show(showArrayImpl(show(__dict_Show_2)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = function () {
        return new Semigroupoid(function (f) {
            return function (g) {
                return function (x) {
                    return f(g(x));
                };
            };
        });
    };
    var semigroupUnit = function () {
        return new Semigroup(function (_114) {
            return function (_115) {
                return {};
            };
        });
    };
    var semigroupString = function () {
        return new Semigroup(concatString);
    };
    var semigroupArr = function (__dict_Semigroup_3) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_3)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = function () {
        return new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    };
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_5) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_5["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_5)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = function () {
        return new Functor($less$less$less(semigroupoidArr()));
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = function () {
        return new Eq(function (_103) {
            return function (_104) {
                return false;
            };
        }, function (_101) {
            return function (_102) {
                return true;
            };
        });
    };
    var ordUnit = function () {
        return new Ord(eqUnit, function (_108) {
            return function (_109) {
                return EQ.value;
            };
        });
    };
    var eqString = function () {
        return new Eq(refIneq, refEq);
    };
    var ordString = function () {
        return new Ord(eqString, unsafeCompare);
    };
    var eqNumber = function () {
        return new Eq(refIneq, refEq);
    };
    var ordNumber = function () {
        return new Ord(eqNumber, unsafeCompare);
    };
    var eqBoolean = function () {
        return new Eq(refIneq, refEq);
    };
    var ordBoolean = function () {
        return new Ord(eqBoolean, function (_110) {
            return function (_111) {
                if (!_110 && !_111) {
                    return EQ.value;
                };
                if (!_110 && _111) {
                    return LT.value;
                };
                if (_110 && _111) {
                    return EQ.value;
                };
                if (_110 && !_111) {
                    return GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var $$const = function (_95) {
        return function (_96) {
            return _95;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_10) {
        return function (a1) {
            return function (a2) {
                var _652 = compare(__dict_Ord_10)(a1)(a2);
                if (_652 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _653 = compare(__dict_Ord_11)(a1)(a2);
                if (_653 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _654 = compare(__dict_Ord_12)(a1)(a2);
                if (_654 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _655 = compare(__dict_Ord_13)(a1)(a2);
                if (_655 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = function () {
        return new Category(semigroupoidArr, function (x) {
            return x;
        });
    };
    var boolLikeBoolean = function () {
        return new BoolLike(boolAnd, boolNot, boolOr);
    };
    var eqArray = function (__dict_Eq_7) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean())($eq$eq(eqArray(__dict_Eq_7))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_7))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_9) {
        return new Ord(function () {
            return eqArray(__dict_Ord_9["__superclass_Prelude.Eq_0"]());
        }, function (_112) {
            return function (_113) {
                if (_112.length === 0 && _113.length === 0) {
                    return EQ.value;
                };
                if (_112.length === 0) {
                    return LT.value;
                };
                if (_113.length === 0) {
                    return GT.value;
                };
                if (_112.length >= 1) {
                    var _662 = _112.slice(1);
                    if (_113.length >= 1) {
                        var _660 = _113.slice(1);
                        var _658 = compare(__dict_Ord_9)(_112[0])(_113[0]);
                        if (_658 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_9))(_662)(_660);
                        };
                        return _658;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = function () {
        return new Eq(function (x) {
            return function (y) {
                return not(boolLikeBoolean())($eq$eq(eqOrdering())(x)(y));
            };
        }, function (_105) {
            return function (_106) {
                if (_105 instanceof LT && _106 instanceof LT) {
                    return true;
                };
                if (_105 instanceof GT && _106 instanceof GT) {
                    return true;
                };
                if (_105 instanceof EQ && _106 instanceof EQ) {
                    return true;
                };
                return false;
            };
        });
    };
    var bitsNumber = function () {
        return new Bits(numAnd, numXor, numComplement, numShl, numShr, numZshr, numOr);
    };
    var asTypeOf = function (_97) {
        return function (_98) {
            return _97;
        };
    };
    var applyArr = function () {
        return new Apply(function (f) {
            return function (g) {
                return function (x) {
                    return f(x)(g(x));
                };
            };
        }, functorArr);
    };
    var bindArr = function () {
        return new Bind(function (m) {
            return function (f) {
                return function (x) {
                    return f(m(x))(x);
                };
            };
        }, applyArr);
    };
    var applicativeArr = function () {
        return new Applicative(applyArr, $$const);
    };
    var monadArr = function () {
        return new Monad(applicativeArr, bindArr);
    };
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        "^": $up, 
        "|": $bar, 
        "&": $amp, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        sqrt2: sqrt2, 
        sqrt1_2: sqrt1_2, 
        pi: pi, 
        log10e: log10e, 
        log2e: log2e, 
        ln10: ln10, 
        ln2: ln2, 
        e: e, 
        tan: tan, 
        sqrt: sqrt, 
        sin: sin, 
        round: round, 
        pow: pow, 
        min: min, 
        max: max, 
        log: log, 
        floor: floor, 
        exp: exp, 
        cos: cos, 
        ceil: ceil, 
        atan2: atan2, 
        atan: atan, 
        asin: asin, 
        acos: acos, 
        abs: abs
    };
})();
var PS = PS || {};
PS.Global = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var nan = NaN;;
    var infinity = Infinity;;
    function readInt(radix) {  return function(n) {    return parseInt(n, radix);  };};
    var readFloat = parseFloat;;
    return {
        readFloat: readFloat, 
        readInt: readInt, 
        isFinite: isFinite, 
        infinity: infinity, 
        isNaN: isNaN, 
        nan: nan
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function charAt(i) {  return function(s) {    return s.charAt(i);   };};
    function charCodeAt(i) {  return function(s) {    return s.charCodeAt(i);   };};
    function fromCharCode(n) {  return String.fromCharCode(n);};
    function indexOf(x) {  return function(s) {    return s.indexOf(x);  }; };
    function indexOf$prime(x) {  return function(startAt) {    return function(s) {      return s.indexOf(x, startAt);    };   }; };
    function lastIndexOf(x) {  return function(s) {    return s.lastIndexOf(x);  };};
    function lastIndexOf$prime(x) {  return function(startAt) {    return function(s) {      return s.lastIndexOf(x, startAt);    };   }; };
    function length(s) {  return s.length;};
    function localeCompare(s1) {  return function(s2) {    return s1.localeCompare(s2);  };};
    function replace(s1) {  return function(s2) {    return function(s3) {      return s3.replace(s1, s2);    };  };};
    function take(n) {  return function(s) {    return s.substr(0, n);  };};
    function drop(n) {  return function(s) {    return s.substr(n);  };};
    function split(sep) {  return function(s) {    return s.split(sep);  };};
    function toLower(s) {  return s.toLowerCase();};
    function toUpper(s) {  return s.toUpperCase();};
    function trim(s) {  return s.trim();};
    function joinWith (s) {  return function (xs) {    return xs.join(s);  };};
    return {
        joinWith: joinWith, 
        trim: trim, 
        toUpper: toUpper, 
        toLower: toLower, 
        split: split, 
        drop: drop, 
        take: take, 
        replace: replace, 
        localeCompare: localeCompare, 
        length: length, 
        "lastIndexOf'": lastIndexOf$prime, 
        lastIndexOf: lastIndexOf, 
        "indexOf'": indexOf$prime, 
        indexOf: indexOf, 
        fromCharCode: fromCharCode, 
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    function showRegex$prime(r){  return '' + r;};
    function regex$prime(s1) {  return function(s2) {    return new RegExp(s1, s2);  };};
    function source(r) {  return r.source;};
    function flags(r) {  return {    multiline: r.multiline,    ignoreCase: r.ignoreCase,    global: r.global,    sticky: !!r.sticky,    unicode: !!r.unicode  };};
    function test(r) {  return function (s) {    return r.test(s);  };};
    function match(r) {  return function (s) {    return s.match(r);   };};
    function replace(r) {  return function(s1) {    return function(s2) {      return s2.replace(r, s1);    };  };};
    function replace$prime(r) {  return function(f) {    return function(s2) {      return s2.replace(r, function (match) {        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));      });    };  };};
    function search(r) {  return function (s) {    return s.search(r);  };};
    var showRegex = function () {
        return new Prelude.Show(showRegex$prime);
    };
    var renderFlags = function (flags_1) {
        return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
    };
    var regex = function (source_1) {
        return function (flags_1) {
            return regex$prime(source_1)(renderFlags(flags_1));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    return {
        search: search, 
        "replace'": replace$prime, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        flags: flags, 
        source: source, 
        regex: regex, 
        showRegex: showRegex
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Profunctor(dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = function () {
        return new Profunctor(function (a2b) {
            return function (c2d) {
                return function (b2c) {
                    return Prelude[">>>"](Prelude.semigroupoidArr())(a2b)(Prelude[">>>"](Prelude.semigroupoidArr())(b2c)(c2d));
                };
            };
        });
    };
    var dimap = function (dict) {
        return dict.dimap;
    };
    var lmap = function (__dict_Profunctor_15) {
        return function (a2b) {
            return dimap(__dict_Profunctor_15)(a2b)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var rmap = function (__dict_Profunctor_16) {
        return function (b2c) {
            return dimap(__dict_Profunctor_16)(Prelude.id(Prelude.categoryArr()))(b2c);
        };
    };
    return {
        Profunctor: Profunctor, 
        rmap: rmap, 
        lmap: lmap, 
        dimap: dimap, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_116) {
        return function (_117) {
            return function (_118) {
                return _116(_117)(_118);
            };
        };
    };
    var functorRef = function () {
        return new Prelude.Functor(function (_119) {
            return function (_120) {
                return _119(_120);
            };
        });
    };
    var eqRef = function () {
        return new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    };
    return {
        Ref: Ref, 
        liftRef: liftRef, 
        eqRef: eqRef, 
        functorRef: functorRef
    };
})();
var PS = PS || {};
PS.Data_Contravariant = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Contravariant($greater$dollar$less) {
        this[">$<"] = $greater$dollar$less;
    };
    var $greater$dollar$less = function (dict) {
        return dict[">$<"];
    };
    return {
        Contravariant: Contravariant, 
        ">$<": $greater$dollar$less
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function MonadTrans(lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Error(noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = function () {
        return new Error("", Prelude.id(Prelude.categoryArr()));
    };
    return {
        Error: Error, 
        strMsg: strMsg, 
        noMsg: noMsg, 
        errorString: errorString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f()) { }    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var applicativeEff = function () {
        return new Prelude.Applicative(applyEff, returnE);
    };
    var applyEff = function () {
        return new Prelude.Apply(Prelude.ap(monadEff()), functorEff);
    };
    var monadEff = function () {
        return new Prelude.Monad(applicativeEff, bindEff);
    };
    var bindEff = function () {
        return new Prelude.Bind(bindE, applyEff);
    };
    var functorEff = function () {
        return new Prelude.Functor(Prelude.liftA1(applicativeEff()));
    };
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function showErrorImpl(err) {  return err.stack ? err.stack : err.toString();};
    function error(msg) {  return new Error(msg);};;
    function message(e) {  return e.message;};
    function throwException(e) {  return function() {    throw e;  };};
    function catchException(c) {  return function(t) {    return function() {      try {        return t();      } catch(e) {        if (e instanceof Error) {          return c(e)();        } else {          throw e;        }      }    };  };};
    var showError = function () {
        return new Prelude.Show(showErrorImpl);
    };
    return {
        catchException: catchException, 
        throwException: throwException, 
        message: message, 
        error: error, 
        showErrorImpl: showErrorImpl, 
        showError: showError
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function random() {  return Math.random();};
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function () {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function newSTArray(len) {  return function(a) {    return function() {      var arr = [];      for (var i = 0; i < len; i++) {        arr[i] = a;      };      return arr;    };  };};
    function peekSTArray(arr) {  return function(i) {    return function() {      return arr[i];    };  };};
    function pokeSTArray(arr) {  return function(i) {    return function(a) {      return function() {        return arr[i] = a;      };    };  };};
    function runST(f) {  return f;};
    function runSTArray(f) {  return f;};
    return {
        runSTArray: runSTArray, 
        runST: runST, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        newSTArray: newSTArray, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_17) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_17)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = {
        create: function (value) {
            return value;
        }
    };
    var runContT = function (_121) {
        return function (_122) {
            return _121(_122);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_18) {
            return function (m) {
                return function (k) {
                    return Prelude[">>="](__dict_Monad_18["__superclass_Prelude.Bind_1"]())(m)(k);
                };
            };
        });
    };
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_20) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var appluContT = function (__dict_Functor_22) {
        return function (__dict_Monad_23) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_23);
            });
        };
    };
    var bindContT = function (__dict_Monad_21) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return appluContT(((__dict_Monad_21["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_21);
        });
    };
    var applicativeContT = function (__dict_Functor_24) {
        return function (__dict_Monad_25) {
            return new Prelude.Applicative(function () {
                return appluContT(__dict_Functor_24)(__dict_Monad_25);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_19) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_19["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_19);
        }, function () {
            return bindContT(__dict_Monad_19);
        });
    };
    return {
        ContT: ContT, 
        callCC: callCC, 
        withContT: withContT, 
        mapContT: mapContT, 
        runContT: runContT, 
        functorContT: functorContT, 
        appluContT: appluContT, 
        applicativeContT: applicativeContT, 
        bindContT: bindContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_26) {
        return function (_128) {
            return function (_129) {
                if (_128) {
                    return _129;
                };
                if (!_128) {
                    return Prelude["return"](__dict_Monad_26)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_27) {
        return function (_130) {
            return function (_131) {
                if (!_130) {
                    return _131;
                };
                if (_130) {
                    return Prelude["return"](__dict_Monad_27)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_28) {
        return function (_123) {
            return function (_124) {
                if (_123 === 0) {
                    return Prelude["return"](__dict_Monad_28)([  ]);
                };
                return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(_124)(function (_4) {
                    return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_28)(_123 - 1)(_124))(function (_3) {
                        return Prelude["return"](__dict_Monad_28)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_29) {
        return function (_125) {
            return function (_126) {
                return function (_127) {
                    if (_127.length === 0) {
                        return Prelude["return"](__dict_Monad_29)(_126);
                    };
                    if (_127.length >= 1) {
                        var _688 = _127.slice(1);
                        return Prelude[">>="](__dict_Monad_29["__superclass_Prelude.Bind_1"]())(_125(_126)(_127[0]))(function (a$prime) {
                            return foldM(__dict_Monad_29)(_125)(a$prime)(_688);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lens_Internal_Iso = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    function Exchange(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Exchange.create = function (value0) {
        return function (value1) {
            return new Exchange(value0, value1);
        };
    };
    var profunctorExchange = function () {
        return new Data_Profunctor.Profunctor(function (_134) {
            return function (_135) {
                return function (_136) {
                    return new Exchange(Prelude[">>>"](Prelude.semigroupoidArr())(_134)(_136.value0), Prelude[">>>"](Prelude.semigroupoidArr())(_136.value1)(_135));
                };
            };
        });
    };
    var functorExchange = function () {
        return new Prelude.Functor(function (_132) {
            return function (_133) {
                return new Exchange(_133.value0, Prelude[">>>"](Prelude.semigroupoidArr())(_133.value1)(_132));
            };
        });
    };
    return {
        Exchange: Exchange, 
        functorExchange: functorExchange, 
        profunctorExchange: profunctorExchange
    };
})();
var PS = PS || {};
PS.Control_Lens_Internal_Action = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Effective(__superclass_Data$dotContravariant$dotContravariant_0, __superclass_Prelude$dotFunctor_1, __superclass_Prelude$dotMonad_2, effective, ineffective) {
        this["__superclass_Data.Contravariant.Contravariant_0"] = __superclass_Data$dotContravariant$dotContravariant_0;
        this["__superclass_Prelude.Functor_1"] = __superclass_Prelude$dotFunctor_1;
        this["__superclass_Prelude.Monad_2"] = __superclass_Prelude$dotMonad_2;
        this.effective = effective;
        this.ineffective = ineffective;
    };
    var ineffective = function (dict) {
        return dict.ineffective;
    };
    var effective = function (dict) {
        return dict.effective;
    };
    return {
        Effective: Effective, 
        ineffective: ineffective, 
        effective: effective
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_30) {
        return function (f) {
            return defer2(__dict_Lazy2_30)(function (_) {
                return f(fix2(__dict_Lazy2_30)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_31) {
        return function (f) {
            return defer1(__dict_Lazy1_31)(function (_) {
                return f(fix1(__dict_Lazy1_31)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_32) {
        return function (f) {
            return defer(__dict_Lazy_32)(function (_) {
                return f(fix(__dict_Lazy_32)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_33) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_33)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_34) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_34)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_35) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_35)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_36) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_36)(w)(w$prime));
                    });
                };
            };
        }, Prelude.functorArr);
    };
    var duplicate = function (__dict_Extend_37) {
        return function (w) {
            return $less$less$eq(__dict_Extend_37)(Prelude.id(Prelude.categoryArr()))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Monad_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Identity = {
        create: function (value) {
            return value;
        }
    };
    var runIdentity = function (_137) {
        return _137;
    };
    var functorIdentity = function () {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return Identity.create(f(runIdentity(m)));
            };
        });
    };
    var extendIdentity = function () {
        return new Control_Extend.Extend(function (f) {
            return function (m) {
                return Identity.create(f(m));
            };
        }, functorIdentity);
    };
    var comonadIdentity = function () {
        return new Control_Comonad.Comonad(extendIdentity, function (_140) {
            return _140;
        });
    };
    var applyIdentity = function () {
        return new Prelude.Apply(function (_138) {
            return function (_139) {
                return Identity.create(_138(_139));
            };
        }, functorIdentity);
    };
    var bindIdentity = function () {
        return new Prelude.Bind(function (m) {
            return function (f) {
                return f(runIdentity(m));
            };
        }, applyIdentity);
    };
    var applicativeIdentity = function () {
        return new Prelude.Applicative(applyIdentity, Identity.create);
    };
    var monadIdentity = function () {
        return new Prelude.Monad(applicativeIdentity, bindIdentity);
    };
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity, 
        extendIdentity: extendIdentity, 
        comonadIdentity: comonadIdentity
    };
})();
var PS = PS || {};
PS.Data_Distributive = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    function Distributive(__superclass_Prelude$dotFunctor_0, collect, distribute) {
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.collect = collect;
        this.distribute = distribute;
    };
    var distributiveIdentity = function () {
        return new Distributive(Control_Monad_Identity.functorIdentity, function (__dict_Functor_39) {
            return function (a2Idb) {
                return function (ga) {
                    return Prelude["<$>"](__dict_Functor_39)(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(a2Idb))(ga);
                };
            };
        }, function (__dict_Functor_38) {
            return function (gIdb) {
                return Prelude["<$>"](__dict_Functor_38)(Control_Monad_Identity.runIdentity)(gIdb);
            };
        });
    };
    var distribute = function (dict) {
        return dict.distribute;
    };
    var cotraverse = function (__dict_Distributive_40) {
        return function (__dict_Functor_41) {
            return function (ga2b) {
                return function (gfa) {
                    return Prelude["<$>"](__dict_Distributive_40["__superclass_Prelude.Functor_0"]())(ga2b)(distribute(__dict_Distributive_40)(__dict_Functor_41)(gfa));
                };
            };
        };
    };
    var collect = function (dict) {
        return dict.collect;
    };
    return {
        Distributive: Distributive, 
        cotraverse: cotraverse, 
        collect: collect, 
        distribute: distribute, 
        distributiveIdentity: distributiveIdentity
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Rep = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Profunctor = PS.Data_Profunctor;
    function Representable(__superclass_Data$dotProfunctor$dotProfunctor_1, __superclass_Prelude$dotFunctor_0, rep, tabulate) {
        this["__superclass_Data.Profunctor.Profunctor_1"] = __superclass_Data$dotProfunctor$dotProfunctor_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.rep = rep;
        this.tabulate = tabulate;
    };
    function Corepresentable(__superclass_Data$dotProfunctor$dotProfunctor_1, __superclass_Prelude$dotFunctor_0, corep, cotabulate) {
        this["__superclass_Data.Profunctor.Profunctor_1"] = __superclass_Data$dotProfunctor$dotProfunctor_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.corep = corep;
        this.cotabulate = cotabulate;
    };
    var tabulate = function (dict) {
        return dict.tabulate;
    };
    var representableArrIdentity = function () {
        return new Representable(Data_Profunctor.profunctorArr, Control_Monad_Identity.functorIdentity, function (d2c) {
            return Prelude[">>>"](Prelude.semigroupoidArr())(d2c)(Control_Monad_Identity.Identity.create);
        }, function (d2Ic) {
            return Prelude[">>>"](Prelude.semigroupoidArr())(d2Ic)(Control_Monad_Identity.runIdentity);
        });
    };
    var rep = function (dict) {
        return dict.rep;
    };
    var cotabulate = function (dict) {
        return dict.cotabulate;
    };
    var corepresentableArrIdentity = function () {
        return new Corepresentable(Data_Profunctor.profunctorArr, Control_Monad_Identity.functorIdentity, function (d2c) {
            return Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(d2c);
        }, function (id2c) {
            return Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(id2c);
        });
    };
    var corep = function (dict) {
        return dict.corep;
    };
    return {
        Corepresentable: Corepresentable, 
        Representable: Representable, 
        corep: corep, 
        cotabulate: cotabulate, 
        rep: rep, 
        tabulate: tabulate, 
        representableArrIdentity: representableArrIdentity, 
        corepresentableArrIdentity: corepresentableArrIdentity
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_42) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_42)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_43) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_43)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_44) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_44)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_45) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_45)(m)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var ifM = function (__dict_Bind_46) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_46)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_47) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_47)(Prelude["<$>"](__dict_Apply_47["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_48) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_48)(Prelude["<$>"](__dict_Apply_48["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr())))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_49) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_49)(Prelude["<*>"](__dict_Apply_49)(Prelude["<*>"](__dict_Apply_49)(Prelude["<*>"](__dict_Apply_49)(Prelude["<$>"](__dict_Apply_49["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_50) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_50)(Prelude["<*>"](__dict_Apply_50)(Prelude["<*>"](__dict_Apply_50)(Prelude["<$>"](__dict_Apply_50["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_51) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_51)(Prelude["<*>"](__dict_Apply_51)(Prelude["<$>"](__dict_Apply_51["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_52) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_52)(Prelude["<$>"](__dict_Apply_52["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_53) {
        return function (a) {
            return $times$greater(__dict_Apply_53)(a)(forever(__dict_Apply_53)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Lazy = PS.Control_Lazy;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var many = function (__dict_Alternative_54) {
        return function (__dict_Lazy1_55) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_54["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_54)(__dict_Lazy1_55)(v))(Prelude.pure(__dict_Alternative_54["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    var some = function (__dict_Alternative_56) {
        return function (__dict_Lazy1_57) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_56["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_56["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_57)(function (_) {
                    return many(__dict_Alternative_56)(__dict_Lazy1_57)(v);
                }));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_58) {
        return function (_141) {
            if (_141) {
                return Prelude["return"](__dict_MonadPlus_58["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_141) {
                return Control_Plus.empty((__dict_MonadPlus_58["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = {
        create: function (value) {
            return value;
        }
    };
    var runReaderT = function (_142) {
        return _142;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr())(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr())(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_61) {
            return liftReaderT;
        });
    };
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT.create(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT.create(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT.create(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_63) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_63)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_65) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_65["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_65["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_64) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_64["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_5) {
                        return runReaderT(k(_5))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_64["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_66) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_66);
        }, Prelude["<<<"](Prelude.semigroupoidArr())(liftReaderT)(Prelude.pure(__dict_Applicative_66)));
    };
    var monadReaderT = function (__dict_Monad_59) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_59["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_59);
        });
    };
    var altReaderT = function (__dict_Alt_68) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_68)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_68["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_62) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_62["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_62)));
    };
    var alternativeReaderT = function (__dict_Alternative_67) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_67["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_67["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_60) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_60["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_60["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        withReaderT: withReaderT, 
        runReaderT: runReaderT, 
        functorReaderT: functorReaderT, 
        applyReaderT: applyReaderT, 
        applicativeReaderT: applicativeReaderT, 
        altReaderT: altReaderT, 
        plusReaderT: plusReaderT, 
        alternativeReaderT: alternativeReaderT, 
        bindReaderT: bindReaderT, 
        monadReaderT: monadReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadTransReaderT: monadTransReaderT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        withReader: withReader, 
        runReader: runReader
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_69) {
        return function (__dict_Show_70) {
            return new Prelude.Show(function (_152) {
                if (_152 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_69)(_152.value0) + ")");
                };
                if (_152 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_70)(_152.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = function () {
        return new Prelude.Functor(function (_146) {
            return function (_147) {
                if (_147 instanceof Left) {
                    return new Left(_147.value0);
                };
                if (_147 instanceof Right) {
                    return new Right(_146(_147.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqEither = function (__dict_Eq_73) {
        return function (__dict_Eq_74) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_73)(__dict_Eq_74))(a)(b);
                };
            }, function (_153) {
                return function (_154) {
                    if (_153 instanceof Left && _154 instanceof Left) {
                        return Prelude["=="](__dict_Eq_73)(_153.value0)(_154.value0);
                    };
                    if (_153 instanceof Right && _154 instanceof Right) {
                        return Prelude["=="](__dict_Eq_74)(_153.value0)(_154.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_71) {
        return function (__dict_Ord_72) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_71["__superclass_Prelude.Eq_0"]())(__dict_Ord_72["__superclass_Prelude.Eq_0"]());
            }, function (_155) {
                return function (_156) {
                    if (_155 instanceof Left && _156 instanceof Left) {
                        return Prelude.compare(__dict_Ord_71)(_155.value0)(_156.value0);
                    };
                    if (_155 instanceof Right && _156 instanceof Right) {
                        return Prelude.compare(__dict_Ord_72)(_155.value0)(_156.value0);
                    };
                    if (_155 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_156 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_143) {
        return function (_144) {
            return function (_145) {
                if (_145 instanceof Left) {
                    return _143(_145.value0);
                };
                if (_145 instanceof Right) {
                    return _144(_145.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = function () {
        return new Prelude.Apply(function (_148) {
            return function (_149) {
                if (_148 instanceof Left) {
                    return new Left(_148.value0);
                };
                if (_148 instanceof Right) {
                    return Prelude["<$>"](functorEither())(_148.value0)(_149);
                };
                throw new Error("Failed pattern match");
            };
        }, functorEither);
    };
    var bindEither = function () {
        return new Prelude.Bind(either(function (e) {
            return function (_) {
                return new Left(e);
            };
        })(function (a) {
            return function (f) {
                return f(a);
            };
        }), applyEither);
    };
    var applicativeEither = function () {
        return new Prelude.Applicative(applyEither, Right.create);
    };
    var monadEither = function () {
        return new Prelude.Monad(applicativeEither, bindEither);
    };
    var altEither = function () {
        return new Control_Alt.Alt(function (_150) {
            return function (_151) {
                if (_150 instanceof Left) {
                    return _151;
                };
                return _150;
            };
        }, functorEither);
    };
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Function = PS.Data_Function;
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    function Free(value0) {
        this.value0 = value0;
    };
    Free.create = function (value0) {
        return new Free(value0);
    };
    function Gosub(value0) {
        this.value0 = value0;
    };
    Gosub.create = function (value0) {
        return new Gosub(value0);
    };
    function MonadFree(wrap) {
        this.wrap = wrap;
    };
    function resumeImpl(isGosub, isLeft, toEither, fromRight, resumeGosub, value) {  while (true) {    if (!isGosub(value)) return toEither(value);    var x = resumeGosub(value);    if (isLeft(x)) return x;    else value = fromRight(x);  }};
    function goImpl(resume, isRight, fromLeft, fromRight, fn, value) {  while (true) {    var r = resume(value);    if (isRight(r)) return fromRight(r);    value = fn(fromLeft(r));  }};
    function goEffImpl(resume, isRight, fromLeft, fromRight, fn, value) {  return function(){    while (true) {      var r = resume(value);      if (isRight(r)) return fromRight(r);      value = fn(fromLeft(r))();    }  };};
    var wrap = function (dict) {
        return dict.wrap;
    };
    var unsafeRight = function (_163) {
        if (_163 instanceof Data_Either.Right) {
            return _163.value0;
        };
        throw new Error("Failed pattern match");
    };
    var unsafeLeft = function (_162) {
        if (_162 instanceof Data_Either.Left) {
            return _162.value0;
        };
        throw new Error("Failed pattern match");
    };
    var unsafeFreeToEither = function (_161) {
        if (_161 instanceof Pure) {
            return new Data_Either.Right(_161.value0);
        };
        if (_161 instanceof Free) {
            return new Data_Either.Left(_161.value0);
        };
        throw new Error("Failed pattern match");
    };
    var pureF = function (__dict_Applicative_76) {
        return function (a) {
            return new Free(Prelude.pure(__dict_Applicative_76)(new Pure(a)));
        };
    };
    var monadTransFree = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_77) {
            return function (f) {
                return Free.create(Prelude[">>="](__dict_Monad_77["__superclass_Prelude.Bind_1"]())(f)(function (_6) {
                    return Prelude["return"](__dict_Monad_77)(new Pure(_6));
                }));
            };
        });
    };
    var monadFreeFree = function (__dict_Functor_78) {
        return new MonadFree(Free.create);
    };
    var liftF = function (__dict_Functor_80) {
        return function (__dict_Monad_81) {
            return function (__dict_MonadFree_82) {
                return function (fa) {
                    return wrap(__dict_MonadFree_82)(Prelude["<$>"](__dict_Functor_80)(Prelude["return"](__dict_Monad_81))(fa));
                };
            };
        };
    };
    var iterM = function (__dict_Functor_83) {
        return function (__dict_Monad_84) {
            return function (_157) {
                return function (_158) {
                    if (_158 instanceof Pure) {
                        return Prelude["return"](__dict_Monad_84)(_158.value0);
                    };
                    if (_158 instanceof Free) {
                        return _157(Prelude["<$>"](__dict_Functor_83)(iterM(__dict_Functor_83)(__dict_Monad_84)(_157))(_158.value0));
                    };
                    if (_158 instanceof Gosub) {
                        return _158.value0(function (req) {
                            return function (recv) {
                                return Prelude[">>="](__dict_Monad_84["__superclass_Prelude.Bind_1"]())(iterM(__dict_Functor_83)(__dict_Monad_84)(_157)(req(Prelude.unit)))(Prelude["<<<"](Prelude.semigroupoidArr())(iterM(__dict_Functor_83)(__dict_Monad_84)(_157))(recv));
                            };
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var isGosub = function (_160) {
        if (_160 instanceof Gosub) {
            return true;
        };
        return false;
    };
    var applicativeFree = function (__dict_Functor_93) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_93);
        }, Pure.create);
    };
    var applyFree = function (__dict_Functor_92) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_92)), function () {
            return functorFree(__dict_Functor_92);
        });
    };
    var monadFree = function (__dict_Functor_79) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_79);
        }, function () {
            return bindFree(__dict_Functor_79);
        });
    };
    var bindFree = function (__dict_Functor_91) {
        return new Prelude.Bind(function (_166) {
            return function (_167) {
                if (_166 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _166.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_167);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_166))(_167);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_91);
        });
    };
    var functorFree = function (__dict_Functor_90) {
        return new Prelude.Functor(function (_164) {
            return function (_165) {
                if (_165 instanceof Pure) {
                    return new Pure(_164(_165.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_90))(_164)(_165);
            };
        });
    };
    var resumeGosub = function (__dict_Functor_75) {
        return function (_159) {
            if (_159 instanceof Gosub) {
                return _159.value0(function (a) {
                    return function (g) {
                        var _760 = a(Prelude.unit);
                        if (_760 instanceof Pure) {
                            return new Data_Either.Right(g(_760.value0));
                        };
                        if (_760 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_75)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_75))(h)(g);
                            })(_760.value0));
                        };
                        if (_760 instanceof Gosub) {
                            return new Data_Either.Right(_760.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_75))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_75))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__dict_Functor_85) {
        return function (f) {
            return resumeImpl(isGosub, Data_Either.isLeft, unsafeFreeToEither, unsafeRight, resumeGosub(__dict_Functor_85), f);
        };
    };
    var go = function (__dict_Functor_89) {
        return function (fn) {
            return function (f) {
                return goImpl(resume(__dict_Functor_89), Data_Either.isRight, unsafeLeft, unsafeRight, fn, f);
            };
        };
    };
    var goEff = function (__dict_Functor_88) {
        return function (fn) {
            return function (f) {
                return goEffImpl(resume(__dict_Functor_88), Data_Either.isRight, unsafeLeft, unsafeRight, fn, f);
            };
        };
    };
    var goM = function (__dict_Functor_86) {
        return function (__dict_Monad_87) {
            return function (k) {
                return function (f) {
                    var _765 = resume(__dict_Functor_86)(f);
                    if (_765 instanceof Data_Either.Left) {
                        return Prelude[">>="](__dict_Monad_87["__superclass_Prelude.Bind_1"]())(k(_765.value0))(goM(__dict_Functor_86)(__dict_Monad_87)(k));
                    };
                    if (_765 instanceof Data_Either.Right) {
                        return Prelude["return"](__dict_Monad_87)(_765.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        Pure: Pure, 
        Free: Free, 
        Gosub: Gosub, 
        MonadFree: MonadFree, 
        goEff: goEff, 
        go: go, 
        goM: goM, 
        iterM: iterM, 
        pureF: pureF, 
        liftF: liftF, 
        wrap: wrap, 
        functorFree: functorFree, 
        applyFree: applyFree, 
        applicativeFree: applicativeFree, 
        bindFree: bindFree, 
        monadFree: monadFree, 
        monadTransFree: monadTransFree, 
        monadFreeFree: monadFreeFree
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Delay = {
        create: function (value) {
            return value;
        }
    };
    var suspend = function (a) {
        return new Control_Monad_Free.Free(Prelude["const"](a));
    };
    var done = Control_Monad_Free.Pure.create;
    var delayFunctor = function () {
        return new Prelude.Functor(function (_169) {
            return function (_170) {
                return Prelude["const"](_169(_170(Prelude.unit)));
            };
        });
    };
    var runTrampoline = Control_Monad_Free.go(delayFunctor())(function (_168) {
        return _168(Prelude.unit);
    });
    var delayApply = function () {
        return new Prelude.Apply(function (_171) {
            return function (_172) {
                return function (_) {
                    return _171(Prelude.unit)(_172(Prelude.unit));
                };
            };
        }, delayFunctor);
    };
    var delayApplicative = function () {
        return new Prelude.Applicative(delayApply, function (a) {
            return Prelude["const"](a);
        });
    };
    var delay = function (a) {
        return new Control_Monad_Free.Free(Prelude["<$>"](delayFunctor())(done)(a));
    };
    return {
        Delay: Delay, 
        runTrampoline: runTrampoline, 
        delay: delay, 
        suspend: suspend, 
        done: done, 
        delayFunctor: delayFunctor, 
        delayApply: delayApply, 
        delayApplicative: delayApplicative
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Choice = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Profunctor = PS.Data_Profunctor;
    function Choice(__superclass_Data$dotProfunctor$dotProfunctor_0, left$prime, right$prime) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this["left'"] = left$prime;
        this["right'"] = right$prime;
    };
    var right$prime = function (dict) {
        return dict["right'"];
    };
    var left$prime = function (dict) {
        return dict["left'"];
    };
    var choiceArr = function () {
        return new Choice(Data_Profunctor.profunctorArr, function (_173) {
            return function (_174) {
                if (_174 instanceof Data_Either.Left) {
                    return Data_Either.Left.create(_173(_174.value0));
                };
                if (_174 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_174.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Prelude["<$>"](Data_Either.functorEither()));
    };
    return {
        Choice: Choice, 
        "right'": right$prime, 
        "left'": left$prime, 
        choiceArr: choiceArr
    };
})();
var PS = PS || {};
PS.Control_Lens_Internal_Prism = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Either = PS.Data_Either;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    function Market(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Market.create = function (value0) {
        return function (value1) {
            return new Market(value0, value1);
        };
    };
    var profunctorMarket = function () {
        return new Data_Profunctor.Profunctor(function (_177) {
            return function (_178) {
                return function (_179) {
                    return new Market(Prelude[">>>"](Prelude.semigroupoidArr())(_179.value0)(_178), Prelude[">>>"](Prelude.semigroupoidArr())(_177)(Prelude[">>>"](Prelude.semigroupoidArr())(_179.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr())(_178)(Data_Either.Left.create))(Data_Either.Right.create))));
                };
            };
        });
    };
    var functorMarket = function () {
        return new Prelude.Functor(function (_175) {
            return function (_176) {
                return new Market(Prelude[">>>"](Prelude.semigroupoidArr())(_176.value0)(_175), Prelude[">>>"](Prelude.semigroupoidArr())(_176.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr())(_175)(Data_Either.Left.create))(Data_Either.Right.create)));
            };
        });
    };
    var choiceMarket = function () {
        return new Data_Profunctor_Choice.Choice(profunctorMarket, function (_180) {
            return new Market(Prelude[">>>"](Prelude.semigroupoidArr())(_180.value0)(Data_Either.Left.create), function (thing) {
                if (thing instanceof Data_Either.Left) {
                    return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr())(Data_Either.Left.create)(Data_Either.Left.create))(Data_Either.Right.create)(_180.value1(thing.value0));
                };
                if (thing instanceof Data_Either.Right) {
                    return Data_Either.Left.create(new Data_Either.Right(thing.value0));
                };
                throw new Error("Failed pattern match");
            });
        }, function (_181) {
            return new Market(Prelude[">>>"](Prelude.semigroupoidArr())(_181.value0)(Data_Either.Right.create), function (thing) {
                if (thing instanceof Data_Either.Left) {
                    return Data_Either.Left.create(new Data_Either.Left(thing.value0));
                };
                if (thing instanceof Data_Either.Right) {
                    return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr())(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Right.create)(_181.value1(thing.value0));
                };
                throw new Error("Failed pattern match");
            });
        });
    };
    return {
        Market: Market, 
        functorMarket: functorMarket, 
        profunctorMarket: profunctorMarket, 
        choiceMarket: choiceMarket
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_94) {
        return new Prelude.Show(function (_197) {
            if (_197 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_94)(_197.value0) + ")");
            };
            if (_197 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_95) {
        return new Prelude.Semigroup(function (_195) {
            return function (_196) {
                if (_195 instanceof Nothing) {
                    return _196;
                };
                if (_196 instanceof Nothing) {
                    return _195;
                };
                if (_195 instanceof Just && _196 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_95)(_195.value0)(_196.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_182) {
        return function (_183) {
            return function (_184) {
                if (_184 instanceof Nothing) {
                    return _182;
                };
                if (_184 instanceof Just) {
                    return _183(_184.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = function () {
        return new Prelude.Functor(function (_185) {
            return function (_186) {
                if (_186 instanceof Just) {
                    return new Just(_185(_186.value0));
                };
                return Nothing.value;
            };
        });
    };
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr()));
    };
    var extendMaybe = function () {
        return new Control_Extend.Extend(function (_193) {
            return function (_194) {
                if (_194 instanceof Nothing) {
                    return Nothing.value;
                };
                return Just.create(_193(_194));
            };
        }, functorMaybe);
    };
    var eqMaybe = function (__dict_Eq_97) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_97))(a)(b);
            };
        }, function (_198) {
            return function (_199) {
                if (_198 instanceof Nothing && _199 instanceof Nothing) {
                    return true;
                };
                if (_198 instanceof Just && _199 instanceof Just) {
                    return Prelude["=="](__dict_Eq_97)(_198.value0)(_199.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_96) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_96["__superclass_Prelude.Eq_0"]());
        }, function (_200) {
            return function (_201) {
                if (_200 instanceof Just && _201 instanceof Just) {
                    return Prelude.compare(__dict_Ord_96)(_200.value0)(_201.value0);
                };
                if (_200 instanceof Nothing && _201 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_200 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_201 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = function () {
        return new Prelude.Apply(function (_187) {
            return function (_188) {
                if (_187 instanceof Just) {
                    return Prelude["<$>"](functorMaybe())(_187.value0)(_188);
                };
                if (_187 instanceof Nothing) {
                    return Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        }, functorMaybe);
    };
    var bindMaybe = function () {
        return new Prelude.Bind(function (_191) {
            return function (_192) {
                if (_191 instanceof Just) {
                    return _192(_191.value0);
                };
                if (_191 instanceof Nothing) {
                    return Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        }, applyMaybe);
    };
    var applicativeMaybe = function () {
        return new Prelude.Applicative(applyMaybe, Just.create);
    };
    var monadMaybe = function () {
        return new Prelude.Monad(applicativeMaybe, bindMaybe);
    };
    var altMaybe = function () {
        return new Control_Alt.Alt(function (_189) {
            return function (_190) {
                if (_189 instanceof Nothing) {
                    return _190;
                };
                return _189;
            };
        }, functorMaybe);
    };
    var plusMaybe = function () {
        return new Control_Plus.Plus(altMaybe, Nothing.value);
    };
    var alternativeMaybe = function () {
        return new Control_Alternative.Alternative(plusMaybe, applicativeMaybe);
    };
    var monadPlusMaybe = function () {
        return new Control_MonadPlus.MonadPlus(alternativeMaybe, monadMaybe);
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_204) {
        if (_204.length >= 1) {
            var _831 = _204.slice(1);
            return new Data_Maybe.Just(_831);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__220) {
            return function (__copy__221) {
                return function (__copy__222) {
                    var _220 = __copy__220;
                    var _221 = __copy__221;
                    var _222 = __copy__222;
                    tco: while (true) {
                        if (_222.length >= 1) {
                            var _836 = _222.slice(1);
                            if (_221(_222[0])) {
                                var __tco__220 = Prelude[":"](_222[0])(_220);
                                var __tco__221 = _221;
                                _220 = __tco__220;
                                _221 = __tco__221;
                                _222 = _836;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_220), 
                            rest: _222
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _837 = comp(x)(y);
                    if (_837 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_837 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_837 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_98) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_98))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = function () {
        return new Prelude.Semigroup(append);
    };
    var $$null = function (_206) {
        if (_206.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_213) {
        return function (_214) {
            if (_214.length === 0) {
                return [  ];
            };
            if (_214.length >= 1) {
                var _842 = _214.slice(1);
                return Prelude[":"](_214[0])(nubBy(_213)(filter(function (y) {
                    return !_213(_214[0])(y);
                })(_842)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_99) {
        return nubBy(Prelude["=="](__dict_Eq_99));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__203) {
        var _203 = __copy__203;
        tco: while (true) {
            if (_203.length >= 1) {
                var _845 = _203.slice(1);
                if (_845.length === 0) {
                    return new Data_Maybe.Just(_203[0]);
                };
            };
            if (_203.length >= 1) {
                var _847 = _203.slice(1);
                _203 = _847;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_210) {
        return function (_211) {
            return function (_212) {
                if (_211.length === 0) {
                    return [  ];
                };
                if (_212.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_210(x))(_212) >= 0;
                };
                return filter(el)(_211);
            };
        };
    };
    var intersect = function (__dict_Eq_100) {
        return intersectBy(Prelude["=="](__dict_Eq_100));
    };
    var init = function (_205) {
        if (_205.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_205) - 1)(_205));
    };
    var head = function (_202) {
        if (_202.length >= 1) {
            var _854 = _202.slice(1);
            return new Data_Maybe.Just(_202[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__217) {
            return function (__copy__218) {
                return function (__copy__219) {
                    var _217 = __copy__217;
                    var _218 = __copy__218;
                    var _219 = __copy__219;
                    tco: while (true) {
                        if (_219.length === 0) {
                            return reverse(_217);
                        };
                        if (_219.length >= 1) {
                            var _859 = _219.slice(1);
                            var sp = span(_218(_219[0]))(_859);
                            var __tco__217 = Prelude[":"](Prelude[":"](_219[0])(sp.init))(_217);
                            var __tco__218 = _218;
                            _217 = __tco__217;
                            _218 = __tco__218;
                            _219 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_101) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_101))(xs);
        };
    };
    var group$prime = function (__dict_Ord_102) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(group(__dict_Ord_102["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_102));
    };
    var functorArray = function () {
        return new Prelude.Functor(map);
    };
    var elemLastIndex = function (__dict_Eq_103) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_103)(x));
        };
    };
    var elemIndex = function (__dict_Eq_104) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_104)(x));
        };
    };
    var deleteBy = function (_207) {
        return function (_208) {
            return function (_209) {
                if (_209.length === 0) {
                    return [  ];
                };
                var _863 = findIndex(_207(_208))(_209);
                if (_863 < 0) {
                    return _209;
                };
                return deleteAt(_863)(1)(_209);
            };
        };
    };
    var $$delete = function (__dict_Eq_105) {
        return deleteBy(Prelude["=="](__dict_Eq_105));
    };
    var $bslash$bslash = function (__dict_Eq_106) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__215) {
                    return function (__copy__216) {
                        var _215 = __copy__215;
                        var _216 = __copy__216;
                        tco: while (true) {
                            if (_216.length === 0) {
                                return _215;
                            };
                            if (_215.length === 0) {
                                return [  ];
                            };
                            if (_216.length >= 1) {
                                var _867 = _216.slice(1);
                                var __tco__215 = $$delete(__dict_Eq_106)(_216[0])(_215);
                                _215 = __tco__215;
                                _216 = _867;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var applicativeArray = function () {
        return new Prelude.Applicative(applyArray, singleton);
    };
    var applyArray = function () {
        return new Prelude.Apply(Prelude.ap(monadArray()), functorArray);
    };
    var monadArray = function () {
        return new Prelude.Monad(applicativeArray, bindArray);
    };
    var bindArray = function () {
        return new Prelude.Bind(Prelude.flip(concatMap), applyArray);
    };
    var altArray = function () {
        return new Control_Alt.Alt(append, functorArray);
    };
    var plusArray = function () {
        return new Control_Plus.Plus(altArray, [  ]);
    };
    var alternativeArray = function () {
        return new Control_Alternative.Alternative(plusArray, applicativeArray);
    };
    var monadPlusArray = function () {
        return new Control_MonadPlus.MonadPlus(alternativeArray, monadArray);
    };
    return {
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Enum(fromEnum, toEnum) {
        this.fromEnum = fromEnum;
        this.toEnum = toEnum;
    };
    var toEnum = function (dict) {
        return dict.toEnum;
    };
    var fromEnum = function (dict) {
        return dict.fromEnum;
    };
    var pred = function (__dict_Enum_107) {
        return function (x) {
            return toEnum(__dict_Enum_107)(fromEnum(__dict_Enum_107)(x) - 1);
        };
    };
    var succ = function (__dict_Enum_108) {
        return function (x) {
            return toEnum(__dict_Enum_108)(fromEnum(__dict_Enum_108)(x) + 1);
        };
    };
    return {
        Enum: Enum, 
        pred: pred, 
        succ: succ, 
        fromEnum: fromEnum, 
        toEnum: toEnum
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_223) {
        if (_223 instanceof Data_Maybe.Just) {
            return _223.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var tail = function (_225) {
        if (_225.length >= 1) {
            var _872 = _225.slice(1);
            return _872;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_224) {
        if (_224.length >= 1) {
            var _875 = _224.slice(1);
            return _224[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = function () {
        return new Monoid(Prelude.semigroupUnit, Prelude.unit);
    };
    var monoidString = function () {
        return new Monoid(Prelude.semigroupString, "");
    };
    var monoidMaybe = function (__dict_Semigroup_109) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_109);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = function () {
        return new Monoid(Data_Array.semigroupArray, [  ]);
    };
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_110) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_110["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_110)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Const = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Contravariant = PS.Data_Contravariant;
    var Const = {
        create: function (value) {
            return value;
        }
    };
    var showConst = function (__dict_Show_111) {
        return new Prelude.Show(function (_229) {
            return Prelude.show(__dict_Show_111)(_229);
        });
    };
    var semigroupoidConst = function () {
        return new Prelude.Semigroupoid(function (_232) {
            return function (_233) {
                return _233;
            };
        });
    };
    var semigroupConst = function (__dict_Semigroup_112) {
        return new Prelude.Semigroup(function (_234) {
            return function (_235) {
                return Prelude["<>"](__dict_Semigroup_112)(_234)(_235);
            };
        });
    };
    var monoidConst = function (__dict_Monoid_114) {
        return new Data_Monoid.Monoid(function () {
            return semigroupConst(__dict_Monoid_114["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_114));
    };
    var getConst = function (_226) {
        return _226;
    };
    var functorConst = function () {
        return new Prelude.Functor(function (_236) {
            return function (_237) {
                return _237;
            };
        });
    };
    var eqConst = function (__dict_Eq_115) {
        return new Prelude.Eq(function (c) {
            return function (c$prime) {
                return !Prelude["=="](eqConst(__dict_Eq_115))(c)(c$prime);
            };
        }, function (_227) {
            return function (_228) {
                return Prelude["=="](__dict_Eq_115)(_227)(_228);
            };
        });
    };
    var ordConst = function (__dict_Ord_113) {
        return new Prelude.Ord(function () {
            return eqConst(__dict_Ord_113["__superclass_Prelude.Eq_0"]());
        }, function (_230) {
            return function (_231) {
                return Prelude.compare(__dict_Ord_113)(_230)(_231);
            };
        });
    };
    var contravariantConst = function () {
        return new Data_Contravariant.Contravariant(function (_243) {
            return function (_244) {
                return _244;
            };
        });
    };
    var applyConst = function (__dict_Semigroup_117) {
        return new Prelude.Apply(function (_238) {
            return function (_239) {
                return Prelude["<>"](__dict_Semigroup_117)(_238)(_239);
            };
        }, functorConst);
    };
    var bindConst = function (__dict_Semigroup_116) {
        return new Prelude.Bind(function (_240) {
            return function (_241) {
                return _240;
            };
        }, function () {
            return applyConst(__dict_Semigroup_116);
        });
    };
    var applicativeConst = function (__dict_Monoid_118) {
        return new Prelude.Applicative(function () {
            return applyConst(__dict_Monoid_118["__superclass_Prelude.Semigroup_0"]());
        }, function (_242) {
            return Data_Monoid.mempty(__dict_Monoid_118);
        });
    };
    return {
        Const: Const, 
        getConst: getConst, 
        eqConst: eqConst, 
        showConst: showConst, 
        ordConst: ordConst, 
        semigroupoidConst: semigroupoidConst, 
        semigroupConst: semigroupConst, 
        monoidConst: monoidConst, 
        functorConst: functorConst, 
        applyConst: applyConst, 
        bindConst: bindConst, 
        applicativeConst: applicativeConst, 
        contravariantConst: contravariantConst
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = function () {
        return new Prelude.Show(function (_250) {
            return "All (" + (Prelude.show(Prelude.showBoolean())(_250) + ")");
        });
    };
    var semigroupAll = function () {
        return new Prelude.Semigroup(function (_251) {
            return function (_252) {
                return _251 && _252;
            };
        });
    };
    var runAll = function (_245) {
        return _245;
    };
    var monoidAll = function () {
        return new Data_Monoid.Monoid(semigroupAll, true);
    };
    var eqAll = function () {
        return new Prelude.Eq(function (_248) {
            return function (_249) {
                return _248 !== _249;
            };
        }, function (_246) {
            return function (_247) {
                return _246 === _247;
            };
        });
    };
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = function () {
        return new Prelude.Show(function (_258) {
            return "Any (" + (Prelude.show(Prelude.showBoolean())(_258) + ")");
        });
    };
    var semigroupAny = function () {
        return new Prelude.Semigroup(function (_259) {
            return function (_260) {
                return _259 || _260;
            };
        });
    };
    var runAny = function (_253) {
        return _253;
    };
    var monoidAny = function () {
        return new Data_Monoid.Monoid(semigroupAny, false);
    };
    var eqAny = function () {
        return new Prelude.Eq(function (_256) {
            return function (_257) {
                return _256 !== _257;
            };
        }, function (_254) {
            return function (_255) {
                return _254 === _255;
            };
        });
    };
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_119) {
        return new Prelude.Show(function (_268) {
            return "Dual (" + (Prelude.show(__dict_Show_119)(_268) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_120) {
        return new Prelude.Semigroup(function (_269) {
            return function (_270) {
                return Prelude["<>"](__dict_Semigroup_120)(_270)(_269);
            };
        });
    };
    var runDual = function (_261) {
        return _261;
    };
    var monoidDual = function (__dict_Monoid_122) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_122["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_122));
    };
    var eqDual = function (__dict_Eq_123) {
        return new Prelude.Eq(function (_264) {
            return function (_265) {
                return Prelude["/="](__dict_Eq_123)(_264)(_265);
            };
        }, function (_262) {
            return function (_263) {
                return Prelude["=="](__dict_Eq_123)(_262)(_263);
            };
        });
    };
    var ordDual = function (__dict_Ord_121) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_121["__superclass_Prelude.Eq_0"]());
        }, function (_266) {
            return function (_267) {
                return Prelude.compare(__dict_Ord_121)(_266)(_267);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = function () {
        return new Prelude.Semigroup(function (_272) {
            return function (_273) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(_272)(_273);
            };
        });
    };
    var runEndo = function (_271) {
        return _271;
    };
    var monoidEndo = function () {
        return new Data_Monoid.Monoid(semigroupEndo, Prelude.id(Prelude.categoryArr()));
    };
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = function () {
        return new Prelude.Show(function (_281) {
            return "Product (" + (Prelude.show(Prelude.showNumber())(_281) + ")");
        });
    };
    var semigroupProduct = function () {
        return new Prelude.Semigroup(function (_282) {
            return function (_283) {
                return _282 * _283;
            };
        });
    };
    var runProduct = function (_274) {
        return _274;
    };
    var monoidProduct = function () {
        return new Data_Monoid.Monoid(semigroupProduct, 1);
    };
    var eqProduct = function () {
        return new Prelude.Eq(function (_277) {
            return function (_278) {
                return _277 !== _278;
            };
        }, function (_275) {
            return function (_276) {
                return _275 === _276;
            };
        });
    };
    var ordProduct = function () {
        return new Prelude.Ord(eqProduct, function (_279) {
            return function (_280) {
                return Prelude.compare(Prelude.ordNumber())(_279)(_280);
            };
        });
    };
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = function () {
        return new Prelude.Show(function (_291) {
            return "Sum (" + (Prelude.show(Prelude.showNumber())(_291) + ")");
        });
    };
    var semigroupSum = function () {
        return new Prelude.Semigroup(function (_292) {
            return function (_293) {
                return _292 + _293;
            };
        });
    };
    var runSum = function (_284) {
        return _284;
    };
    var monoidSum = function () {
        return new Data_Monoid.Monoid(semigroupSum, 0);
    };
    var eqSum = function () {
        return new Prelude.Eq(function (_287) {
            return function (_288) {
                return _287 !== _288;
            };
        }, function (_285) {
            return function (_286) {
                return _285 === _286;
            };
        });
    };
    var ordSum = function () {
        return new Prelude.Ord(eqSum, function (_289) {
            return function (_290) {
                return Prelude.compare(Prelude.ordNumber())(_289)(_290);
            };
        });
    };
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_298) {
        if (_298.length >= 1) {
            var _951 = _298.slice(1);
            var _945 = unzip(_951);
            return new Tuple(Prelude[":"]((_298[0]).value0)(_945.value0), Prelude[":"]((_298[0]).value1)(_945.value1));
        };
        if (_298.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_296) {
        return function (_297) {
            return _296(_297.value0)(_297.value1);
        };
    };
    var swap = function (_299) {
        return new Tuple(_299.value1, _299.value0);
    };
    var snd = function (_295) {
        return _295.value1;
    };
    var showTuple = function (__dict_Show_124) {
        return function (__dict_Show_125) {
            return new Prelude.Show(function (_300) {
                return "Tuple (" + (Prelude.show(__dict_Show_124)(_300.value0) + (") (" + (Prelude.show(__dict_Show_125)(_300.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = function () {
        return new Prelude.Semigroupoid(function (_305) {
            return function (_306) {
                return new Tuple(_306.value0, _305.value1);
            };
        });
    };
    var semigroupTuple = function (__dict_Semigroup_126) {
        return function (__dict_Semigroup_127) {
            return new Prelude.Semigroup(function (_307) {
                return function (_308) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_126)(_307.value0)(_308.value0), Prelude["<>"](__dict_Semigroup_127)(_307.value1)(_308.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_130) {
        return function (__dict_Monoid_131) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_130["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_131["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_130), Data_Monoid.mempty(__dict_Monoid_131)));
        };
    };
    var functorTuple = function () {
        return new Prelude.Functor(function (_309) {
            return function (_310) {
                return new Tuple(_310.value0, _309(_310.value1));
            };
        });
    };
    var fst = function (_294) {
        return _294.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_133) {
        return function (__dict_Lazy1_134) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_133)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_134)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_135) {
        return function (__dict_Lazy2_136) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_135)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_136)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_137) {
        return function (__dict_Lazy_138) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_137)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_138)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = function () {
        return new Control_Extend.Extend(function (_315) {
            return function (_316) {
                return new Tuple(_316.value0, _315(_316));
            };
        }, functorTuple);
    };
    var eqTuple = function (__dict_Eq_139) {
        return function (__dict_Eq_140) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_139)(__dict_Eq_140))(t1)(t2);
                };
            }, function (_301) {
                return function (_302) {
                    return Prelude["=="](__dict_Eq_139)(_301.value0)(_302.value0) && Prelude["=="](__dict_Eq_140)(_301.value1)(_302.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_128) {
        return function (__dict_Ord_129) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_128["__superclass_Prelude.Eq_0"]())(__dict_Ord_129["__superclass_Prelude.Eq_0"]());
            }, function (_303) {
                return function (_304) {
                    var _996 = Prelude.compare(__dict_Ord_128)(_303.value0)(_304.value0);
                    if (_996 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_129)(_303.value1)(_304.value1);
                    };
                    return _996;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = function () {
        return new Control_Comonad.Comonad(extendTuple, snd);
    };
    var applyTuple = function (__dict_Semigroup_142) {
        return new Prelude.Apply(function (_311) {
            return function (_312) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_142)(_311.value0)(_312.value0), _311.value1(_312.value1));
            };
        }, functorTuple);
    };
    var bindTuple = function (__dict_Semigroup_141) {
        return new Prelude.Bind(function (_313) {
            return function (_314) {
                var _1009 = _314(_313.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_141)(_313.value0)(_1009.value0), _1009.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_141);
        });
    };
    var applicativeTuple = function (__dict_Monoid_143) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_143["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_143)));
    };
    var monadTuple = function (__dict_Monoid_132) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_132);
        }, function () {
            return bindTuple(__dict_Monoid_132["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Control_Arrow = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    function Arrow(__superclass_Prelude$dotCategory_0, arr, first) {
        this["__superclass_Prelude.Category_0"] = __superclass_Prelude$dotCategory_0;
        this.arr = arr;
        this.first = first;
    };
    function ArrowZero(azero) {
        this.azero = azero;
    };
    function ArrowPlus($less$plus$greater) {
        this["<+>"] = $less$plus$greater;
    };
    var $less$plus$greater = function (dict) {
        return dict["<+>"];
    };
    var first = function (dict) {
        return dict.first;
    };
    var azero = function (dict) {
        return dict.azero;
    };
    var arrowFunction = function () {
        return new Arrow(Prelude.categoryArr, function (f) {
            return f;
        }, function (_317) {
            return function (_318) {
                return new Data_Tuple.Tuple(_317(_318.value0), _318.value1);
            };
        });
    };
    var arr = function (dict) {
        return dict.arr;
    };
    var second = function (__dict_Arrow_144) {
        return function (f) {
            return Prelude[">>>"]((__dict_Arrow_144["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(arr(__dict_Arrow_144)(Data_Tuple.swap))(Prelude[">>>"]((__dict_Arrow_144["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(first(__dict_Arrow_144)(f))(arr(__dict_Arrow_144)(Data_Tuple.swap)));
        };
    };
    var $times$times$times = function (__dict_Arrow_145) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_145["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(first(__dict_Arrow_145)(f))(second(__dict_Arrow_145)(g));
            };
        };
    };
    var $amp$amp$amp = function (__dict_Arrow_146) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_146["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(arr(__dict_Arrow_146)(function (b) {
                    return new Data_Tuple.Tuple(b, b);
                }))($times$times$times(__dict_Arrow_146)(f)(g));
            };
        };
    };
    return {
        ArrowPlus: ArrowPlus, 
        ArrowZero: ArrowZero, 
        Arrow: Arrow, 
        "<+>": $less$plus$greater, 
        azero: azero, 
        "&&&": $amp$amp$amp, 
        "***": $times$times$times, 
        second: second, 
        first: first, 
        arr: arr, 
        arrowFunction: arrowFunction
    };
})();
var PS = PS || {};
PS.Control_Arrow_ArrowChoice = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Control_Arrow = PS.Control_Arrow;
    function ArrowChoice(__superclass_Control$dotArrow$dotArrow_0, left) {
        this["__superclass_Control.Arrow.Arrow_0"] = __superclass_Control$dotArrow$dotArrow_0;
        this.left = left;
    };
    var left = function (dict) {
        return dict.left;
    };
    var arrowChoiceArr = function () {
        return new ArrowChoice(Control_Arrow.arrowFunction, function (_319) {
            return function (_320) {
                if (_320 instanceof Data_Either.Left) {
                    return Data_Either.Left.create(_319(_320.value0));
                };
                if (_320 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_320.value0);
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    return {
        ArrowChoice: ArrowChoice, 
        left: left, 
        arrowChoiceArr: arrowChoiceArr
    };
})();
var PS = PS || {};
PS.Control_Arrow_ArrowApply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Arrow = PS.Control_Arrow;
    function ArrowApply(__superclass_Control$dotArrow$dotArrow_0, app) {
        this["__superclass_Control.Arrow.Arrow_0"] = __superclass_Control$dotArrow$dotArrow_0;
        this.app = app;
    };
    var arrowApplyArr = function () {
        return new ArrowApply(Control_Arrow.arrowFunction, function (_321) {
            return _321.value0(_321.value1);
        });
    };
    var app = function (dict) {
        return dict.app;
    };
    return {
        ArrowApply: ArrowApply, 
        app: app, 
        arrowApplyArr: arrowApplyArr
    };
})();
var PS = PS || {};
PS.Control_Arrow_ArrowLoop = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function ArrowLoop(__superclass_Control$dotArrow$dotArrow_0, loop) {
        this["__superclass_Control.Arrow.Arrow_0"] = __superclass_Control$dotArrow$dotArrow_0;
        this.loop = loop;
    };
    var loop = function (dict) {
        return dict.loop;
    };
    return {
        ArrowLoop: ArrowLoop, 
        loop: loop
    };
})();
var PS = PS || {};
PS.Control_Arrow_Kleisli = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Tuple = PS.Data_Tuple;
    var Kleisli = {
        create: function (value) {
            return value;
        }
    };
    var semigroupoidKleisli = function (__dict_Monad_147) {
        return new Prelude.Semigroupoid(function (_324) {
            return function (_325) {
                return function (b) {
                    return Prelude[">>="](__dict_Monad_147["__superclass_Prelude.Bind_1"]())(_325(b))(_324);
                };
            };
        });
    };
    var runKleisli = function (_323) {
        return _323;
    };
    var categoryKleisli = function (__dict_Monad_148) {
        return new Prelude.Category(function () {
            return semigroupoidKleisli(__dict_Monad_148);
        }, Prelude["return"](__dict_Monad_148));
    };
    var arrowKleisli = function (__dict_Monad_149) {
        return new Control_Arrow.Arrow(function () {
            return categoryKleisli(__dict_Monad_149);
        }, function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["return"](__dict_Monad_149))(f);
        }, function (_326) {
            return function (_322) {
                return Prelude[">>="](__dict_Monad_149["__superclass_Prelude.Bind_1"]())(_326(_322.value0))(function (c) {
                    return Prelude["return"](__dict_Monad_149)(new Data_Tuple.Tuple(c, _322.value1));
                });
            };
        });
    };
    return {
        Kleisli: Kleisli, 
        runKleisli: runKleisli, 
        semigroupoidKleisli: semigroupoidKleisli, 
        categoryKleisli: categoryKleisli, 
        arrowKleisli: arrowKleisli
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ErrorT = {
        create: function (value) {
            return value;
        }
    };
    var runErrorT = function (_327) {
        return _327;
    };
    var monadTransErrorT = function (__dict_Error_152) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_153) {
            return function (m) {
                return ErrorT.create(Prelude[">>="](__dict_Monad_153["__superclass_Prelude.Bind_1"]())(m)(function (_10) {
                    return Prelude["return"](__dict_Monad_153)(new Data_Either.Right(_10));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT.create(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_158) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_158["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_158)((function () {
                        if (_12 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_12.value0), Prelude.id(Prelude.categoryArr()));
                        };
                        if (_12 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_12.value0.value0), _12.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_159) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_159["__superclass_Prelude.Bind_1"]())(listen(m))(function (_11) {
                    return Prelude["return"](__dict_Monad_159)(Prelude["<$>"](Data_Either.functorEither())(function (r) {
                        return new Data_Tuple.Tuple(r, _11.value1);
                    })(_11.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT.create(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT.create(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_160) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(ErrorT.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"](__dict_Functor_160)(Prelude["<$>"](Data_Either.functorEither())(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Functor_163) {
        return function (__dict_Monad_164) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_164["__superclass_Prelude.Bind_1"]())(runErrorT(f))(function (_8) {
                        if (_8 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_164)(new Data_Either.Left(_8.value0));
                        };
                        if (_8 instanceof Data_Either.Right) {
                            return Prelude[">>="](__dict_Monad_164["__superclass_Prelude.Bind_1"]())(runErrorT(v))(function (_7) {
                                return Prelude["return"](__dict_Monad_164)((function () {
                                    if (_7 instanceof Data_Either.Left) {
                                        return new Data_Either.Left(_7.value0);
                                    };
                                    if (_7 instanceof Data_Either.Right) {
                                        return new Data_Either.Right(_8.value0(_7.value0));
                                    };
                                    throw new Error("Failed pattern match");
                                })());
                            });
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return functorErrorT(__dict_Functor_163);
            });
        };
    };
    var bindErrorT = function (__dict_Monad_161) {
        return function (__dict_Error_162) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_161["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_9) {
                        if (_9 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_161)(new Data_Either.Left(_9.value0));
                        };
                        if (_9 instanceof Data_Either.Right) {
                            return runErrorT(f(_9.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT(((__dict_Monad_161["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_161);
            });
        };
    };
    var applicativeErrorT = function (__dict_Functor_165) {
        return function (__dict_Monad_166) {
            return new Prelude.Applicative(function () {
                return applyErrorT(__dict_Functor_165)(__dict_Monad_166);
            }, function (a) {
                return ErrorT.create(Prelude.pure(__dict_Monad_166["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(a)));
            });
        };
    };
    var monadErrorT = function (__dict_Monad_156) {
        return function (__dict_Error_157) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(((__dict_Monad_156["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_156);
            }, function () {
                return bindErrorT(__dict_Monad_156)(__dict_Error_157);
            });
        };
    };
    var altErrorT = function (__dict_Monad_169) {
        return function (__dict_Error_170) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_169["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_169)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_169["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_150) {
        return function (__dict_Error_151) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_150)(__dict_Error_151);
            }, Prelude["return"](__dict_Monad_150)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_151)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_167) {
        return function (__dict_Error_168) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_167)(__dict_Error_168);
            }, function () {
                return applicativeErrorT(((__dict_Monad_167["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_167);
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_154) {
        return function (__dict_Error_155) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_154)(__dict_Error_155);
            }, function () {
                return monadErrorT(__dict_Monad_154)(__dict_Error_155);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        liftCallCCError: liftCallCCError, 
        liftPassError: liftPassError, 
        liftListenError: liftListenError, 
        mapErrorT: mapErrorT, 
        runErrorT: runErrorT, 
        functorErrorT: functorErrorT, 
        applyErrorT: applyErrorT, 
        applicativeErrorT: applicativeErrorT, 
        altErrorT: altErrorT, 
        plusErrorT: plusErrorT, 
        alternativeErrorT: alternativeErrorT, 
        bindErrorT: bindErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = {
        create: function (value) {
            return value;
        }
    };
    var runMaybeT = function (_328) {
        return _328;
    };
    var monadTransMaybeT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_171) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(MaybeT.create)(Prelude.liftM1(__dict_Monad_171)(Data_Maybe.Just.create));
        });
    };
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_173) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_173["__superclass_Prelude.Bind_1"]())(m)(function (_15) {
                    return Prelude["return"](__dict_Monad_173)((function () {
                        if (_15 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr()));
                        };
                        if (_15 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_15.value0.value0), _15.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_174) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_174["__superclass_Prelude.Bind_1"]())(listen(m))(function (_14) {
                    return Prelude["return"](__dict_Monad_174)(Prelude["<$>"](Data_Maybe.functorMaybe())(function (r) {
                        return new Data_Tuple.Tuple(r, _14.value1);
                    })(_14.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT.create($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr())(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT.create(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT.create(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var applicativeMaybeT = function (__dict_Monad_178) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_178);
        }, Prelude["<<<"](Prelude.semigroupoidArr())(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.pure(__dict_Monad_178["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    var applyMaybeT = function (__dict_Monad_177) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_177)), function () {
            return functorMaybeT(__dict_Monad_177);
        });
    };
    var monadMaybeT = function (__dict_Monad_172) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_172);
        }, function () {
            return bindMaybeT(__dict_Monad_172);
        });
    };
    var bindMaybeT = function (__dict_Monad_176) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT.create(Prelude[">>="](__dict_Monad_176["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_13) {
                    if (_13 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_176)(Data_Maybe.Nothing.value);
                    };
                    if (_13 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_13.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_176);
        });
    };
    var functorMaybeT = function (__dict_Monad_175) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_175)));
    };
    return {
        MaybeT: MaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftPassMaybe: liftPassMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        mapMaybeT: mapMaybeT, 
        runMaybeT: runMaybeT, 
        functorMaybeT: functorMaybeT, 
        applyMaybeT: applyMaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        bindMaybeT: bindMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var RWST = {
        create: function (value) {
            return value;
        }
    };
    var runRWST = function (_331) {
        return _331;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_181) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_182) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_183) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_183["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_183)(mkSee(__dict_Monoid_182)(s)(a)(Data_Monoid.mempty(__dict_Monoid_182)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_184) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_184)(function (see) {
                            var _1070 = {};
                            for (var _1071 in see) {
                                if (see.hasOwnProperty(_1071)) {
                                    _1070[_1071] = see[_1071];
                                };
                            };
                            _1070.result = f(see.result);
                            return _1070;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_185) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_185["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_185)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_186) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_186["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_186)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_189) {
        return function (__dict_Semigroup_190) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_189)(Prelude["<$>"](__dict_Apply_189["__superclass_Prelude.Functor_0"]())(function (_329) {
                                return function (see) {
                                    var _1073 = {};
                                    for (var _1074 in see) {
                                        if (see.hasOwnProperty(_1074)) {
                                            _1073[_1074] = see[_1074];
                                        };
                                    };
                                    _1073.result = _329.result(see.result);
                                    _1073.log = Prelude["<>"](__dict_Semigroup_190)(_329.log)(see.log);
                                    return _1073;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_189["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_187) {
        return function (__dict_Semigroup_188) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_187)(runRWST(m)(r)(s))(function (_330) {
                                return Prelude["<$>"]((__dict_Bind_187["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _1078 = {};
                                    for (var _1079 in see$prime) {
                                        if (see$prime.hasOwnProperty(_1079)) {
                                            _1078[_1079] = see$prime[_1079];
                                        };
                                    };
                                    _1078.log = Prelude["<>"](__dict_Semigroup_188)(_330.log)(see$prime.log);
                                    return _1078;
                                })(runRWST(f(_330.result))(r)(_330.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_187["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_188);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_191) {
        return function (__dict_Monoid_192) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_191["__superclass_Prelude.Apply_0"]())(__dict_Monoid_192["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_191)(mkSee(__dict_Monoid_192)(s)(a)(Data_Monoid.mempty(__dict_Monoid_192)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_179) {
        return function (__dict_Monoid_180) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_179["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_180);
            }, function () {
                return bindRWST(__dict_Monad_179["__superclass_Prelude.Bind_1"]())(__dict_Monoid_180["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        withRWST: withRWST, 
        mapRWST: mapRWST, 
        execRWST: execRWST, 
        evalRWST: evalRWST, 
        runRWST: runRWST, 
        mkSee: mkSee, 
        functorRWST: functorRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        applicativeRWST: applicativeRWST, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var writer = function (__dict_Applicative_193) {
        return function (_335) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_193)({
                        state: s, 
                        result: _335.value0, 
                        log: _335.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_194) {
        return function (w) {
            return writer(__dict_Applicative_194)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    var state = function (__dict_Applicative_195) {
        return function (__dict_Monoid_196) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _1086 = f(s);
                        return Prelude.pure(__dict_Applicative_195)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_196)(_1086.value1)(_1086.value0)(Data_Monoid.mempty(__dict_Monoid_196)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Control_Monad_Identity.monadIdentity())(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_197) {
        return function (__dict_Monoid_198) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_197)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_198)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_198)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_199) {
        return function (__dict_Monoid_200) {
            return function (s) {
                return state(__dict_Applicative_199)(__dict_Monoid_200)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_201) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_201["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_333) {
                        return Prelude.pure(__dict_Monad_201["__superclass_Prelude.Applicative_0"]())({
                            state: _333.state, 
                            result: _333.result.value0, 
                            log: _333.result.value1(_333.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_202) {
        return function (__dict_Monoid_203) {
            return function (f) {
                return state(__dict_Applicative_202)(__dict_Monoid_203)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.Identity.create)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_204) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_204["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_334) {
                            return Prelude.pure(__dict_Monad_204["__superclass_Prelude.Applicative_0"]())({
                                state: _334.state, 
                                result: new Data_Tuple.Tuple(_334.result, f(_334.log)), 
                                log: _334.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_205) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_205["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_332) {
                        return Prelude.pure(__dict_Monad_205["__superclass_Prelude.Applicative_0"]())({
                            state: _332.state, 
                            result: new Data_Tuple.Tuple(_332.result, _332.log), 
                            log: _332.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_206) {
        return function (__dict_Monoid_207) {
            return function (f) {
                return state(__dict_Applicative_206)(__dict_Monoid_207)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_208) {
        return function (__dict_Monoid_209) {
            return state(__dict_Applicative_208)(__dict_Monoid_209)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Control_Monad_Identity.monadIdentity())(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Control_Monad_Identity.monadIdentity())(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_210) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_210["__superclass_Prelude.Applicative_0"]())((function () {
                                var _1103 = {};
                                for (var _1104 in see) {
                                    if (see.hasOwnProperty(_1104)) {
                                        _1103[_1104] = see[_1104];
                                    };
                                };
                                _1103.log = f(see.log);
                                return _1103;
                            })());
                        });
                    };
                };
            };
        };
    };
    var ask = function (__dict_Applicative_211) {
        return function (__dict_Monoid_212) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_211)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_212)(s)(r)(Data_Monoid.mempty(__dict_Monoid_212)));
                };
            };
        };
    };
    return {
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        reader: reader, 
        local: local, 
        ask: ask, 
        withRWS: withRWS, 
        mapRWS: mapRWS, 
        execRWS: execRWS, 
        evalRWS: evalRWS, 
        runRWS: runRWS, 
        rws: rws
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var StateT = {
        create: function (value) {
            return value;
        }
    };
    var runStateT = function (_338) {
        return _338;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr())(runStateT(s))(f));
        };
    };
    var monadTransStateT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_215) {
            return function (m) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_215["__superclass_Prelude.Bind_1"]())(m)(function (_17) {
                        return Prelude["return"](__dict_Monad_215)(new Data_Tuple.Tuple(_17, s));
                    });
                };
            };
        });
    };
    var mapStateT = function (f) {
        return function (m) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr())(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_218) {
        return function (pass) {
            return function (m) {
                return StateT.create(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_218["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_19) {
                        return Prelude["return"](__dict_Monad_218)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_19.value0.value0, _19.value1), _19.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_219) {
        return function (listen) {
            return function (m) {
                return StateT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_219["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_18) {
                        return Prelude["return"](__dict_Monad_219)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_18.value0.value0, _18.value1), _18.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT.create(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = function () {
        return new Control_Lazy.Lazy1(function (f) {
            return StateT.create(function (s) {
                return runStateT(f(Prelude.unit))(s);
            });
        });
    };
    var execStateT = function (__dict_Monad_221) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_221["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_337) {
                    return Prelude["return"](__dict_Monad_221)(_337.value1);
                });
            };
        };
    };
    var evalStateT = function (__dict_Monad_222) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_222["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_336) {
                    return Prelude["return"](__dict_Monad_222)(_336.value0);
                });
            };
        };
    };
    var applicativeStateT = function (__dict_Monad_225) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_225);
        }, function (a) {
            return StateT.create(function (s) {
                return Prelude["return"](__dict_Monad_225)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var applyStateT = function (__dict_Monad_224) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_224)), function () {
            return functorStateT(__dict_Monad_224);
        });
    };
    var monadStateT = function (__dict_Monad_216) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_216);
        }, function () {
            return bindStateT(__dict_Monad_216);
        });
    };
    var bindStateT = function (__dict_Monad_223) {
        return new Prelude.Bind(function (_339) {
            return function (_340) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_223["__superclass_Prelude.Bind_1"]())(_339(s))(function (_16) {
                        return runStateT(_340(_16.value0))(_16.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_223);
        });
    };
    var functorStateT = function (__dict_Monad_220) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_220)));
    };
    var altStateT = function (__dict_Monad_228) {
        return function (__dict_Alt_229) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT.create(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_229)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_228);
            });
        };
    };
    var plusStateT = function (__dict_Monad_213) {
        return function (__dict_Plus_214) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_213)(__dict_Plus_214["__superclass_Control.Alt.Alt_0"]());
            }, StateT.create(function (_) {
                return Control_Plus.empty(__dict_Plus_214);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_226) {
        return function (__dict_Alternative_227) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_226)(__dict_Alternative_227["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_226);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_217) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_217["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_217["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_217["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCallCCState: liftCallCCState, 
        liftPassState: liftPassState, 
        liftListenState: liftListenState, 
        liftCatchState: liftCatchState, 
        withStateT: withStateT, 
        mapStateT: mapStateT, 
        execStateT: execStateT, 
        evalStateT: evalStateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        altStateT: altStateT, 
        plusStateT: plusStateT, 
        alternativeStateT: alternativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadTransStateT: monadTransStateT, 
        lazy1StateT: lazy1StateT
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Tuple = PS.Data_Tuple;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        withState: withState, 
        mapState: mapState, 
        execState: execState, 
        evalState: evalState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = {
        create: function (value) {
            return value;
        }
    };
    var runWriterT = function (_342) {
        return _342;
    };
    var monadTransWriterT = function (__dict_Monoid_234) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_235) {
            return function (m) {
                return WriterT.create(Prelude[">>="](__dict_Monad_235["__superclass_Prelude.Bind_1"]())(m)(function (_22) {
                    return Prelude["return"](__dict_Monad_235)(new Data_Tuple.Tuple(_22, Data_Monoid.mempty(__dict_Monoid_234)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT.create(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT.create($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_238) {
        return function (callCC) {
            return function (f) {
                return WriterT.create(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT.create(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_238))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_239) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_239)(function (_341) {
                return new Data_Tuple.Tuple(f(_341.value0), _341.value1);
            }));
        });
    };
    var applyWriterT = function (__dict_Monoid_242) {
        return function (__dict_Apply_243) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT.create((function () {
                        var k = function (_343) {
                            return function (_344) {
                                return new Data_Tuple.Tuple(_343.value0(_344.value0), Prelude["<>"](__dict_Monoid_242["__superclass_Prelude.Semigroup_0"]())(_343.value1)(_344.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_243)(Prelude["<$>"](__dict_Apply_243["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_243["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_240) {
        return function (__dict_Monad_241) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT.create(Prelude[">>="](__dict_Monad_241["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_21) {
                        return Prelude[">>="](__dict_Monad_241["__superclass_Prelude.Bind_1"]())(runWriterT(k(_21.value0)))(function (_20) {
                            return Prelude["return"](__dict_Monad_241)(new Data_Tuple.Tuple(_20.value0, Prelude["<>"](__dict_Monoid_240["__superclass_Prelude.Semigroup_0"]())(_21.value1)(_20.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_240)((__dict_Monad_241["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_244) {
        return function (__dict_Applicative_245) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_244)(__dict_Applicative_245["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT.create(Prelude.pure(__dict_Applicative_245)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_244))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_232) {
        return function (__dict_Monad_233) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_232)(__dict_Monad_233["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_232)(__dict_Monad_233);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_248) {
        return function (__dict_Alt_249) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT.create(Control_Alt["<|>"](__dict_Alt_249)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_249["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_230) {
        return function (__dict_Plus_231) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_230)(__dict_Plus_231["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_231));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_246) {
        return function (__dict_Alternative_247) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_246)(__dict_Alternative_247["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_246)(__dict_Alternative_247["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_236) {
        return function (__dict_MonadPlus_237) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_236)(__dict_MonadPlus_237["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_236)(__dict_MonadPlus_237["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT, 
        altWriterT: altWriterT, 
        plusWriterT: plusWriterT, 
        alternativeWriterT: alternativeWriterT, 
        bindWriterT: bindWriterT, 
        monadWriterT: monadWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadCont(callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_250) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_251) {
        return function (__dict_MonadCont_252) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_252)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_253) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_253)));
    };
    var monadContReaderT = function (__dict_MonadCont_254) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_254)));
    };
    var monadContStateT = function (__dict_MonadCont_255) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_255)));
    };
    var monadWriterT = function (__dict_Monoid_256) {
        return function (__dict_MonadCont_257) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_256)(callCC(__dict_MonadCont_257)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadError(catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_258) {
        return function (__dict_Error_259) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT.create(Prelude[">>="](__dict_Monad_258["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_23) {
                        if (_23 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_23.value0));
                        };
                        if (_23 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_258)(new Data_Either.Right(_23.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT.create(Prelude["return"](__dict_Monad_258)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_260) {
        return new MonadError(function (_345) {
            return function (_346) {
                if (_345 instanceof Data_Either.Left) {
                    return _346(_345.value0);
                };
                if (_345 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_345.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_261) {
        return function (__dict_MonadError_262) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_262)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_261)(throwError(__dict_MonadError_262)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_263) {
        return function (__dict_MonadError_264) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_264)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT())(__dict_Monad_263)(throwError(__dict_MonadError_264)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_265) {
        return function (__dict_MonadError_266) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_266)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_265)(throwError(__dict_MonadError_266)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_267) {
        return function (__dict_Monoid_268) {
            return function (__dict_MonadError_269) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_269)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_268))(__dict_Monad_267)(throwError(__dict_MonadError_269)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        throwError: throwError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorWriterT: monadErrorWriterT, 
        monadErrorStateT: monadErrorStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadReader(ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_270) {
        return new MonadReader(Prelude["return"](__dict_Monad_270), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_271) {
        return function (__dict_Monoid_272) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_271["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_272), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = function () {
        return new MonadReader(Prelude.id(Prelude.categoryArr()), Prelude[">>>"](Prelude.semigroupoidArr()));
    };
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_273) {
        return function (__dict_Error_274) {
            return function (__dict_MonadReader_275) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_274))(__dict_Monad_273)(ask(__dict_MonadReader_275)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_275)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_276) {
        return function (__dict_MonadReader_277) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_276)(ask(__dict_MonadReader_277)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_277)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_278) {
        return function (__dict_MonadReader_279) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_278)(ask(__dict_MonadReader_279)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_279)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_280) {
        return function (__dict_Monoid_281) {
            return function (__dict_MonadReader_282) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_281))(__dict_Monad_280)(ask(__dict_MonadReader_282)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_282)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_283) {
        return function (__dict_MonadReader_284) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_283["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_284))(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["return"](__dict_Monad_283))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        reader: reader, 
        local: local, 
        ask: ask, 
        monadReaderFun: monadReaderFun, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderWriterT: monadReaderWriterT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderRWST: monadReaderRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadState(state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_285) {
        return function (__dict_MonadState_286) {
            return function (s) {
                return state(__dict_MonadState_286)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_287) {
        return function (__dict_Monoid_288) {
            return function (__dict_MonadState_289) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_288))(__dict_Monad_287)(state(__dict_MonadState_289)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_290) {
        return function (__dict_MonadState_291) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_290)(state(__dict_MonadState_291)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_292) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT.create(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["return"](__dict_Monad_292))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_293) {
        return function (__dict_MonadState_294) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT())(__dict_Monad_293)(state(__dict_MonadState_294)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_295) {
        return function (__dict_Monoid_296) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_295["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_296));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_297) {
        return function (__dict_MonadState_298) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_297)(state(__dict_MonadState_298)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_299) {
        return function (__dict_Error_300) {
            return function (__dict_MonadState_301) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_300))(__dict_Monad_299)(state(__dict_MonadState_301)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_302) {
        return function (__dict_MonadState_303) {
            return function (f) {
                return state(__dict_MonadState_303)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_304) {
        return function (__dict_MonadState_305) {
            return function (f) {
                return state(__dict_MonadState_305)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_306) {
        return function (__dict_MonadState_307) {
            return state(__dict_MonadState_307)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateReaderT: monadStateReaderT, 
        monadStateWriterT: monadStateWriterT, 
        monadStateRWST: monadStateRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        mapWriter: mapWriter, 
        execWriter: execWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    function MonadWriter(listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_308) {
        return function (__dict_Monad_309) {
            return function (__dict_MonadWriter_310) {
                return function (w) {
                    return writer(__dict_MonadWriter_310)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_311) {
        return function (__dict_Monad_312) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_312["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_26) {
                    return Prelude["return"](__dict_Monad_312)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_26.value0, _26.value1), _26.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_312["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_27) {
                    return Prelude["return"](__dict_Monad_312)(new Data_Tuple.Tuple(_27.value0.value0, _27.value0.value1(_27.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Writer_Trans.WriterT.create)(Prelude["return"](__dict_Monad_312)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_313) {
        return function (__dict_Monoid_314) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_313), Control_Monad_RWS.pass(__dict_Monad_313), Control_Monad_RWS.writer(__dict_Monad_313["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_315) {
        return function (__dict_Monad_316) {
            return function (__dict_MonadWriter_317) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_316["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_317)(m))(function (_24) {
                            return Prelude["return"](__dict_Monad_316)(new Data_Tuple.Tuple(_24.value0, f(_24.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_318) {
        return function (__dict_Error_319) {
            return function (__dict_MonadWriter_320) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_318)(listen(__dict_MonadWriter_320)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_318)(pass(__dict_MonadWriter_320)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_319))(__dict_Monad_318)(writer(__dict_MonadWriter_320)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_321) {
        return function (__dict_MonadWriter_322) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_321)(listen(__dict_MonadWriter_322)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_321)(pass(__dict_MonadWriter_322)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_321)(writer(__dict_MonadWriter_322)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_323) {
        return function (__dict_MonadWriter_324) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_324)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_324)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT())(__dict_Monad_323)(writer(__dict_MonadWriter_324)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_325) {
        return function (__dict_MonadWriter_326) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_325)(listen(__dict_MonadWriter_326)), Control_Monad_State_Trans.liftPassState(__dict_Monad_325)(pass(__dict_MonadWriter_326)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_325)(writer(__dict_MonadWriter_326)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_327) {
        return function (__dict_Monad_328) {
            return function (__dict_MonadWriter_329) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_329)(Prelude[">>="](__dict_Monad_328["__superclass_Prelude.Bind_1"]())(m)(function (_25) {
                            return Prelude["return"](__dict_Monad_328)(new Data_Tuple.Tuple(_25, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        monadWriterWriterT: monadWriterWriterT, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterRWST: monadWriterRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadRWS(__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_330) {
        return function (__dict_Monoid_331) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_330)(__dict_Monoid_331);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_330)(__dict_Monoid_331);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_330)(__dict_Monoid_331);
            }, function () {
                return __dict_Monoid_331;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_330)(__dict_Monoid_331);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_332) {
        return function (__dict_Monoid_333) {
            return function (__dict_MonadRWS_334) {
                return function (__dict_MonadReader_335) {
                    return function (__dict_MonadWriter_336) {
                        return function (__dict_MonadState_337) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_332)(__dict_MonadReader_335);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_332)(__dict_MonadState_337);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_332)(__dict_MonadWriter_336);
                            }, function () {
                                return __dict_Monoid_333;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_332);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_338) {
        return function (__dict_Monoid_339) {
            return function (__dict_MonadRWS_340) {
                return function (__dict_MonadReader_341) {
                    return function (__dict_MonadWriter_342) {
                        return function (__dict_MonadState_343) {
                            return function (__dict_Error_344) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_338)(__dict_Error_344)(__dict_MonadReader_341);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_338)(__dict_Error_344)(__dict_MonadState_343);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_338)(__dict_Error_344)(__dict_MonadWriter_342);
                                }, function () {
                                    return __dict_Monoid_339;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_338)(__dict_Error_344);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSRWST: monadRWSRWST, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT
    };
})();
var PS = PS || {};
PS.Data_Bifoldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Monoid_Any = PS.Data_Monoid_Any;
    var Data_Monoid_All = PS.Data_Monoid_All;
    function Bifoldable(bifoldMap, bifoldl, bifoldr) {
        this.bifoldMap = bifoldMap;
        this.bifoldl = bifoldl;
        this.bifoldr = bifoldr;
    };
    var bifoldr = function (dict) {
        return dict.bifoldr;
    };
    var bitraverse_ = function (__dict_Bifoldable_345) {
        return function (__dict_Applicative_346) {
            return function (f) {
                return function (g) {
                    return bifoldr(__dict_Bifoldable_345)(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Apply["*>"](__dict_Applicative_346["__superclass_Prelude.Apply_0"]()))(f))(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Apply["*>"](__dict_Applicative_346["__superclass_Prelude.Apply_0"]()))(g))(Prelude.pure(__dict_Applicative_346)(Prelude.unit));
                };
            };
        };
    };
    var bifor_ = function (__dict_Bifoldable_347) {
        return function (__dict_Applicative_348) {
            return function (t) {
                return function (f) {
                    return function (g) {
                        return bitraverse_(__dict_Bifoldable_347)(__dict_Applicative_348)(f)(g)(t);
                    };
                };
            };
        };
    };
    var bisequence_ = function (__dict_Bifoldable_349) {
        return function (__dict_Applicative_350) {
            return bitraverse_(__dict_Bifoldable_349)(__dict_Applicative_350)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        };
    };
    var bifoldl = function (dict) {
        return dict.bifoldl;
    };
    var bifoldableTuple = function () {
        return new Bifoldable(function (__dict_Monoid_351) {
            return function (_347) {
                return function (_348) {
                    return function (_349) {
                        return Prelude["<>"](__dict_Monoid_351["__superclass_Prelude.Semigroup_0"]())(_347(_349.value0))(_348(_349.value1));
                    };
                };
            };
        }, function (_354) {
            return function (_355) {
                return function (_356) {
                    return function (_357) {
                        return _355(_354(_356)(_357.value0))(_357.value1);
                    };
                };
            };
        }, function (_350) {
            return function (_351) {
                return function (_352) {
                    return function (_353) {
                        return _350(_353.value0)(_351(_353.value1)(_352));
                    };
                };
            };
        });
    };
    var bifoldableEither = function () {
        return new Bifoldable(function (__dict_Monoid_352) {
            return function (_358) {
                return function (_359) {
                    return function (_360) {
                        if (_360 instanceof Data_Either.Left) {
                            return _358(_360.value0);
                        };
                        if (_360 instanceof Data_Either.Right) {
                            return _359(_360.value0);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        }, function (_365) {
            return function (_366) {
                return function (_367) {
                    return function (_368) {
                        if (_368 instanceof Data_Either.Left) {
                            return _365(_367)(_368.value0);
                        };
                        if (_368 instanceof Data_Either.Right) {
                            return _366(_367)(_368.value0);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        }, function (_361) {
            return function (_362) {
                return function (_363) {
                    return function (_364) {
                        if (_364 instanceof Data_Either.Left) {
                            return _361(_364.value0)(_363);
                        };
                        if (_364 instanceof Data_Either.Right) {
                            return _362(_364.value0)(_363);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var bifoldMap = function (dict) {
        return dict.bifoldMap;
    };
    var bifold = function (__dict_Bifoldable_353) {
        return function (__dict_Monoid_354) {
            return bifoldMap(__dict_Bifoldable_353)(__dict_Monoid_354)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        };
    };
    var biany = function (__dict_Bifoldable_355) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Any.runAny)(bifoldMap(__dict_Bifoldable_355)(Data_Monoid_Any.monoidAny())(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Any.Any.create)(p))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Any.Any.create)(q)));
            };
        };
    };
    var biall = function (__dict_Bifoldable_356) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_All.runAll)(bifoldMap(__dict_Bifoldable_356)(Data_Monoid_All.monoidAll())(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_All.All.create)(p))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_All.All.create)(q)));
            };
        };
    };
    return {
        Bifoldable: Bifoldable, 
        biall: biall, 
        biany: biany, 
        bisequence_: bisequence_, 
        bifor_: bifor_, 
        bitraverse_: bitraverse_, 
        bifold: bifold, 
        bifoldMap: bifoldMap, 
        bifoldl: bifoldl, 
        bifoldr: bifoldr, 
        bifoldableTuple: bifoldableTuple, 
        bifoldableEither: bifoldableEither
    };
})();
var PS = PS || {};
PS.Data_Bifunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    function Bifunctor(bimap) {
        this.bimap = bimap;
    };
    var bimap = function (dict) {
        return dict.bimap;
    };
    var lmap = function (__dict_Bifunctor_357) {
        return function (f) {
            return bimap(__dict_Bifunctor_357)(f)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var rmap = function (__dict_Bifunctor_358) {
        return bimap(__dict_Bifunctor_358)(Prelude.id(Prelude.categoryArr()));
    };
    var bifunctorTuple = function () {
        return new Bifunctor(function (_372) {
            return function (_373) {
                return function (_374) {
                    return new Data_Tuple.Tuple(_372(_374.value0), _373(_374.value1));
                };
            };
        });
    };
    var bifunctorEither = function () {
        return new Bifunctor(function (_369) {
            return function (_370) {
                return function (_371) {
                    if (_371 instanceof Data_Either.Left) {
                        return new Data_Either.Left(_369(_371.value0));
                    };
                    if (_371 instanceof Data_Either.Right) {
                        return new Data_Either.Right(_370(_371.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    return {
        Bifunctor: Bifunctor, 
        rmap: rmap, 
        lmap: lmap, 
        bimap: bimap, 
        bifunctorEither: bifunctorEither, 
        bifunctorTuple: bifunctorTuple
    };
})();
var PS = PS || {};
PS.Control_Biapply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Tuple = PS.Data_Tuple;
    function Biapply($less$less$times$greater$greater, __superclass_Data$dotBifunctor$dotBifunctor_0) {
        this["<<*>>"] = $less$less$times$greater$greater;
        this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    };
    var $less$less$times$greater$greater = function (dict) {
        return dict["<<*>>"];
    };
    var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryArr());
    var $less$less$times = function (__dict_Biapply_359) {
        return function (a) {
            return function (b) {
                return $less$less$times$greater$greater(__dict_Biapply_359)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_359["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
            };
        };
    };
    var $times$greater$greater = function (__dict_Biapply_360) {
        return function (a) {
            return function (b) {
                return $less$less$times$greater$greater(__dict_Biapply_360)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_360["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr())))(Prelude["const"](Prelude.id(Prelude.categoryArr()))))(a))(b);
            };
        };
    };
    var bilift3 = function (__dict_Biapply_361) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return function (b) {
                        return function (c) {
                            return $less$less$times$greater$greater(__dict_Biapply_361)($less$less$times$greater$greater(__dict_Biapply_361)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_361["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                        };
                    };
                };
            };
        };
    };
    var bilift2 = function (__dict_Biapply_362) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return function (b) {
                        return $less$less$times$greater$greater(__dict_Biapply_362)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_362["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                    };
                };
            };
        };
    };
    var biapplyTuple = function () {
        return new Biapply(function (_375) {
            return function (_376) {
                return new Data_Tuple.Tuple(_375.value0(_376.value0), _375.value1(_376.value1));
            };
        }, Data_Bifunctor.bifunctorTuple);
    };
    return {
        Biapply: Biapply, 
        bilift3: bilift3, 
        bilift2: bilift2, 
        "<<*": $less$less$times, 
        "*>>": $times$greater$greater, 
        "<<*>>": $less$less$times$greater$greater, 
        "<<$>>": $less$less$dollar$greater$greater, 
        biapplyTuple: biapplyTuple
    };
})();
var PS = PS || {};
PS.Control_Biapplicative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Biapply = PS.Control_Biapply;
    function Biapplicative(__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
        this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
        this.bipure = bipure;
    };
    var bipure = function (dict) {
        return dict.bipure;
    };
    var biapplicativeTuple = function () {
        return new Biapplicative(Control_Biapply.biapplyTuple, Data_Tuple.Tuple.create);
    };
    return {
        Biapplicative: Biapplicative, 
        bipure: bipure, 
        biapplicativeTuple: biapplicativeTuple
    };
})();
var PS = PS || {};
PS.Data_Bitraversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Either = PS.Data_Either;
    function Bitraversable(__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
        this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
        this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
        this.bisequence = bisequence;
        this.bitraverse = bitraverse;
    };
    var bitraverse = function (dict) {
        return dict.bitraverse;
    };
    var bitraversableTuple = function () {
        return new Bitraversable(Data_Bifoldable.bifoldableTuple, Data_Bifunctor.bifunctorTuple, function (__dict_Applicative_364) {
            return function (_380) {
                return Prelude["<*>"](__dict_Applicative_364["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_364["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create)(_380.value0))(_380.value1);
            };
        }, function (__dict_Applicative_363) {
            return function (_377) {
                return function (_378) {
                    return function (_379) {
                        return Prelude["<*>"](__dict_Applicative_363["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_363["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create)(_377(_379.value0)))(_378(_379.value1));
                    };
                };
            };
        });
    };
    var bitraversableEither = function () {
        return new Bitraversable(Data_Bifoldable.bifoldableEither, Data_Bifunctor.bifunctorEither, function (__dict_Applicative_366) {
            return function (_384) {
                if (_384 instanceof Data_Either.Left) {
                    return Prelude["<$>"]((__dict_Applicative_366["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_384.value0);
                };
                if (_384 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_366["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_384.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_365) {
            return function (_381) {
                return function (_382) {
                    return function (_383) {
                        if (_383 instanceof Data_Either.Left) {
                            return Prelude["<$>"]((__dict_Applicative_365["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_381(_383.value0));
                        };
                        if (_383 instanceof Data_Either.Right) {
                            return Prelude["<$>"]((__dict_Applicative_365["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_382(_383.value0));
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var bisequence = function (dict) {
        return dict.bisequence;
    };
    var bifor = function (__dict_Bitraversable_367) {
        return function (__dict_Applicative_368) {
            return function (t) {
                return function (f) {
                    return function (g) {
                        return bitraverse(__dict_Bitraversable_367)(__dict_Applicative_368)(f)(g)(t);
                    };
                };
            };
        };
    };
    return {
        Bitraversable: Bitraversable, 
        bifor: bifor, 
        bisequence: bisequence, 
        bitraverse: bitraverse, 
        bitraversableTuple: bitraversableTuple, 
        bitraversableEither: bitraversableEither
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Strong = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor = PS.Data_Profunctor;
    function Strong(__superclass_Data$dotProfunctor$dotProfunctor_0, first$prime, second$prime) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this["first'"] = first$prime;
        this["second'"] = second$prime;
    };
    var strongArr = function () {
        return new Strong(Data_Profunctor.profunctorArr, function (_385) {
            return function (_386) {
                return new Data_Tuple.Tuple(_385(_386.value0), _386.value1);
            };
        }, Prelude["<$>"](Data_Tuple.functorTuple()));
    };
    var second$prime = function (dict) {
        return dict["second'"];
    };
    var first$prime = function (dict) {
        return dict["first'"];
    };
    return {
        Strong: Strong, 
        "second'": second$prime, 
        "first'": first$prime, 
        strongArr: strongArr
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_369) {
        return new Prelude.Show(function (_394) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_369))(_394) + ")");
        });
    };
    var semigroupFirst = function () {
        return new Prelude.Semigroup(function (_395) {
            return function (_396) {
                if (_395 instanceof Data_Maybe.Just) {
                    return _395;
                };
                return _396;
            };
        });
    };
    var runFirst = function (_387) {
        return _387;
    };
    var monoidFirst = function () {
        return new Data_Monoid.Monoid(semigroupFirst, Data_Maybe.Nothing.value);
    };
    var eqFirst = function (__dict_Eq_371) {
        return new Prelude.Eq(function (_390) {
            return function (_391) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_371))(_390)(_391);
            };
        }, function (_388) {
            return function (_389) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_371))(_388)(_389);
            };
        });
    };
    var ordFirst = function (__dict_Ord_370) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_370["__superclass_Prelude.Eq_0"]());
        }, function (_392) {
            return function (_393) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_370))(_392)(_393);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Monoid_First = PS.Data_Monoid_First;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_372) {
        return function (__dict_Foldable_373) {
            return function (f) {
                return foldr(__dict_Foldable_373)(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Apply["*>"](__dict_Applicative_372["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_372)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_374) {
        return function (__dict_Foldable_375) {
            return Prelude.flip(traverse_(__dict_Applicative_374)(__dict_Foldable_375));
        };
    };
    var sequence_ = function (__dict_Applicative_376) {
        return function (__dict_Foldable_377) {
            return traverse_(__dict_Applicative_376)(__dict_Foldable_377)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var mconcat = function (__dict_Foldable_378) {
        return function (__dict_Monoid_379) {
            return foldl(__dict_Foldable_378)(Prelude["<>"](__dict_Monoid_379["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_379));
        };
    };
    var or = function (__dict_Foldable_380) {
        return foldl(__dict_Foldable_380)(Prelude["||"](Prelude.boolLikeBoolean()))(false);
    };
    var product = function (__dict_Foldable_381) {
        return foldl(__dict_Foldable_381)(Prelude["*"](Prelude.numNumber()))(1);
    };
    var sum = function (__dict_Foldable_382) {
        return foldl(__dict_Foldable_382)(Prelude["+"](Prelude.numNumber()))(0);
    };
    var foldableTuple = function () {
        return new Foldable(function (__dict_Monoid_383) {
            return function (_428) {
                return function (_429) {
                    return _428(_429.value1);
                };
            };
        }, function (_425) {
            return function (_426) {
                return function (_427) {
                    return _425(_426)(_427.value1);
                };
            };
        }, function (_422) {
            return function (_423) {
                return function (_424) {
                    return _422(_424.value1)(_423);
                };
            };
        });
    };
    var foldableRef = function () {
        return new Foldable(function (__dict_Monoid_384) {
            return function (_420) {
                return function (_421) {
                    return _420(_421);
                };
            };
        }, function (_417) {
            return function (_418) {
                return function (_419) {
                    return _417(_418)(_419);
                };
            };
        }, function (_414) {
            return function (_415) {
                return function (_416) {
                    return _414(_416)(_415);
                };
            };
        });
    };
    var foldableMaybe = function () {
        return new Foldable(function (__dict_Monoid_385) {
            return function (_412) {
                return function (_413) {
                    if (_413 instanceof Data_Maybe.Nothing) {
                        return Data_Monoid.mempty(__dict_Monoid_385);
                    };
                    if (_413 instanceof Data_Maybe.Just) {
                        return _412(_413.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_409) {
            return function (_410) {
                return function (_411) {
                    if (_411 instanceof Data_Maybe.Nothing) {
                        return _410;
                    };
                    if (_411 instanceof Data_Maybe.Just) {
                        return _409(_410)(_411.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_406) {
            return function (_407) {
                return function (_408) {
                    if (_408 instanceof Data_Maybe.Nothing) {
                        return _407;
                    };
                    if (_408 instanceof Data_Maybe.Just) {
                        return _406(_408.value0)(_407);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var foldableEither = function () {
        return new Foldable(function (__dict_Monoid_386) {
            return function (_404) {
                return function (_405) {
                    if (_405 instanceof Data_Either.Left) {
                        return Data_Monoid.mempty(__dict_Monoid_386);
                    };
                    if (_405 instanceof Data_Either.Right) {
                        return _404(_405.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_401) {
            return function (_402) {
                return function (_403) {
                    if (_403 instanceof Data_Either.Left) {
                        return _402;
                    };
                    if (_403 instanceof Data_Either.Right) {
                        return _401(_402)(_403.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_398) {
            return function (_399) {
                return function (_400) {
                    if (_400 instanceof Data_Either.Left) {
                        return _399;
                    };
                    if (_400 instanceof Data_Either.Right) {
                        return _398(_400.value0)(_399);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var foldableArray = function () {
        return new Foldable(function (__dict_Monoid_387) {
            return function (f) {
                return function (xs) {
                    return foldr(foldableArray())(function (x) {
                        return function (acc) {
                            return Prelude["<>"](__dict_Monoid_387["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                        };
                    })(Data_Monoid.mempty(__dict_Monoid_387))(xs);
                };
            };
        }, function (f) {
            return function (z) {
                return function (xs) {
                    return foldlArray(f)(z)(xs);
                };
            };
        }, function (f) {
            return function (z) {
                return function (xs) {
                    return foldrArray(f)(z)(xs);
                };
            };
        });
    };
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_388) {
        return function (__dict_Foldable_389) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_389)(Data_Monoid_First.monoidFirst())(function (_397) {
                        return Prelude["=="](__dict_Eq_388)(a)(_397.value0) ? new Data_Maybe.Just(_397.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_390) {
        return function (__dict_Monoid_391) {
            return foldMap(__dict_Foldable_390)(__dict_Monoid_391)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var find = function (__dict_Foldable_392) {
        return function (p) {
            return function (f) {
                var _1296 = foldMap(__dict_Foldable_392)(Data_Monoid.monoidArray())(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_1296.length >= 1) {
                    var _1298 = _1296.slice(1);
                    return new Data_Maybe.Just(_1296[0]);
                };
                if (_1296.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_393) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(or(foldableArray()))(foldMap(__dict_Foldable_393)(Data_Monoid.monoidArray())(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_394) {
        return function (__dict_Foldable_395) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(any(__dict_Foldable_395))(Prelude["=="](__dict_Eq_394));
        };
    };
    var notElem = function (__dict_Eq_396) {
        return function (__dict_Foldable_397) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.not(Prelude.boolLikeBoolean()))(elem(__dict_Eq_396)(__dict_Foldable_397)(x));
            };
        };
    };
    var and = function (__dict_Foldable_398) {
        return foldl(__dict_Foldable_398)(Prelude["&&"](Prelude.boolLikeBoolean()))(true);
    };
    var all = function (__dict_Foldable_399) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(and(foldableArray()))(foldMap(__dict_Foldable_399)(Data_Monoid.monoidArray())(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    function Leaf() {

    };
    Leaf.value = new Leaf();
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    var values = function (_440) {
        if (_440 instanceof Leaf) {
            return [  ];
        };
        if (_440 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray())(values(_440.value0))(Prelude["++"](Data_Array.semigroupArray())([ _440.value2 ])(values(_440.value3)));
        };
        if (_440 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray())(values(_440.value0))(Prelude["++"](Data_Array.semigroupArray())([ _440.value2 ])(Prelude["++"](Data_Array.semigroupArray())(values(_440.value3))(Prelude["++"](Data_Array.semigroupArray())([ _440.value5 ])(values(_440.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_438) {
        if (_438 instanceof Leaf) {
            return [  ];
        };
        if (_438 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray())(toList(_438.value0))(Prelude["++"](Data_Array.semigroupArray())([ new Data_Tuple.Tuple(_438.value1, _438.value2) ])(toList(_438.value3)));
        };
        if (_438 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray())(toList(_438.value0))(Prelude["++"](Data_Array.semigroupArray())([ new Data_Tuple.Tuple(_438.value1, _438.value2) ])(Prelude["++"](Data_Array.semigroupArray())(toList(_438.value3))(Prelude["++"](Data_Array.semigroupArray())([ new Data_Tuple.Tuple(_438.value4, _438.value5) ])(toList(_438.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showTree = function (__dict_Show_400) {
        return function (__dict_Show_401) {
            return function (_432) {
                if (_432 instanceof Leaf) {
                    return "Leaf";
                };
                if (_432 instanceof Two) {
                    return "Two (" + (showTree(__dict_Show_400)(__dict_Show_401)(_432.value0) + (") (" + (Prelude.show(__dict_Show_400)(_432.value1) + (") (" + (Prelude.show(__dict_Show_401)(_432.value2) + (") (" + (showTree(__dict_Show_400)(__dict_Show_401)(_432.value3) + ")")))))));
                };
                if (_432 instanceof Three) {
                    return "Three (" + (showTree(__dict_Show_400)(__dict_Show_401)(_432.value0) + (") (" + (Prelude.show(__dict_Show_400)(_432.value1) + (") (" + (Prelude.show(__dict_Show_401)(_432.value2) + (") (" + (showTree(__dict_Show_400)(__dict_Show_401)(_432.value3) + (") (" + (Prelude.show(__dict_Show_400)(_432.value4) + (") (" + (Prelude.show(__dict_Show_401)(_432.value5) + (") (" + (showTree(__dict_Show_400)(__dict_Show_401)(_432.value6) + ")")))))))))))));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var showMap = function (__dict_Show_402) {
        return function (__dict_Show_403) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_402)(__dict_Show_403)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_404) {
        return function (__copy__434) {
            return function (__copy__435) {
                var __dict_Ord_404 = __copy___dict_Ord_404;
                var _434 = __copy__434;
                var _435 = __copy__435;
                tco: while (true) {
                    if (_435 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_435 instanceof Two && Prelude["=="](__dict_Ord_404["__superclass_Prelude.Eq_0"]())(_434)(_435.value1)) {
                        return new Data_Maybe.Just(_435.value2);
                    };
                    if (_435 instanceof Two && Prelude["<"](__dict_Ord_404)(_434)(_435.value1)) {
                        var __tco___dict_Ord_404 = __dict_Ord_404;
                        var __tco__434 = _434;
                        var __tco__435 = _435.value0;
                        __dict_Ord_404 = __tco___dict_Ord_404;
                        _434 = __tco__434;
                        _435 = __tco__435;
                        continue tco;
                    };
                    if (_435 instanceof Two) {
                        var __tco___dict_Ord_404 = __dict_Ord_404;
                        var __tco__434 = _434;
                        var __tco__435 = _435.value3;
                        __dict_Ord_404 = __tco___dict_Ord_404;
                        _434 = __tco__434;
                        _435 = __tco__435;
                        continue tco;
                    };
                    if (_435 instanceof Three && Prelude["=="](__dict_Ord_404["__superclass_Prelude.Eq_0"]())(_434)(_435.value1)) {
                        return new Data_Maybe.Just(_435.value2);
                    };
                    if (_435 instanceof Three && Prelude["=="](__dict_Ord_404["__superclass_Prelude.Eq_0"]())(_434)(_435.value4)) {
                        return new Data_Maybe.Just(_435.value5);
                    };
                    if (_435 instanceof Three && Prelude["<"](__dict_Ord_404)(_434)(_435.value1)) {
                        var __tco___dict_Ord_404 = __dict_Ord_404;
                        var __tco__434 = _434;
                        var __tco__435 = _435.value0;
                        __dict_Ord_404 = __tco___dict_Ord_404;
                        _434 = __tco__434;
                        _435 = __tco__435;
                        continue tco;
                    };
                    if (_435 instanceof Three && (Prelude["<"](__dict_Ord_404)(_435.value1)(_434) && Prelude["<="](__dict_Ord_404)(_434)(_435.value4))) {
                        var __tco___dict_Ord_404 = __dict_Ord_404;
                        var __tco__434 = _434;
                        var __tco__435 = _435.value3;
                        __dict_Ord_404 = __tco___dict_Ord_404;
                        _434 = __tco__434;
                        _435 = __tco__435;
                        continue tco;
                    };
                    if (_435 instanceof Three) {
                        var __tco___dict_Ord_404 = __dict_Ord_404;
                        var __tco__434 = _434;
                        var __tco__435 = _435.value6;
                        __dict_Ord_404 = __tco___dict_Ord_404;
                        _434 = __tco__434;
                        _435 = __tco__435;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_405) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_405)(k)(m));
            };
        };
    };
    var keys = function (_439) {
        if (_439 instanceof Leaf) {
            return [  ];
        };
        if (_439 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray())(keys(_439.value0))(Prelude["++"](Data_Array.semigroupArray())([ _439.value1 ])(keys(_439.value3)));
        };
        if (_439 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray())(keys(_439.value0))(Prelude["++"](Data_Array.semigroupArray())([ _439.value1 ])(Prelude["++"](Data_Array.semigroupArray())(keys(_439.value3))(Prelude["++"](Data_Array.semigroupArray())([ _439.value4 ])(keys(_439.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var isEmpty = function (_433) {
        if (_433 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var functorMap = function () {
        return new Prelude.Functor(function (_441) {
            return function (_442) {
                if (_442 instanceof Leaf) {
                    return Leaf.value;
                };
                if (_442 instanceof Two) {
                    return new Two(Prelude["<$>"](functorMap())(_441)(_442.value0), _442.value1, _441(_442.value2), Prelude["<$>"](functorMap())(_441)(_442.value3));
                };
                if (_442 instanceof Three) {
                    return new Three(Prelude["<$>"](functorMap())(_441)(_442.value0), _442.value1, _441(_442.value2), Prelude["<$>"](functorMap())(_441)(_442.value3), _442.value4, _441(_442.value5), Prelude["<$>"](functorMap())(_441)(_442.value6));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var map = Prelude["<$>"](functorMap());
    var fromZipper = function (__copy___dict_Ord_406) {
        return function (__copy__436) {
            return function (__copy__437) {
                var __dict_Ord_406 = __copy___dict_Ord_406;
                var _436 = __copy__436;
                var _437 = __copy__437;
                tco: while (true) {
                    if (_436.length === 0) {
                        return _437;
                    };
                    if (_436.length >= 1) {
                        var _1416 = _436.slice(1);
                        if (_436[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_406 = __dict_Ord_406;
                            var __tco__437 = new Two(_437, (_436[0]).value0, (_436[0]).value1, (_436[0]).value2);
                            __dict_Ord_406 = __tco___dict_Ord_406;
                            _436 = _1416;
                            _437 = __tco__437;
                            continue tco;
                        };
                    };
                    if (_436.length >= 1) {
                        var _1421 = _436.slice(1);
                        if (_436[0] instanceof TwoRight) {
                            var __tco___dict_Ord_406 = __dict_Ord_406;
                            var __tco__437 = new Two((_436[0]).value0, (_436[0]).value1, (_436[0]).value2, _437);
                            __dict_Ord_406 = __tco___dict_Ord_406;
                            _436 = _1421;
                            _437 = __tco__437;
                            continue tco;
                        };
                    };
                    if (_436.length >= 1) {
                        var _1429 = _436.slice(1);
                        if (_436[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_406 = __dict_Ord_406;
                            var __tco__437 = new Three(_437, (_436[0]).value0, (_436[0]).value1, (_436[0]).value2, (_436[0]).value3, (_436[0]).value4, (_436[0]).value5);
                            __dict_Ord_406 = __tco___dict_Ord_406;
                            _436 = _1429;
                            _437 = __tco__437;
                            continue tco;
                        };
                    };
                    if (_436.length >= 1) {
                        var _1437 = _436.slice(1);
                        if (_436[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_406 = __dict_Ord_406;
                            var __tco__437 = new Three((_436[0]).value0, (_436[0]).value1, (_436[0]).value2, _437, (_436[0]).value3, (_436[0]).value4, (_436[0]).value5);
                            __dict_Ord_406 = __tco___dict_Ord_406;
                            _436 = _1437;
                            _437 = __tco__437;
                            continue tco;
                        };
                    };
                    if (_436.length >= 1) {
                        var _1445 = _436.slice(1);
                        if (_436[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_406 = __dict_Ord_406;
                            var __tco__437 = new Three((_436[0]).value0, (_436[0]).value1, (_436[0]).value2, (_436[0]).value3, (_436[0]).value4, (_436[0]).value5, _437);
                            __dict_Ord_406 = __tco___dict_Ord_406;
                            _436 = _1445;
                            _437 = __tco__437;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_407) {
        var up = function (__copy___dict_Ord_408) {
            return function (__copy__448) {
                return function (__copy__449) {
                    var __dict_Ord_408 = __copy___dict_Ord_408;
                    var _448 = __copy__448;
                    var _449 = __copy__449;
                    tco: while (true) {
                        if (_448.length === 0) {
                            return new Two(_449.value0, _449.value1, _449.value2, _449.value3);
                        };
                        if (_448.length >= 1) {
                            var _1460 = _448.slice(1);
                            if (_448[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_408)(_1460)(new Three(_449.value0, _449.value1, _449.value2, _449.value3, (_448[0]).value0, (_448[0]).value1, (_448[0]).value2));
                            };
                        };
                        if (_448.length >= 1) {
                            var _1469 = _448.slice(1);
                            if (_448[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_408)(_1469)(new Three((_448[0]).value0, (_448[0]).value1, (_448[0]).value2, _449.value0, _449.value1, _449.value2, _449.value3));
                            };
                        };
                        if (_448.length >= 1) {
                            var _1481 = _448.slice(1);
                            if (_448[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_408 = __dict_Ord_408;
                                var __tco__449 = new KickUp(new Two(_449.value0, _449.value1, _449.value2, _449.value3), (_448[0]).value0, (_448[0]).value1, new Two((_448[0]).value2, (_448[0]).value3, (_448[0]).value4, (_448[0]).value5));
                                __dict_Ord_408 = __tco___dict_Ord_408;
                                _448 = _1481;
                                _449 = __tco__449;
                                continue tco;
                            };
                        };
                        if (_448.length >= 1) {
                            var _1493 = _448.slice(1);
                            if (_448[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_408 = __dict_Ord_408;
                                var __tco__449 = new KickUp(new Two((_448[0]).value0, (_448[0]).value1, (_448[0]).value2, _449.value0), _449.value1, _449.value2, new Two(_449.value3, (_448[0]).value3, (_448[0]).value4, (_448[0]).value5));
                                __dict_Ord_408 = __tco___dict_Ord_408;
                                _448 = _1493;
                                _449 = __tco__449;
                                continue tco;
                            };
                        };
                        if (_448.length >= 1) {
                            var _1505 = _448.slice(1);
                            if (_448[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_408 = __dict_Ord_408;
                                var __tco__449 = new KickUp(new Two((_448[0]).value0, (_448[0]).value1, (_448[0]).value2, (_448[0]).value3), (_448[0]).value4, (_448[0]).value5, new Two(_449.value0, _449.value1, _449.value2, _449.value3));
                                __dict_Ord_408 = __tco___dict_Ord_408;
                                _448 = _1505;
                                _449 = __tco__449;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_409) {
            return function (__copy__444) {
                return function (__copy__445) {
                    return function (__copy__446) {
                        return function (__copy__447) {
                            var __dict_Ord_409 = __copy___dict_Ord_409;
                            var _444 = __copy__444;
                            var _445 = __copy__445;
                            var _446 = __copy__446;
                            var _447 = __copy__447;
                            tco: while (true) {
                                if (_447 instanceof Leaf) {
                                    return up(__dict_Ord_409)(_444)(new KickUp(Leaf.value, _445, _446, Leaf.value));
                                };
                                if (_447 instanceof Two && Prelude["=="](__dict_Ord_409["__superclass_Prelude.Eq_0"]())(_445)(_447.value1)) {
                                    return fromZipper(__dict_Ord_409)(_444)(new Two(_447.value0, _445, _446, _447.value3));
                                };
                                if (_447 instanceof Two && Prelude["<"](__dict_Ord_409)(_445)(_447.value1)) {
                                    var __tco___dict_Ord_409 = __dict_Ord_409;
                                    var __tco__444 = Prelude[":"](new TwoLeft(_447.value1, _447.value2, _447.value3))(_444);
                                    var __tco__445 = _445;
                                    var __tco__446 = _446;
                                    var __tco__447 = _447.value0;
                                    __dict_Ord_409 = __tco___dict_Ord_409;
                                    _444 = __tco__444;
                                    _445 = __tco__445;
                                    _446 = __tco__446;
                                    _447 = __tco__447;
                                    continue tco;
                                };
                                if (_447 instanceof Two) {
                                    var __tco___dict_Ord_409 = __dict_Ord_409;
                                    var __tco__444 = Prelude[":"](new TwoRight(_447.value0, _447.value1, _447.value2))(_444);
                                    var __tco__445 = _445;
                                    var __tco__446 = _446;
                                    var __tco__447 = _447.value3;
                                    __dict_Ord_409 = __tco___dict_Ord_409;
                                    _444 = __tco__444;
                                    _445 = __tco__445;
                                    _446 = __tco__446;
                                    _447 = __tco__447;
                                    continue tco;
                                };
                                if (_447 instanceof Three && Prelude["=="](__dict_Ord_409["__superclass_Prelude.Eq_0"]())(_445)(_447.value1)) {
                                    return fromZipper(__dict_Ord_409)(_444)(new Three(_447.value0, _445, _446, _447.value3, _447.value4, _447.value5, _447.value6));
                                };
                                if (_447 instanceof Three && Prelude["=="](__dict_Ord_409["__superclass_Prelude.Eq_0"]())(_445)(_447.value4)) {
                                    return fromZipper(__dict_Ord_409)(_444)(new Three(_447.value0, _447.value1, _447.value2, _447.value3, _445, _446, _447.value6));
                                };
                                if (_447 instanceof Three && Prelude["<"](__dict_Ord_409)(_445)(_447.value1)) {
                                    var __tco___dict_Ord_409 = __dict_Ord_409;
                                    var __tco__444 = Prelude[":"](new ThreeLeft(_447.value1, _447.value2, _447.value3, _447.value4, _447.value5, _447.value6))(_444);
                                    var __tco__445 = _445;
                                    var __tco__446 = _446;
                                    var __tco__447 = _447.value0;
                                    __dict_Ord_409 = __tco___dict_Ord_409;
                                    _444 = __tco__444;
                                    _445 = __tco__445;
                                    _446 = __tco__446;
                                    _447 = __tco__447;
                                    continue tco;
                                };
                                if (_447 instanceof Three && (Prelude["<"](__dict_Ord_409)(_447.value1)(_445) && Prelude["<="](__dict_Ord_409)(_445)(_447.value4))) {
                                    var __tco___dict_Ord_409 = __dict_Ord_409;
                                    var __tco__444 = Prelude[":"](new ThreeMiddle(_447.value0, _447.value1, _447.value2, _447.value4, _447.value5, _447.value6))(_444);
                                    var __tco__445 = _445;
                                    var __tco__446 = _446;
                                    var __tco__447 = _447.value3;
                                    __dict_Ord_409 = __tco___dict_Ord_409;
                                    _444 = __tco__444;
                                    _445 = __tco__445;
                                    _446 = __tco__446;
                                    _447 = __tco__447;
                                    continue tco;
                                };
                                if (_447 instanceof Three) {
                                    var __tco___dict_Ord_409 = __dict_Ord_409;
                                    var __tco__444 = Prelude[":"](new ThreeRight(_447.value0, _447.value1, _447.value2, _447.value3, _447.value4, _447.value5))(_444);
                                    var __tco__445 = _445;
                                    var __tco__446 = _446;
                                    var __tco__447 = _447.value6;
                                    __dict_Ord_409 = __tco___dict_Ord_409;
                                    _444 = __tco__444;
                                    _445 = __tco__445;
                                    _446 = __tco__446;
                                    _447 = __tco__447;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_407)([  ]);
    };
    var union = function (__dict_Ord_410) {
        return function (m1) {
            return function (m2) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
                    return function (_431) {
                        return insert(__dict_Ord_410)(_431.value0)(_431.value1)(m);
                    };
                })(m2)(toList(m1));
            };
        };
    };
    var eqMap = function (__dict_Eq_411) {
        return function (__dict_Eq_412) {
            return new Prelude.Eq(function (m1) {
                return function (m2) {
                    return !Prelude["=="](eqMap(__dict_Eq_411)(__dict_Eq_412))(m1)(m2);
                };
            }, function (m1) {
                return function (m2) {
                    return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_411)(__dict_Eq_412)))(toList(m1))(toList(m2));
                };
            });
        };
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_413) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
            return function (_430) {
                return insert(__dict_Ord_413)(_430.value0)(_430.value1)(m);
            };
        })(empty);
    };
    var unions = function (__dict_Ord_414) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray())(union(__dict_Ord_414))(empty);
    };
    var $$delete = function (__dict_Ord_415) {
        var up = function (__copy___dict_Ord_416) {
            return function (__copy__453) {
                return function (__copy__454) {
                    var __dict_Ord_416 = __copy___dict_Ord_416;
                    var _453 = __copy__453;
                    var _454 = __copy__454;
                    tco: while (true) {
                        if (_453.length === 0) {
                            return _454;
                        };
                        if (_453.length >= 1) {
                            var _1569 = _453.slice(1);
                            if (_453[0] instanceof TwoLeft && ((_453[0]).value2 instanceof Leaf && _454 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_416)(_1569)(new Two(Leaf.value, (_453[0]).value0, (_453[0]).value1, Leaf.value));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1574 = _453.slice(1);
                            if (_453[0] instanceof TwoRight && ((_453[0]).value0 instanceof Leaf && _454 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_416)(_1574)(new Two(Leaf.value, (_453[0]).value1, (_453[0]).value2, Leaf.value));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1583 = _453.slice(1);
                            if (_453[0] instanceof TwoLeft && (_453[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_416 = __dict_Ord_416;
                                var __tco__454 = new Three(_454, (_453[0]).value0, (_453[0]).value1, (_453[0]).value2.value0, (_453[0]).value2.value1, (_453[0]).value2.value2, (_453[0]).value2.value3);
                                __dict_Ord_416 = __tco___dict_Ord_416;
                                _453 = _1583;
                                _454 = __tco__454;
                                continue tco;
                            };
                        };
                        if (_453.length >= 1) {
                            var _1592 = _453.slice(1);
                            if (_453[0] instanceof TwoRight && (_453[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_416 = __dict_Ord_416;
                                var __tco__454 = new Three((_453[0]).value0.value0, (_453[0]).value0.value1, (_453[0]).value0.value2, (_453[0]).value0.value3, (_453[0]).value1, (_453[0]).value2, _454);
                                __dict_Ord_416 = __tco___dict_Ord_416;
                                _453 = _1592;
                                _454 = __tco__454;
                                continue tco;
                            };
                        };
                        if (_453.length >= 1) {
                            var _1604 = _453.slice(1);
                            if (_453[0] instanceof TwoLeft && (_453[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_416)(_1604)(new Two(new Two(_454, (_453[0]).value0, (_453[0]).value1, (_453[0]).value2.value0), (_453[0]).value2.value1, (_453[0]).value2.value2, new Two((_453[0]).value2.value3, (_453[0]).value2.value4, (_453[0]).value2.value5, (_453[0]).value2.value6)));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1616 = _453.slice(1);
                            if (_453[0] instanceof TwoRight && (_453[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_416)(_1616)(new Two(new Two((_453[0]).value0.value0, (_453[0]).value0.value1, (_453[0]).value0.value2, (_453[0]).value0.value3), (_453[0]).value0.value4, (_453[0]).value0.value5, new Two((_453[0]).value0.value6, (_453[0]).value1, (_453[0]).value2, _454)));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1624 = _453.slice(1);
                            if (_453[0] instanceof ThreeLeft && ((_453[0]).value2 instanceof Leaf && ((_453[0]).value5 instanceof Leaf && _454 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_416)(_1624)(new Three(Leaf.value, (_453[0]).value0, (_453[0]).value1, Leaf.value, (_453[0]).value3, (_453[0]).value4, Leaf.value));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1632 = _453.slice(1);
                            if (_453[0] instanceof ThreeMiddle && ((_453[0]).value0 instanceof Leaf && ((_453[0]).value5 instanceof Leaf && _454 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_416)(_1632)(new Three(Leaf.value, (_453[0]).value1, (_453[0]).value2, Leaf.value, (_453[0]).value3, (_453[0]).value4, Leaf.value));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1640 = _453.slice(1);
                            if (_453[0] instanceof ThreeRight && ((_453[0]).value0 instanceof Leaf && ((_453[0]).value3 instanceof Leaf && _454 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_416)(_1640)(new Three(Leaf.value, (_453[0]).value1, (_453[0]).value2, Leaf.value, (_453[0]).value4, (_453[0]).value5, Leaf.value));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1652 = _453.slice(1);
                            if (_453[0] instanceof ThreeLeft && (_453[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_416)(_1652)(new Two(new Three(_454, (_453[0]).value0, (_453[0]).value1, (_453[0]).value2.value0, (_453[0]).value2.value1, (_453[0]).value2.value2, (_453[0]).value2.value3), (_453[0]).value3, (_453[0]).value4, (_453[0]).value5));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1664 = _453.slice(1);
                            if (_453[0] instanceof ThreeMiddle && (_453[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_416)(_1664)(new Two(new Three((_453[0]).value0.value0, (_453[0]).value0.value1, (_453[0]).value0.value2, (_453[0]).value0.value3, (_453[0]).value1, (_453[0]).value2, _454), (_453[0]).value3, (_453[0]).value4, (_453[0]).value5));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1676 = _453.slice(1);
                            if (_453[0] instanceof ThreeMiddle && (_453[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_416)(_1676)(new Two((_453[0]).value0, (_453[0]).value1, (_453[0]).value2, new Three(_454, (_453[0]).value3, (_453[0]).value4, (_453[0]).value5.value0, (_453[0]).value5.value1, (_453[0]).value5.value2, (_453[0]).value5.value3)));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1688 = _453.slice(1);
                            if (_453[0] instanceof ThreeRight && (_453[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_416)(_1688)(new Two((_453[0]).value0, (_453[0]).value1, (_453[0]).value2, new Three((_453[0]).value3.value0, (_453[0]).value3.value1, (_453[0]).value3.value2, (_453[0]).value3.value3, (_453[0]).value4, (_453[0]).value5, _454)));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1703 = _453.slice(1);
                            if (_453[0] instanceof ThreeLeft && (_453[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_416)(_1703)(new Three(new Two(_454, (_453[0]).value0, (_453[0]).value1, (_453[0]).value2.value0), (_453[0]).value2.value1, (_453[0]).value2.value2, new Two((_453[0]).value2.value3, (_453[0]).value2.value4, (_453[0]).value2.value5, (_453[0]).value2.value6), (_453[0]).value3, (_453[0]).value4, (_453[0]).value5));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1718 = _453.slice(1);
                            if (_453[0] instanceof ThreeMiddle && (_453[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_416)(_1718)(new Three(new Two((_453[0]).value0.value0, (_453[0]).value0.value1, (_453[0]).value0.value2, (_453[0]).value0.value3), (_453[0]).value0.value4, (_453[0]).value0.value5, new Two((_453[0]).value0.value6, (_453[0]).value1, (_453[0]).value2, _454), (_453[0]).value3, (_453[0]).value4, (_453[0]).value5));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1733 = _453.slice(1);
                            if (_453[0] instanceof ThreeMiddle && (_453[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_416)(_1733)(new Three((_453[0]).value0, (_453[0]).value1, (_453[0]).value2, new Two(_454, (_453[0]).value3, (_453[0]).value4, (_453[0]).value5.value0), (_453[0]).value5.value1, (_453[0]).value5.value2, new Two((_453[0]).value5.value3, (_453[0]).value5.value4, (_453[0]).value5.value5, (_453[0]).value5.value6)));
                            };
                        };
                        if (_453.length >= 1) {
                            var _1748 = _453.slice(1);
                            if (_453[0] instanceof ThreeRight && (_453[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_416)(_1748)(new Three((_453[0]).value0, (_453[0]).value1, (_453[0]).value2, new Two((_453[0]).value3.value0, (_453[0]).value3.value1, (_453[0]).value3.value2, (_453[0]).value3.value3), (_453[0]).value3.value4, (_453[0]).value3.value5, new Two((_453[0]).value3.value6, (_453[0]).value4, (_453[0]).value5, _454)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_417) {
            return function (__copy__456) {
                return function (__copy__457) {
                    var __dict_Ord_417 = __copy___dict_Ord_417;
                    var _456 = __copy__456;
                    var _457 = __copy__457;
                    tco: while (true) {
                        if (_457 instanceof Two && (_457.value0 instanceof Leaf && _457.value3 instanceof Leaf)) {
                            return up(__dict_Ord_417)(_456)(Leaf.value);
                        };
                        if (_457 instanceof Two) {
                            var __tco___dict_Ord_417 = __dict_Ord_417;
                            var __tco__456 = Prelude[":"](new TwoRight(_457.value0, _457.value1, _457.value2))(_456);
                            var __tco__457 = _457.value3;
                            __dict_Ord_417 = __tco___dict_Ord_417;
                            _456 = __tco__456;
                            _457 = __tco__457;
                            continue tco;
                        };
                        if (_457 instanceof Three && (_457.value0 instanceof Leaf && (_457.value3 instanceof Leaf && _457.value6 instanceof Leaf))) {
                            return up(__dict_Ord_417)(Prelude[":"](new TwoRight(Leaf.value, _457.value1, _457.value2))(_456))(Leaf.value);
                        };
                        if (_457 instanceof Three) {
                            var __tco___dict_Ord_417 = __dict_Ord_417;
                            var __tco__456 = Prelude[":"](new ThreeRight(_457.value0, _457.value1, _457.value2, _457.value3, _457.value4, _457.value5))(_456);
                            var __tco__457 = _457.value6;
                            __dict_Ord_417 = __tco___dict_Ord_417;
                            _456 = __tco__456;
                            _457 = __tco__457;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_418) {
            return function (__copy__455) {
                var __dict_Ord_418 = __copy___dict_Ord_418;
                var _455 = __copy__455;
                tco: while (true) {
                    if (_455 instanceof Two && _455.value3 instanceof Leaf) {
                        return {
                            key: _455.value1, 
                            value: _455.value2
                        };
                    };
                    if (_455 instanceof Two) {
                        var __tco___dict_Ord_418 = __dict_Ord_418;
                        var __tco__455 = _455.value3;
                        __dict_Ord_418 = __tco___dict_Ord_418;
                        _455 = __tco__455;
                        continue tco;
                    };
                    if (_455 instanceof Three && _455.value6 instanceof Leaf) {
                        return {
                            key: _455.value4, 
                            value: _455.value5
                        };
                    };
                    if (_455 instanceof Three) {
                        var __tco___dict_Ord_418 = __dict_Ord_418;
                        var __tco__455 = _455.value6;
                        __dict_Ord_418 = __tco___dict_Ord_418;
                        _455 = __tco__455;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_419) {
            return function (__copy__450) {
                return function (__copy__451) {
                    return function (__copy__452) {
                        var __dict_Ord_419 = __copy___dict_Ord_419;
                        var _450 = __copy__450;
                        var _451 = __copy__451;
                        var _452 = __copy__452;
                        tco: while (true) {
                            if (_452 instanceof Leaf) {
                                return fromZipper(__dict_Ord_419)(_450)(Leaf.value);
                            };
                            if (_452 instanceof Two && (_452.value0 instanceof Leaf && (_452.value3 instanceof Leaf && Prelude["=="](__dict_Ord_419["__superclass_Prelude.Eq_0"]())(_451)(_452.value1)))) {
                                return up(__dict_Ord_419)(_450)(Leaf.value);
                            };
                            if (_452 instanceof Two && Prelude["=="](__dict_Ord_419["__superclass_Prelude.Eq_0"]())(_451)(_452.value1)) {
                                var max = maxNode(__dict_Ord_419)(_452.value0);
                                return removeMaxNode(__dict_Ord_419)(Prelude[":"](new TwoLeft(max.key, max.value, _452.value3))(_450))(_452.value0);
                            };
                            if (_452 instanceof Two && Prelude["<"](__dict_Ord_419)(_451)(_452.value1)) {
                                var __tco___dict_Ord_419 = __dict_Ord_419;
                                var __tco__450 = Prelude[":"](new TwoLeft(_452.value1, _452.value2, _452.value3))(_450);
                                var __tco__451 = _451;
                                var __tco__452 = _452.value0;
                                __dict_Ord_419 = __tco___dict_Ord_419;
                                _450 = __tco__450;
                                _451 = __tco__451;
                                _452 = __tco__452;
                                continue tco;
                            };
                            if (_452 instanceof Two) {
                                var __tco___dict_Ord_419 = __dict_Ord_419;
                                var __tco__450 = Prelude[":"](new TwoRight(_452.value0, _452.value1, _452.value2))(_450);
                                var __tco__451 = _451;
                                var __tco__452 = _452.value3;
                                __dict_Ord_419 = __tco___dict_Ord_419;
                                _450 = __tco__450;
                                _451 = __tco__451;
                                _452 = __tco__452;
                                continue tco;
                            };
                            if (_452 instanceof Three && (_452.value0 instanceof Leaf && (_452.value3 instanceof Leaf && (_452.value6 instanceof Leaf && Prelude["=="](__dict_Ord_419["__superclass_Prelude.Eq_0"]())(_451)(_452.value1))))) {
                                return fromZipper(__dict_Ord_419)(_450)(new Two(Leaf.value, _452.value4, _452.value5, Leaf.value));
                            };
                            if (_452 instanceof Three && (_452.value0 instanceof Leaf && (_452.value3 instanceof Leaf && (_452.value6 instanceof Leaf && Prelude["=="](__dict_Ord_419["__superclass_Prelude.Eq_0"]())(_451)(_452.value4))))) {
                                return fromZipper(__dict_Ord_419)(_450)(new Two(Leaf.value, _452.value1, _452.value2, Leaf.value));
                            };
                            if (_452 instanceof Three && Prelude["=="](__dict_Ord_419["__superclass_Prelude.Eq_0"]())(_451)(_452.value1)) {
                                var max = maxNode(__dict_Ord_419)(_452.value0);
                                return removeMaxNode(__dict_Ord_419)(Prelude[":"](new ThreeLeft(max.key, max.value, _452.value3, _452.value4, _452.value5, _452.value6))(_450))(_452.value0);
                            };
                            if (_452 instanceof Three && Prelude["=="](__dict_Ord_419["__superclass_Prelude.Eq_0"]())(_451)(_452.value4)) {
                                var max = maxNode(__dict_Ord_419)(_452.value3);
                                return removeMaxNode(__dict_Ord_419)(Prelude[":"](new ThreeMiddle(_452.value0, _452.value1, _452.value2, max.key, max.value, _452.value6))(_450))(_452.value3);
                            };
                            if (_452 instanceof Three && Prelude["<"](__dict_Ord_419)(_451)(_452.value1)) {
                                var __tco___dict_Ord_419 = __dict_Ord_419;
                                var __tco__450 = Prelude[":"](new ThreeLeft(_452.value1, _452.value2, _452.value3, _452.value4, _452.value5, _452.value6))(_450);
                                var __tco__451 = _451;
                                var __tco__452 = _452.value0;
                                __dict_Ord_419 = __tco___dict_Ord_419;
                                _450 = __tco__450;
                                _451 = __tco__451;
                                _452 = __tco__452;
                                continue tco;
                            };
                            if (_452 instanceof Three && (Prelude["<"](__dict_Ord_419)(_452.value1)(_451) && Prelude["<"](__dict_Ord_419)(_451)(_452.value4))) {
                                var __tco___dict_Ord_419 = __dict_Ord_419;
                                var __tco__450 = Prelude[":"](new ThreeMiddle(_452.value0, _452.value1, _452.value2, _452.value4, _452.value5, _452.value6))(_450);
                                var __tco__451 = _451;
                                var __tco__452 = _452.value3;
                                __dict_Ord_419 = __tco___dict_Ord_419;
                                _450 = __tco__450;
                                _451 = __tco__451;
                                _452 = __tco__452;
                                continue tco;
                            };
                            if (_452 instanceof Three) {
                                var __tco___dict_Ord_419 = __dict_Ord_419;
                                var __tco__450 = Prelude[":"](new ThreeRight(_452.value0, _452.value1, _452.value2, _452.value3, _452.value4, _452.value5))(_450);
                                var __tco__451 = _451;
                                var __tco__452 = _452.value6;
                                __dict_Ord_419 = __tco___dict_Ord_419;
                                _450 = __tco__450;
                                _451 = __tco__451;
                                _452 = __tco__452;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_415)([  ]);
    };
    var checkValid = function (tree) {
        var allHeights = function (_443) {
            if (_443 instanceof Leaf) {
                return [ 0 ];
            };
            if (_443 instanceof Two) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray())(allHeights(_443.value0))(allHeights(_443.value3)));
            };
            if (_443 instanceof Three) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray())(allHeights(_443.value0))(Prelude["++"](Data_Array.semigroupArray())(allHeights(_443.value3))(allHeights(_443.value6))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Array.length(Data_Array.nub(Prelude.eqNumber())(allHeights(tree))) === 1;
    };
    var alter = function (__dict_Ord_420) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _1876 = f(lookup(__dict_Ord_420)(k)(m));
                    if (_1876 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_420)(k)(m);
                    };
                    if (_1876 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_420)(k)(_1876.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var update = function (__dict_Ord_421) {
        return function (f) {
            return function (k) {
                return function (m) {
                    return alter(__dict_Ord_421)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
                };
            };
        };
    };
    return {
        map: map, 
        unions: unions, 
        union: union, 
        values: values, 
        keys: keys, 
        update: update, 
        alter: alter, 
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        checkValid: checkValid, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        showTree: showTree, 
        eqMap: eqMap, 
        showMap: showMap, 
        functorMap: functorMap
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_422) {
        return new Prelude.Show(function (_465) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_422))(_465) + ")");
        });
    };
    var semigroupLast = function () {
        return new Prelude.Semigroup(function (_466) {
            return function (_467) {
                if (_467 instanceof Data_Maybe.Just) {
                    return _467;
                };
                if (_467 instanceof Data_Maybe.Nothing) {
                    return _466;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var runLast = function (_458) {
        return _458;
    };
    var monoidLast = function () {
        return new Data_Monoid.Monoid(semigroupLast, Data_Maybe.Nothing.value);
    };
    var eqLast = function (__dict_Eq_424) {
        return new Prelude.Eq(function (_461) {
            return function (_462) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_424))(_461)(_462);
            };
        }, function (_459) {
            return function (_460) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_424))(_459)(_460);
            };
        });
    };
    var ordLast = function (__dict_Ord_423) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_423["__superclass_Prelude.Eq_0"]());
        }, function (_463) {
            return function (_464) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_423))(_463)(_464);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_Set = (function () {
    "use strict";
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    function Set(value0) {
        this.value0 = value0;
    };
    Set.create = function (value0) {
        return new Set(value0);
    };
    var union = function (__dict_Ord_425) {
        return function (_477) {
            return function (_478) {
                return new Set(Data_Map.union(__dict_Ord_425)(_477.value0)(_478.value0));
            };
        };
    };
    var toList = function (_476) {
        return Data_Array.map(Data_Tuple.fst)(Data_Map.toList(_476.value0));
    };
    var singleton = function (a) {
        return new Set(Data_Map.singleton(a)(Prelude.unit));
    };
    var showSet = function (__dict_Show_426) {
        return new Prelude.Show(function (s) {
            return "fromList " + Prelude.show(Prelude.showArray(__dict_Show_426))(toList(s));
        });
    };
    var member = function (__dict_Ord_427) {
        return function (_470) {
            return function (_471) {
                return Data_Map.member(__dict_Ord_427)(_470)(_471.value0);
            };
        };
    };
    var isEmpty = function (_468) {
        return Data_Map.isEmpty(_468.value0);
    };
    var insert = function (__dict_Ord_428) {
        return function (_472) {
            return function (_473) {
                return new Set(Data_Map.insert(__dict_Ord_428)(_472)(Prelude.unit)(_473.value0));
            };
        };
    };
    var eqSet = function (__dict_Eq_429) {
        return new Prelude.Eq(function (_481) {
            return function (_482) {
                return Prelude["/="](Data_Map.eqMap(__dict_Eq_429)(Prelude.eqUnit()))(_481.value0)(_482.value0);
            };
        }, function (_479) {
            return function (_480) {
                return Prelude["=="](Data_Map.eqMap(__dict_Eq_429)(Prelude.eqUnit()))(_479.value0)(_480.value0);
            };
        });
    };
    var empty = new Set(Data_Map.empty);
    var fromList = function (__dict_Ord_430) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
            return function (a) {
                return insert(__dict_Ord_430)(a)(m);
            };
        })(empty);
    };
    var unions = function (__dict_Ord_431) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray())(union(__dict_Ord_431))(empty);
    };
    var $$delete = function (__dict_Ord_432) {
        return function (_474) {
            return function (_475) {
                return new Set(Data_Map["delete"](__dict_Ord_432)(_474)(_475.value0));
            };
        };
    };
    var checkValid = function (_469) {
        return Data_Map.checkValid(_469.value0);
    };
    return {
        unions: unions, 
        union: union, 
        fromList: fromList, 
        toList: toList, 
        "delete": $$delete, 
        member: member, 
        insert: insert, 
        checkValid: checkValid, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        eqSet: eqSet, 
        showSet: showSet
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    function _foldStrMap(m, z0, f) {  var z = z0;  for (var k in m) {    if (m.hasOwnProperty(k)) z = f(z)(k)(m[k]);  }  return z;};
    function _fmapStrMap(m0, f) {  var m = {};  for (var k in m0) {    if (m0.hasOwnProperty(k)) m[k] = f(m0[k]);  }  return m;};
    function _foldSCStrMap(m, z0, f, fromMaybe) {    var z = z0;                              for (var k in m) {                         if (m.hasOwnProperty(k)) {                 var maybeR = f(z)(k)(m[k]);              var r = fromMaybe(null)(maybeR);         if (r === null) return z;                else z = r;                            }                                      }                                       return z;                              };
    var empty = {};;
    function size(m) {  var s = 0;  for (var k in m) {    if (m.hasOwnProperty(k)) ++s;  }  return s;};
    function _lookup(m, k, yes, no) {                 if (m[k] !== undefined) return yes(m[k]);      else return no;                             };
    function _cloneStrMap(m0) {   var m = {};   for (var k in m0) {    if (m0.hasOwnProperty(k)) m[k] = m0[k];  }  return m;};
    function _unsafeInsertStrMap(m, k, v) {     m[k] = v;                                return m;                             };
    function _unsafeDeleteStrMap(m, k) {    delete m[k];                         return m;                         };
    var lookup = function (k) {
        return function (m) {
            return _lookup(m, k, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var member = function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(k)(m));
        };
    };
    var isEmpty = function (m) {
        return size(m) === 0;
    };
    var insert = function (k) {
        return function (v) {
            return function (m) {
                return _unsafeInsertStrMap(_cloneStrMap(m), k, v);
            };
        };
    };
    var singleton = function (k) {
        return function (v) {
            return insert(k)(v)(empty);
        };
    };
    var functorStrMap = function () {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return _fmapStrMap(m, f);
            };
        });
    };
    var map = Prelude["<$>"](functorStrMap());
    var fromList = Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
        return function (_483) {
            return insert(_483.value0)(_483.value1)(m);
        };
    })(empty);
    var foldMaybe = function (f) {
        return function (z) {
            return function (m) {
                return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
            };
        };
    };
    var isSubmap = function (__dict_Eq_433) {
        return function (m1) {
            return function (m2) {
                var f = function (acc) {
                    return function (k) {
                        return function (v) {
                            return !acc ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(acc && Data_Maybe.maybe(false)(function (v0) {
    return Prelude["=="](__dict_Eq_433)(v0)(v);
})(lookup(k)(m2)));
                        };
                    };
                };
                return foldMaybe(f)(true)(m1);
            };
        };
    };
    var fold = function (f) {
        return function (z) {
            return function (m) {
                return _foldStrMap(m, z, f);
            };
        };
    };
    var keys = function (m) {
        var f = function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["++"](Data_Array.semigroupArray())(acc)([ k ]);
                };
            };
        };
        return fold(f)([  ])(m);
    };
    var toList = function (m) {
        var f = function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["++"](Data_Array.semigroupArray())(acc)([ new Data_Tuple.Tuple(k, v) ]);
                };
            };
        };
        return fold(f)([  ])(m);
    };
    var showStrMap = function (__dict_Show_434) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString())(__dict_Show_434)))(toList(m));
        });
    };
    var union = function (m1) {
        return function (m2) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray())(function (m) {
                return function (_484) {
                    return insert(_484.value0)(_484.value1)(m);
                };
            })(m2)(toList(m1));
        };
    };
    var unions = Data_Foldable.foldl(Data_Foldable.foldableArray())(union)(empty);
    var values = function (m) {
        var f = function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["++"](Data_Array.semigroupArray())(acc)([ v ]);
                };
            };
        };
        return fold(f)([  ])(m);
    };
    var eqStrMap = function (__dict_Eq_435) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqStrMap(__dict_Eq_435))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return isSubmap(__dict_Eq_435)(m1)(m2) && isSubmap(__dict_Eq_435)(m2)(m1);
            };
        });
    };
    var $$delete = function (k) {
        return function (m) {
            return _unsafeDeleteStrMap(_cloneStrMap(m), k);
        };
    };
    var alter = function (f) {
        return function (k) {
            return function (m) {
                var _1922 = f(lookup(k)(m));
                if (_1922 instanceof Data_Maybe.Nothing) {
                    return $$delete(k)(m);
                };
                if (_1922 instanceof Data_Maybe.Just) {
                    return insert(k)(_1922.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var update = function (f) {
        return function (k) {
            return function (m) {
                return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
    return {
        foldMaybe: foldMaybe, 
        fold: fold, 
        isSubmap: isSubmap, 
        map: map, 
        unions: unions, 
        union: union, 
        values: values, 
        keys: keys, 
        update: update, 
        alter: alter, 
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        functorStrMap: functorStrMap, 
        eqStrMap: eqStrMap, 
        showStrMap: showStrMap
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Array = PS.Data_Array;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = function () {
        return new Traversable(Data_Foldable.foldableTuple, Data_Tuple.functorTuple, function (__dict_Applicative_437) {
            return function (_499) {
                return Prelude["<$>"]((__dict_Applicative_437["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_499.value0))(_499.value1);
            };
        }, function (__dict_Applicative_436) {
            return function (_497) {
                return function (_498) {
                    return Prelude["<$>"]((__dict_Applicative_436["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_498.value0))(_497(_498.value1));
                };
            };
        });
    };
    var traversableRef = function () {
        return new Traversable(Data_Foldable.foldableRef, Data_Eq.functorRef, function (__dict_Applicative_439) {
            return function (_493) {
                return Prelude["<$>"]((__dict_Applicative_439["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_493);
            };
        }, function (__dict_Applicative_438) {
            return function (_491) {
                return function (_492) {
                    return Prelude["<$>"]((__dict_Applicative_438["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_491(_492));
                };
            };
        });
    };
    var traversableMaybe = function () {
        return new Traversable(Data_Foldable.foldableMaybe, Data_Maybe.functorMaybe, function (__dict_Applicative_441) {
            return function (_496) {
                if (_496 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_441)(Data_Maybe.Nothing.value);
                };
                if (_496 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_441["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_496.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_440) {
            return function (_494) {
                return function (_495) {
                    if (_495 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Applicative_440)(Data_Maybe.Nothing.value);
                    };
                    if (_495 instanceof Data_Maybe.Just) {
                        return Prelude["<$>"]((__dict_Applicative_440["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_494(_495.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var traversableEither = function () {
        return new Traversable(Data_Foldable.foldableEither, Data_Either.functorEither, function (__dict_Applicative_443) {
            return function (_490) {
                if (_490 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_443)(new Data_Either.Left(_490.value0));
                };
                if (_490 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_443["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_490.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_442) {
            return function (_488) {
                return function (_489) {
                    if (_489 instanceof Data_Either.Left) {
                        return Prelude.pure(__dict_Applicative_442)(new Data_Either.Left(_489.value0));
                    };
                    if (_489 instanceof Data_Either.Right) {
                        return Prelude["<$>"]((__dict_Applicative_442["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_488(_489.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = function () {
        return new Traversable(Data_Foldable.foldableArray, Data_Array.functorArray, function (__dict_Applicative_445) {
            return function (_487) {
                if (_487.length === 0) {
                    return Prelude.pure(__dict_Applicative_445)([  ]);
                };
                if (_487.length >= 1) {
                    var _1948 = _487.slice(1);
                    return Prelude["<*>"](__dict_Applicative_445["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_445["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_487[0]))(sequence(traversableArray())(__dict_Applicative_445)(_1948));
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_444) {
            return function (_485) {
                return function (_486) {
                    if (_486.length === 0) {
                        return Prelude.pure(__dict_Applicative_444)([  ]);
                    };
                    if (_486.length >= 1) {
                        var _1952 = _486.slice(1);
                        return Prelude["<*>"](__dict_Applicative_444["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_444["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_485(_486[0])))(traverse(traversableArray())(__dict_Applicative_444)(_485)(_1952));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var zipWithA = function (__dict_Applicative_446) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray())(__dict_Applicative_446)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var $$for = function (__dict_Applicative_447) {
        return function (__dict_Traversable_448) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_448)(__dict_Applicative_447)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableRef: traversableRef, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Control_Lens_Internal_Indexed = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Profunctor_Rep = PS.Data_Profunctor_Rep;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Distributive = PS.Data_Distributive;
    var Control_Arrow_ArrowChoice = PS.Control_Arrow_ArrowChoice;
    var Control_Arrow_ArrowApply = PS.Control_Arrow_ArrowApply;
    function Indexing(value0) {
        this.value0 = value0;
    };
    Indexing.create = function (value0) {
        return new Indexing(value0);
    };
    function Conjoined(__superclass_Control$dotArrow$dotArrowApply$dotArrowApply_9, __superclass_Control$dotArrow$dotArrowChoice$dotArrowChoice_8, __superclass_Control$dotComonad$dotComonad_2, __superclass_Data$dotDistributive$dotDistributive_7, __superclass_Data$dotProfunctor$dotChoice$dotChoice_0, __superclass_Data$dotProfunctor$dotRep$dotCorepresentable_1, __superclass_Data$dotProfunctor$dotRep$dotRepresentable_5, __superclass_Data$dotProfunctor$dotStrong$dotStrong_4, __superclass_Data$dotTraversable$dotTraversable_3, __superclass_Prelude$dotMonad_6, conjoined, distrib) {
        this["__superclass_Control.Arrow.ArrowApply.ArrowApply_9"] = __superclass_Control$dotArrow$dotArrowApply$dotArrowApply_9;
        this["__superclass_Control.Arrow.ArrowChoice.ArrowChoice_8"] = __superclass_Control$dotArrow$dotArrowChoice$dotArrowChoice_8;
        this["__superclass_Control.Comonad.Comonad_2"] = __superclass_Control$dotComonad$dotComonad_2;
        this["__superclass_Data.Distributive.Distributive_7"] = __superclass_Data$dotDistributive$dotDistributive_7;
        this["__superclass_Data.Profunctor.Choice.Choice_0"] = __superclass_Data$dotProfunctor$dotChoice$dotChoice_0;
        this["__superclass_Data.Profunctor.Rep.Corepresentable_1"] = __superclass_Data$dotProfunctor$dotRep$dotCorepresentable_1;
        this["__superclass_Data.Profunctor.Rep.Representable_5"] = __superclass_Data$dotProfunctor$dotRep$dotRepresentable_5;
        this["__superclass_Data.Profunctor.Strong.Strong_4"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_4;
        this["__superclass_Data.Traversable.Traversable_3"] = __superclass_Data$dotTraversable$dotTraversable_3;
        this["__superclass_Prelude.Monad_6"] = __superclass_Prelude$dotMonad_6;
        this.conjoined = conjoined;
        this.distrib = distrib;
    };
    function Indexable(__superclass_Control$dotLens$dotInternal$dotIndexed$dotConjoined_0, indexed) {
        this["__superclass_Control.Lens.Internal.Indexed.Conjoined_0"] = __superclass_Control$dotLens$dotInternal$dotIndexed$dotConjoined_0;
        this.indexed = indexed;
    };
    var runIndexing = function (_500) {
        return _500.value0;
    };
    var indexed = function (dict) {
        return dict.indexed;
    };
    var foldableIdentity = function () {
        return new Data_Foldable.Foldable(function (__dict_Monoid_451) {
            return function (a2m) {
                return Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(a2m);
            };
        }, function (f) {
            return function (z) {
                return Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(f(z));
            };
        }, function (f) {
            return function (z) {
                return Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Prelude.flip(f)(z));
            };
        });
    };
    var traversableIdentity = function () {
        return new Data_Traversable.Traversable(foldableIdentity, Control_Monad_Identity.functorIdentity, function (__dict_Applicative_450) {
            return function (_507) {
                return Prelude["<$>"]((__dict_Applicative_450["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_Identity.Identity.create)(_507);
            };
        }, function (__dict_Applicative_449) {
            return function (_505) {
                return function (_506) {
                    return Prelude["<$>"]((__dict_Applicative_449["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_Identity.Identity.create)(_505(_506));
                };
            };
        });
    };
    var distrib = function (dict) {
        return dict.distrib;
    };
    var conjoinedArr = function () {
        return new Conjoined(Control_Arrow_ArrowApply.arrowApplyArr, Control_Arrow_ArrowChoice.arrowChoiceArr, Control_Monad_Identity.comonadIdentity, Data_Distributive.distributiveIdentity, Data_Profunctor_Choice.choiceArr, Data_Profunctor_Rep.corepresentableArrIdentity, Data_Profunctor_Rep.representableArrIdentity, Data_Profunctor_Strong.strongArr, traversableIdentity, Control_Monad_Identity.monadIdentity, function (_501) {
            return function (_502) {
                return _501;
            };
        }, function (__dict_Functor_452) {
            return Prelude["<$>"](__dict_Functor_452);
        });
    };
    var indexableArr = function () {
        return new Indexable(conjoinedArr, function (_503) {
            return function (_504) {
                return _503;
            };
        });
    };
    var conjoined = function (dict) {
        return dict.conjoined;
    };
    return {
        Indexing: Indexing, 
        Indexable: Indexable, 
        Conjoined: Conjoined, 
        runIndexing: runIndexing, 
        indexed: indexed, 
        conjoined: conjoined, 
        distrib: distrib, 
        conjoinedArr: conjoinedArr, 
        indexableArr: indexableArr, 
        traversableIdentity: traversableIdentity, 
        foldableIdentity: foldableIdentity
    };
})();
var PS = PS || {};
PS.Control_Lens_Internal_Setter = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Distributive = PS.Data_Distributive;
    function Settable(__superclass_Data$dotDistributive$dotDistributive_1, __superclass_Data$dotTraversable$dotTraversable_2, __superclass_Prelude$dotApplicative_0, taintedDot, untainted, untaintedDot) {
        this["__superclass_Data.Distributive.Distributive_1"] = __superclass_Data$dotDistributive$dotDistributive_1;
        this["__superclass_Data.Traversable.Traversable_2"] = __superclass_Data$dotTraversable$dotTraversable_2;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this.taintedDot = taintedDot;
        this.untainted = untainted;
        this.untaintedDot = untaintedDot;
    };
    var untaintedDot = function (dict) {
        return dict.untaintedDot;
    };
    var untainted = function (dict) {
        return dict.untainted;
    };
    var taintedDot = function (dict) {
        return dict.taintedDot;
    };
    var foldableIdentity = function () {
        return new Data_Foldable.Foldable(function (__dict_Monoid_457) {
            return function (_515) {
                return function (_516) {
                    return _515(_516);
                };
            };
        }, function (_512) {
            return function (_513) {
                return function (_514) {
                    return _512(_513)(_514);
                };
            };
        }, function (_509) {
            return function (_510) {
                return function (_511) {
                    return _509(_511)(_510);
                };
            };
        });
    };
    var traversableIdentity = function () {
        return new Data_Traversable.Traversable(foldableIdentity, Control_Monad_Identity.functorIdentity, function (__dict_Applicative_454) {
            return function (_519) {
                return Prelude["<$>"]((__dict_Applicative_454["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_Identity.Identity.create)(_519);
            };
        }, function (__dict_Applicative_453) {
            return function (_517) {
                return function (_518) {
                    return Prelude["<$>"]((__dict_Applicative_453["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_Identity.Identity.create)(_517(_518));
                };
            };
        });
    };
    var settableIdentity = function () {
        return new Settable(Data_Distributive.distributiveIdentity, traversableIdentity, Control_Monad_Identity.applicativeIdentity, function (__dict_Profunctor_456) {
            return Data_Profunctor.rmap(__dict_Profunctor_456)(Control_Monad_Identity.Identity.create);
        }, function (_508) {
            return _508;
        }, function (__dict_Profunctor_455) {
            return Data_Profunctor.rmap(__dict_Profunctor_455)(Control_Monad_Identity.runIdentity);
        });
    };
    return {
        Settable: Settable, 
        taintedDot: taintedDot, 
        untaintedDot: untaintedDot, 
        untainted: untainted, 
        settableIdentity: settableIdentity, 
        foldableIdentity: foldableIdentity, 
        traversableIdentity: traversableIdentity
    };
})();
var PS = PS || {};
PS.Control_Lens_Type = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {};
})();
var PS = PS || {};
PS.Control_Lens_Getter = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Data_Profunctor = PS.Data_Profunctor;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Contravariant = PS.Data_Contravariant;
    var Void = {
        create: function (value) {
            return value;
        }
    };
    var $up$dot = function (s) {
        return function (asa) {
            return Data_Const.getConst(asa(Data_Const.Const.create)(s));
        };
    };
    var view = function (__dict_Monad_458) {
        return function (__dict_MonadReader_459) {
            return function (ara) {
                return Control_Monad_Reader_Class.reader(__dict_Monad_458)(__dict_MonadReader_459)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Const.getConst)(ara(Data_Const.Const.create)));
            };
        };
    };
    var use = function (__dict_Monad_460) {
        return function (__dict_MonadState_461) {
            return function (asa) {
                return Control_Monad_State_Class.gets(__dict_Monad_460)(__dict_MonadState_461)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Const.getConst)(asa(Data_Const.Const.create)));
            };
        };
    };
    var absurd = function (a) {
        var spin = function (__copy__520) {
            var _520 = __copy__520;
            tco: while (true) {
                var __tco__520 = _520;
                _520 = __tco__520;
                continue tco;
            };
        };
        return spin(a);
    };
    var coerce = function (__dict_Contravariant_462) {
        return function (__dict_Functor_463) {
            return function (a) {
                return Prelude["<$>"](__dict_Functor_463)(absurd)(Data_Contravariant[">$<"](__dict_Contravariant_462)(absurd)(a));
            };
        };
    };
    var to = function (__dict_Conjoined_464) {
        return function (__dict_Contravariant_465) {
            return function (__dict_Functor_466) {
                return function (__dict_Profunctor_467) {
                    return function (s2a) {
                        return Data_Profunctor.dimap(__dict_Profunctor_467)(s2a)(coerce(__dict_Contravariant_465)(__dict_Functor_466));
                    };
                };
            };
        };
    };
    return {
        view: view, 
        use: use, 
        to: to, 
        "^.": $up$dot
    };
})();
var PS = PS || {};
PS.Control_Lens_Fold = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Endo = PS.Data_Monoid_Endo;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var foldOf = function (asa) {
        return function (s) {
            return Data_Const.getConst(asa(Data_Const.Const.create)(s));
        };
    };
    var foldMapOf = function (__dict_Profunctor_468) {
        return function (prsa) {
            return function (par) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Const.getConst)(prsa(Data_Profunctor.rmap(__dict_Profunctor_468)(Data_Const.Const.create)(par)));
            };
        };
    };
    var foldlOf = function (pErsa) {
        return function (par2r) {
            return function (r) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Profunctor.lmap(Data_Profunctor.profunctorArr())(Data_Monoid_Dual.runDual)(Prelude.flip(Data_Monoid_Endo.runEndo)(r)))(foldMapOf(Data_Profunctor.profunctorArr())(pErsa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Monoid_Dual.Dual.create)(Data_Monoid_Endo.Endo.create))(Prelude.flip(par2r))));
            };
        };
    };
    var foldrOf = function (__dict_Profunctor_469) {
        return function (pErsa) {
            return function (par2r) {
                return function (r) {
                    return Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Prelude.flip(Data_Monoid_Endo.runEndo)(r))(foldMapOf(__dict_Profunctor_469)(pErsa)(Data_Profunctor.rmap(__dict_Profunctor_469)(Data_Monoid_Endo.Endo.create)(par2r)));
                };
            };
        };
    };
    var toListOf = function (easa) {
        return foldrOf(Data_Profunctor.profunctorArr())(easa)(Prelude[":"])([  ]);
    };
    var $up$dot$dot = Prelude.flip(toListOf);
    var $up$qmark = function (s) {
        return function (fasa) {
            return Data_Monoid_First.runFirst(foldMapOf(Data_Profunctor.profunctorArr())(fasa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr())(Data_Monoid_First.First.create)(Data_Maybe.Just.create))(s));
        };
    };
    var filtered = function (__dict_Applicative_470) {
        return function (__dict_Choice_471) {
            return function (p) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Profunctor.dimap(__dict_Choice_471["__superclass_Data.Profunctor.Profunctor_0"]())(function (x) {
                    return p(x) ? new Data_Either.Right(x) : new Data_Either.Left(x);
                })(Data_Either.either(Prelude.pure(__dict_Applicative_470))(Prelude.id(Prelude.categoryArr()))))(Data_Profunctor_Choice["right'"](__dict_Choice_471));
            };
        };
    };
    return {
        toListOf: toListOf, 
        foldrOf: foldrOf, 
        foldOf: foldOf, 
        foldMapOf: foldMapOf, 
        foldlOf: foldlOf, 
        filtered: filtered, 
        "^?": $up$qmark, 
        "^..": $up$dot$dot
    };
})();
var PS = PS || {};
PS.Control_Lens_Indexed = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function FunctorWithIndex(__superclass_Prelude$dotFunctor_0, imap) {
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.imap = imap;
    };
    function FoldableWithIndex(__superclass_Data$dotFoldable$dotFoldable_0, ifoldMap) {
        this["__superclass_Data.Foldable.Foldable_0"] = __superclass_Data$dotFoldable$dotFoldable_0;
        this.ifoldMap = ifoldMap;
    };
    function TraversableWithIndex(__superclass_Control$dotLens$dotIndexed$dotFoldableWithIndex_1, __superclass_Control$dotLens$dotIndexed$dotFunctorWithIndex_0, __superclass_Data$dotTraversable$dotTraversable_2, itraverse, itraversed) {
        this["__superclass_Control.Lens.Indexed.FoldableWithIndex_1"] = __superclass_Control$dotLens$dotIndexed$dotFoldableWithIndex_1;
        this["__superclass_Control.Lens.Indexed.FunctorWithIndex_0"] = __superclass_Control$dotLens$dotIndexed$dotFunctorWithIndex_0;
        this["__superclass_Data.Traversable.Traversable_2"] = __superclass_Data$dotTraversable$dotTraversable_2;
        this.itraverse = itraverse;
        this.itraversed = itraversed;
    };
    var itraversed = function (dict) {
        return dict.itraversed;
    };
    var itraverse = function (dict) {
        return dict.itraverse;
    };
    var imap = function (dict) {
        return dict.imap;
    };
    var ifoldMap = function (dict) {
        return dict.ifoldMap;
    };
    return {
        TraversableWithIndex: TraversableWithIndex, 
        FunctorWithIndex: FunctorWithIndex, 
        FoldableWithIndex: FoldableWithIndex, 
        itraversed: itraversed, 
        itraverse: itraverse, 
        ifoldMap: ifoldMap, 
        imap: imap
    };
})();
var PS = PS || {};
PS.Control_Lens_Lens = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_State = PS.Control_Monad_State;
    var $qmark$qmark = function (__dict_Functor_472) {
        return function (ff) {
            return function (x) {
                return Prelude["<$>"](__dict_Functor_472)(function (f) {
                    return f(x);
                })(ff);
            };
        };
    };
    var $less$hash$greater = function (__dict_Functor_473) {
        return function (x) {
            return function (f) {
                return Prelude["<$>"](__dict_Functor_473)(f)(x);
            };
        };
    };
    var $hash$tilde = function (s) {
        return function (sa) {
            return Control_Monad_State.execState(sa)(s);
        };
    };
    var lens = function (s2a) {
        return function (s2b2t) {
            return function (__dict_Functor_474) {
                return function (a2fb) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_474)(s2b2t(s))(a2fb(s2a(s)));
                    };
                };
            };
        };
    };
    return {
        lens: lens, 
        "??": $qmark$qmark, 
        "<#>": $less$hash$greater, 
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Control_Lens_Prism = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lens_Internal_Prism = PS.Control_Lens_Internal_Prism;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Either = PS.Data_Either;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Maybe = PS.Data_Maybe;
    var withPrism = function (stab) {
        return function (f) {
            var _1975 = stab(new Control_Lens_Internal_Prism.Market(Control_Monad_Identity.Identity.create, Data_Either.Right.create));
            return f(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(_1975.value0))(Prelude[">>>"](Prelude.semigroupoidArr())(_1975.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Data_Either.Left.create))(Data_Either.Right.create)));
        };
    };
    var prism = function (__dict_Applicative_475) {
        return function (__dict_Choice_476) {
            return function (b2t) {
                return function (s2Eta) {
                    return function (pafb) {
                        return Data_Profunctor.dimap(__dict_Choice_476["__superclass_Data.Profunctor.Profunctor_0"]())(s2Eta)(Data_Either.either(Prelude.pure(__dict_Applicative_475))(Prelude["<$>"]((__dict_Applicative_475["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(b2t)))(Data_Profunctor_Choice["right'"](__dict_Choice_476)(pafb));
                    };
                };
            };
        };
    };
    var prism$prime = function (b2s) {
        return function (s2Ma) {
            return function (__dict_Applicative_477) {
                return function (__dict_Choice_478) {
                    return prism(__dict_Applicative_477)(__dict_Choice_478)(b2s)(function (s) {
                        return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(s2Ma(s));
                    });
                };
            };
        };
    };
    var clonePrism = function (__dict_Applicative_479) {
        return function (__dict_Choice_480) {
            return function (stab) {
                return withPrism(stab)(prism(__dict_Applicative_479)(__dict_Choice_480));
            };
        };
    };
    var _Right = function (__dict_Applicative_481) {
        return function (__dict_Choice_482) {
            return prism(__dict_Applicative_481)(__dict_Choice_482)(Data_Either.Right.create)(Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Either.Left.create)(Data_Either.Left.create))(Data_Either.Right.create));
        };
    };
    var _Nothing = function (__dict_Applicative_483) {
        return function (__dict_Choice_484) {
            return prism$prime(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["const"](new Data_Maybe.Just(Prelude.unit))))(__dict_Applicative_483)(__dict_Choice_484);
        };
    };
    var _Left = function (__dict_Applicative_485) {
        return function (__dict_Choice_486) {
            return prism(__dict_Applicative_485)(__dict_Choice_486)(Data_Either.Left.create)(Data_Either.either(Data_Either.Right.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Either.Left.create)(Data_Either.Right.create)));
        };
    };
    var _Just = function (__dict_Applicative_487) {
        return function (__dict_Choice_488) {
            return prism(__dict_Applicative_487)(__dict_Choice_488)(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create));
        };
    };
    return {
        _Nothing: _Nothing, 
        _Just: _Just, 
        _Right: _Right, 
        _Left: _Left, 
        withPrism: withPrism, 
        "prism'": prism$prime, 
        prism: prism, 
        clonePrism: clonePrism
    };
})();
var PS = PS || {};
PS.Control_Lens_Iso = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lens_Internal_Iso = PS.Control_Lens_Internal_Iso;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Enum = PS.Data_Enum;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var withIso = function (stab) {
        return function (f) {
            var _1978 = stab(new Control_Lens_Internal_Iso.Exchange(Prelude.id(Prelude.categoryArr()), Control_Monad_Identity.Identity.create));
            return f(_1978.value0)(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(_1978.value1));
        };
    };
    var under = function (stab) {
        return withIso(stab)(function (s2a) {
            return function (b2t) {
                return function (t2s) {
                    return Prelude[">>>"](Prelude.semigroupoidArr())(b2t)(Prelude[">>>"](Prelude.semigroupoidArr())(t2s)(s2a));
                };
            };
        });
    };
    var iso = function (__dict_Profunctor_489) {
        return function (__dict_Functor_490) {
            return function (s2a) {
                return function (b2t) {
                    return Data_Profunctor.dimap(__dict_Profunctor_489)(s2a)(Prelude["<$>"](__dict_Functor_490)(b2t));
                };
            };
        };
    };
    var mapping = function (__dict_Functor_491) {
        return function (__dict_Functor_492) {
            return function (__dict_Profunctor_493) {
                return function (stab) {
                    return withIso(stab)(function (s2a) {
                        return function (b2t) {
                            return iso(__dict_Profunctor_493)(__dict_Functor_491)(Prelude["<$>"](__dict_Functor_491)(s2a))(Prelude["<$>"](__dict_Functor_492)(b2t));
                        };
                    });
                };
            };
        };
    };
    var from = function (__dict_Profunctor_494) {
        return function (__dict_Functor_495) {
            return function (stab) {
                return withIso(stab)(function (s2a) {
                    return function (b2t) {
                        return iso(__dict_Profunctor_494)(__dict_Functor_495)(b2t)(s2a);
                    };
                });
            };
        };
    };
    var $$enum = function (__dict_Enum_496) {
        return function (__dict_Monoid_497) {
            return function (__dict_Functor_498) {
                return function (__dict_Profunctor_499) {
                    return iso(__dict_Profunctor_499)(__dict_Functor_498)(Prelude[">>>"](Prelude.semigroupoidArr())(Data_Enum.toEnum(__dict_Enum_496))(Data_Maybe.maybe(Data_Monoid.mempty(__dict_Monoid_497))(Prelude.id(Prelude.categoryArr()))))(Data_Enum.fromEnum(__dict_Enum_496));
                };
            };
        };
    };
    var cloneIso = function (__dict_Profunctor_500) {
        return function (__dict_Functor_501) {
            return function (stab) {
                return withIso(stab)(iso(__dict_Profunctor_500)(__dict_Functor_501));
            };
        };
    };
    var auf = function (__dict_Profunctor_502) {
        return function (stab) {
            return withIso(stab)(function (s2a) {
                return function (b2t) {
                    return function (f) {
                        return function (prs) {
                            return function (e) {
                                return b2t(f(Data_Profunctor.rmap(__dict_Profunctor_502)(s2a)(prs))(e));
                            };
                        };
                    };
                };
            });
        };
    };
    var au = function (stab) {
        return withIso(stab)(function (s2a) {
            return function (b2t) {
                return function (f) {
                    return function (e) {
                        return s2a(f(b2t)(e));
                    };
                };
            };
        });
    };
    return {
        withIso: withIso, 
        under: under, 
        mapping: mapping, 
        iso: iso, 
        from: from, 
        "enum": $$enum, 
        cloneIso: cloneIso, 
        auf: auf, 
        au: au
    };
})();
var PS = PS || {};
PS.Control_Lens_Setter = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lens_Internal_Setter = PS.Control_Lens_Internal_Setter;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Contravariant = PS.Data_Contravariant;
    var sets = function (__dict_Profunctor_503) {
        return function (__dict_Profunctor_504) {
            return function (__dict_Settable_505) {
                return function (pab2qst) {
                    return Prelude[">>>"](Prelude.semigroupoidArr())(Control_Lens_Internal_Setter.untaintedDot(__dict_Settable_505)(__dict_Profunctor_503))(Prelude[">>>"](Prelude.semigroupoidArr())(pab2qst)(Control_Lens_Internal_Setter.taintedDot(__dict_Settable_505)(__dict_Profunctor_504)));
                };
            };
        };
    };
    var set$prime = function (sa) {
        return function (a) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(sa(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["const"](a))));
        };
    };
    var set = function (stab) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["const"](b))));
        };
    };
    var $dot$tilde = set;
    var $dot$eq = function (__dict_Monad_506) {
        return function (__dict_MonadState_507) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_506)(__dict_MonadState_507)($dot$tilde(ssab)(b));
                };
            };
        };
    };
    var $qmark$tilde = function (stab) {
        return function (a) {
            return set(stab)(new Data_Maybe.Just(a));
        };
    };
    var $qmark$eq = function (__dict_Monad_508) {
        return function (__dict_MonadState_509) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_508)(__dict_MonadState_509)($qmark$tilde(ssab)(b));
                };
            };
        };
    };
    var over = function (__dict_Profunctor_510) {
        return function (pstab) {
            return function (pab) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(pstab(Data_Profunctor.rmap(__dict_Profunctor_510)(Control_Monad_Identity.Identity.create)(pab)));
            };
        };
    };
    var $percent$tilde = function (__dict_Profunctor_511) {
        return over(__dict_Profunctor_511);
    };
    var $percent$eq = function (__dict_Monad_512) {
        return function (__dict_MonadState_513) {
            return function (__dict_Profunctor_514) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_512)(__dict_MonadState_513)($percent$tilde(__dict_Profunctor_514)(ssab)(b));
                    };
                };
            };
        };
    };
    var $amp$amp$tilde = function (__dict_BoolLike_515) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["&&"](__dict_BoolLike_515)(a));
            };
        };
    };
    var $amp$amp$eq = function (__dict_Monad_516) {
        return function (__dict_MonadState_517) {
            return function (__dict_BoolLike_518) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_516)(__dict_MonadState_517)($amp$amp$tilde(__dict_BoolLike_518)(ssab)(b));
                    };
                };
            };
        };
    };
    var $times$tilde = function (__dict_Num_519) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["*"](__dict_Num_519)(a));
            };
        };
    };
    var $times$eq = function (__dict_Monad_520) {
        return function (__dict_MonadState_521) {
            return function (__dict_Num_522) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_520)(__dict_MonadState_521)($times$tilde(__dict_Num_522)(ssab)(b));
                    };
                };
            };
        };
    };
    var $plus$plus$tilde = function (__dict_Semigroup_523) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["++"](__dict_Semigroup_523)(a));
            };
        };
    };
    var $plus$plus$eq = function (__dict_Monad_524) {
        return function (__dict_MonadState_525) {
            return function (__dict_Semigroup_526) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_524)(__dict_MonadState_525)($plus$plus$tilde(__dict_Semigroup_526)(ssab)(b));
                    };
                };
            };
        };
    };
    var $plus$tilde = function (__dict_Num_527) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["+"](__dict_Num_527)(a));
            };
        };
    };
    var $plus$eq = function (__dict_Monad_528) {
        return function (__dict_MonadState_529) {
            return function (__dict_Num_530) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_528)(__dict_MonadState_529)($plus$tilde(__dict_Num_530)(ssab)(b));
                    };
                };
            };
        };
    };
    var $minus$tilde = function (__dict_Num_531) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["-"](__dict_Num_531)(a));
            };
        };
    };
    var $minus$eq = function (__dict_Monad_532) {
        return function (__dict_MonadState_533) {
            return function (__dict_Num_534) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_532)(__dict_MonadState_533)($minus$tilde(__dict_Num_534)(ssab)(b));
                    };
                };
            };
        };
    };
    var $div$div$tilde = function (__dict_Num_535) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["/"](__dict_Num_535)(a));
            };
        };
    };
    var $div$div$eq = function (__dict_Monad_536) {
        return function (__dict_MonadState_537) {
            return function (__dict_Num_538) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_536)(__dict_MonadState_537)($div$div$tilde(__dict_Num_538)(ssab)(b));
                    };
                };
            };
        };
    };
    var $less$greater$tilde = function (__dict_Semigroup_539) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["<>"](__dict_Semigroup_539)(a));
            };
        };
    };
    var $less$greater$eq = function (__dict_Monad_540) {
        return function (__dict_MonadState_541) {
            return function (__dict_Semigroup_542) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_540)(__dict_MonadState_541)($less$greater$tilde(__dict_Semigroup_542)(ssab)(b));
                    };
                };
            };
        };
    };
    var $bar$bar$tilde = function (__dict_BoolLike_543) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr())(staa)(Prelude["||"](__dict_BoolLike_543)(a));
            };
        };
    };
    var $bar$bar$eq = function (__dict_Monad_544) {
        return function (__dict_MonadState_545) {
            return function (__dict_BoolLike_546) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_544)(__dict_MonadState_545)($bar$bar$tilde(__dict_BoolLike_546)(ssab)(b));
                    };
                };
            };
        };
    };
    var mapped = function (__dict_Functor_547) {
        return function (__dict_Settable_548) {
            return sets(Data_Profunctor.profunctorArr())(Data_Profunctor.profunctorArr())(__dict_Settable_548)(Prelude["<$>"](__dict_Functor_547));
        };
    };
    var contramapped = function (__dict_Contravariant_549) {
        return function (__dict_Settable_550) {
            return sets(Data_Profunctor.profunctorArr())(Data_Profunctor.profunctorArr())(__dict_Settable_550)(Data_Contravariant[">$<"](__dict_Contravariant_549));
        };
    };
    var assign = function (__dict_Monad_551) {
        return function (__dict_MonadState_552) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_551)(__dict_MonadState_552)(set(ssab)(b));
                };
            };
        };
    };
    var argument = function (__dict_Profunctor_553) {
        return function (__dict_Settable_554) {
            return sets(Data_Profunctor.profunctorArr())(Data_Profunctor.profunctorArr())(__dict_Settable_554)(Data_Profunctor.lmap(__dict_Profunctor_553));
        };
    };
    return {
        sets: sets, 
        "set'": set$prime, 
        set: set, 
        over: over, 
        mapped: mapped, 
        contramapped: contramapped, 
        argument: argument, 
        "?=": $qmark$eq, 
        "++=": $plus$plus$eq, 
        "<>=": $less$greater$eq, 
        "&&=": $amp$amp$eq, 
        "||=": $bar$bar$eq, 
        "//=": $div$div$eq, 
        "*=": $times$eq, 
        "-=": $minus$eq, 
        "+=": $plus$eq, 
        ".=": $dot$eq, 
        "%=": $percent$eq, 
        "?~": $qmark$tilde, 
        "++~": $plus$plus$tilde, 
        "<>~": $less$greater$tilde, 
        "&&~": $amp$amp$tilde, 
        "||~": $bar$bar$tilde, 
        "//~": $div$div$tilde, 
        "*~": $times$tilde, 
        "-~": $minus$tilde, 
        "+~": $plus$tilde, 
        ".~": $dot$tilde, 
        "%~": $percent$tilde
    };
})();
var PS = PS || {};
PS.Control_Lens_At = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Lens_Lens = PS.Control_Lens_Lens;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Traversable = PS.Data_Traversable;
    function Contains(contains) {
        this.contains = contains;
    };
    function Ixed(ix) {
        this.ix = ix;
    };
    function At(__superclass_Control$dotLens$dotAt$dotIxed_0, at) {
        this["__superclass_Control.Lens.At.Ixed_0"] = __superclass_Control$dotLens$dotAt$dotIxed_0;
        this.at = at;
    };
    var ixedStrMapStringV = function () {
        return new Ixed(function (str) {
            return function (__dict_Applicative_555) {
                return function (v2fv) {
                    return function (strMapV) {
                        var _1981 = Data_StrMap.lookup(str)(strMapV);
                        if (_1981 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Applicative_555)(strMapV);
                        };
                        if (_1981 instanceof Data_Maybe.Just) {
                            return Control_Lens_Lens["<#>"]((__dict_Applicative_555["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(v2fv(_1981.value0))(function (v$prime) {
                                return Data_StrMap.insert(str)(v$prime)(strMapV);
                            });
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var ixedSetKKUnit = function (__dict_Ord_556) {
        return new Ixed(function (k) {
            return function (__dict_Applicative_557) {
                return function (u2fu) {
                    return function (setK) {
                        return Data_Set.member(__dict_Ord_556)(k)(setK) ? Prelude["<$>"]((__dict_Applicative_557["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_) {
    return Data_Set.insert(__dict_Ord_556)(k)(setK);
})(u2fu(Prelude.unit)) : Prelude.pure(__dict_Applicative_557)(setK);
                    };
                };
            };
        });
    };
    var ixedMaybeUnitUnitA = function () {
        return new Ixed(function (_524) {
            return function (__dict_Applicative_558) {
                return function (_525) {
                    return function (_526) {
                        if (_526 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Applicative_558)(Data_Maybe.Nothing.value);
                        };
                        if (_526 instanceof Data_Maybe.Just) {
                            return Prelude["<$>"]((__dict_Applicative_558["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(Prelude.pure(__dict_Applicative_558)(_526.value0));
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var ixedMaybeAUnitA = function () {
        return new Ixed(function (_521) {
            return function (__dict_Applicative_559) {
                return function (_522) {
                    return function (_523) {
                        if (_523 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Applicative_559)(Data_Maybe.Nothing.value);
                        };
                        if (_523 instanceof Data_Maybe.Just) {
                            return Prelude["<$>"]((__dict_Applicative_559["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_522(_523.value0));
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var ixedMapKVKV = function (__dict_Ord_560) {
        return new Ixed(function (k) {
            return function (__dict_Applicative_561) {
                return function (v2fv) {
                    return function (mapKV) {
                        var _1991 = Data_Map.lookup(__dict_Ord_560)(k)(mapKV);
                        if (_1991 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Applicative_561)(mapKV);
                        };
                        if (_1991 instanceof Data_Maybe.Just) {
                            return Control_Lens_Lens["<#>"]((__dict_Applicative_561["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(v2fv(_1991.value0))(function (v$prime) {
                                return Data_Map.insert(__dict_Ord_560)(k)(v$prime)(mapKV);
                            });
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var ixedIdentityAAA = function () {
        return new Ixed(function (_527) {
            return function (__dict_Applicative_562) {
                return function (_528) {
                    return function (_529) {
                        return Prelude["<$>"]((__dict_Applicative_562["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_Identity.Identity.create)(_528(_529));
                    };
                };
            };
        });
    };
    var ixedArrEAEA = function (__dict_Eq_563) {
        return new Ixed(function (e) {
            return function (__dict_Applicative_564) {
                return function (a2fa) {
                    return function (e2a) {
                        return Prelude["<$>"]((__dict_Applicative_564["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                            return function (e$prime) {
                                return Prelude["=="](__dict_Eq_563)(e)(e$prime) ? a : e2a(e$prime);
                            };
                        })(a2fa(e2a(e)));
                    };
                };
            };
        });
    };
    var ix = function (dict) {
        return dict.ix;
    };
    var ixedArrayaNumberA = function () {
        return new Ixed(function (_530) {
            return function (__dict_Applicative_565) {
                return function (_531) {
                    return function (_532) {
                        if (_530 < 0) {
                            return Prelude.pure(__dict_Applicative_565)(_532);
                        };
                        if (_532.length === 0) {
                            return Prelude.pure(__dict_Applicative_565)([  ]);
                        };
                        if (_530 === 0 && _532.length >= 1) {
                            var _2000 = _532.slice(1);
                            return Prelude["<$>"]((__dict_Applicative_565["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Prelude[":"])(_2000))(_531(_532[0]));
                        };
                        if (_532.length >= 1) {
                            var _2002 = _532.slice(1);
                            return Prelude["<$>"]((__dict_Applicative_565["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](_532[0]))(ix(ixedArrayaNumberA())(_530 - 1)(__dict_Applicative_565)(_531)(_2002));
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var containsSetK = function (__dict_Ord_566) {
        return new Contains(function (k) {
            return function (__dict_Functor_567) {
                return function (f) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_567)(function (x) {
                            return x ? Data_Set.insert(__dict_Ord_566)(k)(s) : Data_Set["delete"](__dict_Ord_566)(k)(s);
                        })(f(Data_Set.member(__dict_Ord_566)(k)(s)));
                    };
                };
            };
        });
    };
    var contains = function (dict) {
        return dict.contains;
    };
    var atStrMapV = function () {
        return new At(ixedStrMapStringV, function (str) {
            return function (__dict_Functor_568) {
                return function (a2fa) {
                    return function (strMapV) {
                        var strMapV$prime = Data_StrMap.lookup(str)(strMapV);
                        var go = function (_535) {
                            if (_535 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(strMapV)(Prelude["const"](Data_StrMap["delete"](str)(strMapV)))(strMapV$prime);
                            };
                            if (_535 instanceof Data_Maybe.Just) {
                                return Data_StrMap.insert(str)(_535.value0)(strMapV);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_568)(go)(a2fa(strMapV$prime));
                    };
                };
            };
        });
    };
    var atSetKKUnit = function (__dict_Ord_569) {
        return new At(function () {
            return ixedSetKKUnit(__dict_Ord_569);
        }, function (k) {
            return function (__dict_Functor_570) {
                return function (a2fa) {
                    return function (setK) {
                        var setK$prime = Data_Set.member(__dict_Ord_569)(k)(setK) ? new Data_Maybe.Just(Prelude.unit) : Data_Maybe.Nothing.value;
                        var go = function (_534) {
                            if (_534 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(setK)(Prelude["const"](Data_Set["delete"](__dict_Ord_569)(k)(setK)))(setK$prime);
                            };
                            if (_534 instanceof Data_Maybe.Just) {
                                return Data_Set.insert(__dict_Ord_569)(k)(setK);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_570)(go)(a2fa(setK$prime));
                    };
                };
            };
        });
    };
    var atMaybe = function () {
        return new At(ixedMaybeUnitUnitA, function (_) {
            return function (__dict_Functor_571) {
                return function (a2fa) {
                    return a2fa;
                };
            };
        });
    };
    var atMapKVKV = function (__dict_Ord_572) {
        return new At(function () {
            return ixedMapKVKV(__dict_Ord_572);
        }, function (k) {
            return function (__dict_Functor_573) {
                return function (a2fa) {
                    return function (mapKV) {
                        var mapKV$prime = Data_Map.lookup(__dict_Ord_572)(k)(mapKV);
                        var go = function (_533) {
                            if (_533 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(mapKV)(Prelude["const"](Data_Map["delete"](__dict_Ord_572)(k)(mapKV)))(mapKV$prime);
                            };
                            if (_533 instanceof Data_Maybe.Just) {
                                return Data_Map.insert(__dict_Ord_572)(k)(_533.value0)(mapKV);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_573)(go)(a2fa(mapKV$prime));
                    };
                };
            };
        });
    };
    var at = function (dict) {
        return dict.at;
    };
    var ixAt = function (__dict_At_574) {
        return function (i) {
            return function (__dict_Applicative_575) {
                return Prelude[">>>"](Prelude.semigroupoidArr())(Data_Traversable.traverse(Data_Traversable.traversableMaybe())(__dict_Applicative_575))(at(__dict_At_574)(i)((__dict_Applicative_575["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()));
            };
        };
    };
    return {
        Ixed: Ixed, 
        At: At, 
        ix: ix, 
        at: at, 
        ixedArrEAEA: ixedArrEAEA, 
        ixedMaybeAUnitA: ixedMaybeAUnitA, 
        ixedMaybeUnitUnitA: ixedMaybeUnitUnitA, 
        ixedIdentityAAA: ixedIdentityAAA, 
        ixedArrayaNumberA: ixedArrayaNumberA, 
        ixedMapKVKV: ixedMapKVKV, 
        ixedSetKKUnit: ixedSetKKUnit, 
        ixedStrMapStringV: ixedStrMapStringV, 
        atMaybe: atMaybe, 
        atMapKVKV: atMapKVKV, 
        atSetKKUnit: atSetKKUnit, 
        atStrMapV: atStrMapV
    };
})();
var PS = PS || {};
PS.Control_Lens_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $tilde = Data_Tuple.Tuple.create;
    var _2 = function (__dict_Functor_576) {
        return function (_538) {
            return function (_539) {
                return Prelude["<$>"](__dict_Functor_576)(Data_Tuple.Tuple.create(_539.value0))(_538(_539.value1));
            };
        };
    };
    var _1 = function (__dict_Functor_577) {
        return function (_536) {
            return function (_537) {
                return Prelude["<$>"](__dict_Functor_577)(function (b) {
                    return new Data_Tuple.Tuple(b, _537.value1);
                })(_536(_537.value0));
            };
        };
    };
    return {
        _2: _2, 
        _1: _1, 
        "~": $tilde
    };
})();
var PS = PS || {};
PS.Control_Lens_Traversal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var traverseOf = Prelude.id(Prelude.categoryArr());
    var sequenceOf = function (l) {
        return l(Prelude.id(Prelude.categoryArr()));
    };
    var forOf = Prelude.flip;
    var both = function (__dict_Bitraversable_578) {
        return function (__dict_Applicative_579) {
            return function (f) {
                return Data_Bitraversable.bitraverse(__dict_Bitraversable_578)(__dict_Applicative_579)(f)(f);
            };
        };
    };
    return {
        traverseOf: traverseOf, 
        sequenceOf: sequenceOf, 
        forOf: forOf, 
        both: both
    };
})();
var PS = PS || {};
PS.Control_Lens = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lens_Tuple = PS.Control_Lens_Tuple;
    var Control_Lens_Setter = PS.Control_Lens_Setter;
    var Control_Lens_Fold = PS.Control_Lens_Fold;
    var Control_Lens_Getter = PS.Control_Lens_Getter;
    var Control_Lens_Lens = PS.Control_Lens_Lens;
    var Control_Lens_Prism = PS.Control_Lens_Prism;
    var Control_Lens_Iso = PS.Control_Lens_Iso;
    var Control_Lens_Traversal = PS.Control_Lens_Traversal;
    var Control_Lens_At = PS.Control_Lens_At;
    var Control_Lens_Indexed = PS.Control_Lens_Indexed;
    var $tilde = Control_Lens_Tuple["~"];
    var $bar$bar$tilde = Control_Lens_Setter["||~"];
    var $bar$bar$eq = Control_Lens_Setter["||="];
    var $up$qmark = Control_Lens_Fold["^?"];
    var $up$dot$dot = Control_Lens_Fold["^.."];
    var $up$dot = Control_Lens_Getter["^."];
    var $qmark$tilde = Control_Lens_Setter["?~"];
    var $qmark$qmark = Control_Lens_Lens["??"];
    var $qmark$eq = Control_Lens_Setter["?="];
    var $less$greater$tilde = Control_Lens_Setter["<>~"];
    var $less$greater$eq = Control_Lens_Setter["<>="];
    var $less$hash$greater = Control_Lens_Lens["<#>"];
    var $div$div$tilde = Control_Lens_Setter["//~"];
    var $div$div$eq = Control_Lens_Setter["//="];
    var $dot$tilde = Control_Lens_Setter[".~"];
    var $dot$eq = Control_Lens_Setter[".="];
    var $dot$dot = Prelude["<<<"];
    var $minus$tilde = Control_Lens_Setter["-~"];
    var $minus$eq = Control_Lens_Setter["-="];
    var $plus$tilde = Control_Lens_Setter["+~"];
    var $plus$eq = Control_Lens_Setter["+="];
    var $plus$plus$tilde = Control_Lens_Setter["++~"];
    var $plus$plus$eq = Control_Lens_Setter["++="];
    var $times$tilde = Control_Lens_Setter["*~"];
    var $times$eq = Control_Lens_Setter["*="];
    var $amp$amp$tilde = Control_Lens_Setter["&&~"];
    var $amp$amp$eq = Control_Lens_Setter["&&="];
    var $percent$tilde = Control_Lens_Setter["%~"];
    var $percent$eq = Control_Lens_Setter["%="];
    var $hash$tilde = Control_Lens_Lens["#~"];
    var withPrism = Control_Lens_Prism.withPrism;
    var withIso = Control_Lens_Iso.withIso;
    var view = Control_Lens_Getter.view;
    var use = Control_Lens_Getter.use;
    var under = Control_Lens_Iso.under;
    var traverseOf = Control_Lens_Traversal.traverseOf;
    var toListOf = Control_Lens_Fold.toListOf;
    var to = Control_Lens_Getter.to;
    var sets = Control_Lens_Setter.sets;
    var set$prime = Control_Lens_Setter["set'"];
    var set = Control_Lens_Setter.set;
    var sequenceOf = Control_Lens_Traversal.sequenceOf;
    var prism$prime = Control_Lens_Prism["prism'"];
    var prism = Control_Lens_Prism.prism;
    var over = Control_Lens_Setter.over;
    var mapping = Control_Lens_Iso.mapping;
    var mapped = Control_Lens_Setter.mapped;
    var lens = Control_Lens_Lens.lens;
    var ix = Control_Lens_At.ix;
    var itraversed = Control_Lens_Indexed.itraversed;
    var itraverse = Control_Lens_Indexed.itraverse;
    var iso = Control_Lens_Iso.iso;
    var imap = Control_Lens_Indexed.imap;
    var ifoldMap = Control_Lens_Indexed.ifoldMap;
    var from = Control_Lens_Iso.from;
    var forOf = Control_Lens_Traversal.forOf;
    var foldrOf = Control_Lens_Fold.foldrOf;
    var foldlOf = Control_Lens_Fold.foldlOf;
    var foldOf = Control_Lens_Fold.foldOf;
    var foldMapOf = Control_Lens_Fold.foldMapOf;
    var filtered = Control_Lens_Fold.filtered;
    var $$enum = Control_Lens_Iso["enum"];
    var contramapped = Control_Lens_Setter.contramapped;
    var clonePrism = Control_Lens_Prism.clonePrism;
    var cloneIso = Control_Lens_Iso.cloneIso;
    var both = Control_Lens_Traversal.both;
    var auf = Control_Lens_Iso.auf;
    var au = Control_Lens_Iso.au;
    var at = Control_Lens_At.at;
    var argument = Control_Lens_Setter.argument;
    var _Right = Control_Lens_Prism._Right;
    var _Nothing = Control_Lens_Prism._Nothing;
    var _Left = Control_Lens_Prism._Left;
    var _Just = Control_Lens_Prism._Just;
    var _2 = Control_Lens_Tuple._2;
    var _1 = Control_Lens_Tuple._1;
    return {
        _2: _2, 
        _1: _1, 
        "~": $tilde, 
        traverseOf: traverseOf, 
        sequenceOf: sequenceOf, 
        forOf: forOf, 
        both: both, 
        sets: sets, 
        "set'": set$prime, 
        set: set, 
        over: over, 
        mapped: mapped, 
        contramapped: contramapped, 
        argument: argument, 
        "?=": $qmark$eq, 
        "++=": $plus$plus$eq, 
        "<>=": $less$greater$eq, 
        "&&=": $amp$amp$eq, 
        "||=": $bar$bar$eq, 
        "//=": $div$div$eq, 
        "*=": $times$eq, 
        "-=": $minus$eq, 
        "+=": $plus$eq, 
        ".=": $dot$eq, 
        "%=": $percent$eq, 
        "?~": $qmark$tilde, 
        "++~": $plus$plus$tilde, 
        "<>~": $less$greater$tilde, 
        "&&~": $amp$amp$tilde, 
        "||~": $bar$bar$tilde, 
        "//~": $div$div$tilde, 
        "*~": $times$tilde, 
        "-~": $minus$tilde, 
        "+~": $plus$tilde, 
        ".~": $dot$tilde, 
        "%~": $percent$tilde, 
        _Nothing: _Nothing, 
        _Just: _Just, 
        _Right: _Right, 
        _Left: _Left, 
        withPrism: withPrism, 
        "prism'": prism$prime, 
        prism: prism, 
        clonePrism: clonePrism, 
        lens: lens, 
        "??": $qmark$qmark, 
        "<#>": $less$hash$greater, 
        "#~": $hash$tilde, 
        withIso: withIso, 
        under: under, 
        mapping: mapping, 
        iso: iso, 
        from: from, 
        "enum": $$enum, 
        cloneIso: cloneIso, 
        auf: auf, 
        au: au, 
        itraversed: itraversed, 
        itraverse: itraverse, 
        ifoldMap: ifoldMap, 
        imap: imap, 
        view: view, 
        use: use, 
        to: to, 
        "^.": $up$dot, 
        toListOf: toListOf, 
        foldrOf: foldrOf, 
        foldOf: foldOf, 
        foldMapOf: foldMapOf, 
        foldlOf: foldlOf, 
        filtered: filtered, 
        "^?": $up$qmark, 
        "^..": $up$dot$dot, 
        ix: ix, 
        at: at, 
        "..": $dot$dot
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Core = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Function = PS.Data_Function;
    var Control_Lens = PS.Control_Lens;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    function _stringify(j){ return JSON.stringify(j); };
    function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };
    function fromNull(_){return null;};
    function fromBoolean(b){return b;};
    function fromNumber(n){return n;};
    function fromString(s){return s;};
    function fromArray(a){return a;};
    function fromObject(o){return o;};
    var jsonNull = null;;
    var verbJsonType = function (def) {
        return function (f) {
            return function (fold) {
                return fold(def)(f);
            };
        };
    };
    var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var testType = function (__dict_Eq_580) {
        return function (f) {
            return function (j) {
                return function (v1) {
                    return f(false)(function (v2) {
                        return Prelude["=="](__dict_Eq_580)(v1)(v2);
                    })(j);
                };
            };
        };
    };
    var showJson = function () {
        return new Prelude.Show(_stringify);
    };
    var jsonZero = fromNumber(0);
    var jsonTrue = fromBoolean(true);
    var jsonSingletonObject = function (key) {
        return function (val) {
            return fromObject(Data_StrMap.singleton(key)(val));
        };
    };
    var jsonSingletonArray = function (j) {
        return fromArray([ j ]);
    };
    var jsonFalse = fromBoolean(false);
    var jsonEmptyString = fromString("");
    var jsonEmptyObject = fromObject(Data_StrMap.empty);
    var jsonEmptyArray = fromArray([  ]);
    var isJsonType = verbJsonType(false)(Prelude["const"](true));
    var foldJsonString = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isString = isJsonType(foldJsonString);
    var jsonStringL = function (__dict_Applicative_581) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.id(Prelude.categoryArr()))(Control_Lens.filtered(__dict_Applicative_581)(Data_Profunctor_Choice.choiceArr())(isString));
    };
    var toString = toJsonType(foldJsonString);
    var stringL = function (__dict_Applicative_582) {
        return function (__dict_Choice_583) {
            return Control_Lens["prism'"](fromString)(toString)(__dict_Applicative_582)(__dict_Choice_583);
        };
    };
    var foldJsonObject = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
            };
        };
    };
    var isObject = isJsonType(foldJsonObject);
    var jsonObjectL = function (__dict_Applicative_584) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.id(Prelude.categoryArr()))(Control_Lens.filtered(__dict_Applicative_584)(Data_Profunctor_Choice.choiceArr())(isObject));
    };
    var toObject = toJsonType(foldJsonObject);
    var objectL = function (__dict_Applicative_585) {
        return function (__dict_Choice_586) {
            return Control_Lens["prism'"](fromObject)(toObject)(__dict_Applicative_585)(__dict_Choice_586);
        };
    };
    var foldJsonNumber = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isNumber = isJsonType(foldJsonNumber);
    var jsonNumberL = function (__dict_Applicative_587) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.id(Prelude.categoryArr()))(Control_Lens.filtered(__dict_Applicative_587)(Data_Profunctor_Choice.choiceArr())(isNumber));
    };
    var toNumber = toJsonType(foldJsonNumber);
    var numberL = function (__dict_Applicative_588) {
        return function (__dict_Choice_589) {
            return Control_Lens["prism'"](fromNumber)(toNumber)(__dict_Applicative_588)(__dict_Choice_589);
        };
    };
    var foldJsonNull = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isNull = isJsonType(foldJsonNull);
    var jsonNullL = function (__dict_Applicative_590) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.id(Prelude.categoryArr()))(Control_Lens.filtered(__dict_Applicative_590)(Data_Profunctor_Choice.choiceArr())(isNull));
    };
    var toNull = toJsonType(foldJsonNull);
    var nullL = function (__dict_Applicative_591) {
        return function (__dict_Choice_592) {
            return Control_Lens["prism'"](fromNull)(toNull)(__dict_Applicative_591)(__dict_Choice_592);
        };
    };
    var foldJsonBoolean = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isBoolean = isJsonType(foldJsonBoolean);
    var jsonBooleanL = function (__dict_Applicative_593) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.id(Prelude.categoryArr()))(Control_Lens.filtered(__dict_Applicative_593)(Data_Profunctor_Choice.choiceArr())(isBoolean));
    };
    var toBoolean = toJsonType(foldJsonBoolean);
    var foldJsonArray = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
            };
        };
    };
    var isArray = isJsonType(foldJsonArray);
    var jsonArrayL = function (__dict_Applicative_594) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.id(Prelude.categoryArr()))(Control_Lens.filtered(__dict_Applicative_594)(Data_Profunctor_Choice.choiceArr())(isArray));
    };
    var toArray = toJsonType(foldJsonArray);
    var foldJson = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (json) {
                                return _foldJson(a, b, c, d, e, f, json);
                            };
                        };
                    };
                };
            };
        };
    };
    var eqJNull = function () {
        return new Prelude.Eq(function (n1) {
            return function (n2) {
                return false;
            };
        }, function (n1) {
            return function (n2) {
                return true;
            };
        });
    };
    var eqJson = function () {
        return new Prelude.Eq(function (j) {
            return function (j$prime) {
                return !Prelude["=="](eqJson())(j)(j$prime);
            };
        }, function (j1) {
            return function (j2) {
                var f = testType(Data_StrMap.eqStrMap(eqJson()))(foldJsonObject)(j2);
                var e = testType(Prelude.eqArray(eqJson()))(foldJsonArray)(j2);
                var d = testType(Prelude.eqString())(foldJsonString)(j2);
                var c = testType(Prelude.eqNumber())(foldJsonNumber)(j2);
                var b = testType(Prelude.eqBoolean())(foldJsonBoolean)(j2);
                var a = testType(eqJNull())(foldJsonNull)(j2);
                return foldJson(a)(b)(c)(d)(e)(f)(j1);
            };
        });
    };
    var booleanL = function (__dict_Applicative_595) {
        return function (__dict_Choice_596) {
            return Control_Lens["prism'"](fromBoolean)(toBoolean)(__dict_Applicative_595)(__dict_Choice_596);
        };
    };
    var arrayL = function (__dict_Applicative_597) {
        return function (__dict_Choice_598) {
            return Control_Lens["prism'"](fromArray)(toArray)(__dict_Applicative_597)(__dict_Choice_598);
        };
    };
    return {
        jsonObjectL: jsonObjectL, 
        jsonArrayL: jsonArrayL, 
        jsonStringL: jsonStringL, 
        jsonNumberL: jsonNumberL, 
        jsonBooleanL: jsonBooleanL, 
        jsonNullL: jsonNullL, 
        objectL: objectL, 
        arrayL: arrayL, 
        stringL: stringL, 
        numberL: numberL, 
        booleanL: booleanL, 
        nullL: nullL, 
        jsonSingletonObject: jsonSingletonObject, 
        jsonSingletonArray: jsonSingletonArray, 
        jsonEmptyObject: jsonEmptyObject, 
        jsonEmptyArray: jsonEmptyArray, 
        jsonEmptyString: jsonEmptyString, 
        jsonNull: jsonNull, 
        jsonZero: jsonZero, 
        jsonFalse: jsonFalse, 
        jsonTrue: jsonTrue, 
        fromObject: fromObject, 
        fromArray: fromArray, 
        fromString: fromString, 
        fromNumber: fromNumber, 
        fromBoolean: fromBoolean, 
        fromNull: fromNull, 
        toObject: toObject, 
        toArray: toArray, 
        toString: toString, 
        toNumber: toNumber, 
        toBoolean: toBoolean, 
        toNull: toNull, 
        toJsonType: toJsonType, 
        isObject: isObject, 
        isArray: isArray, 
        isString: isString, 
        isNumber: isNumber, 
        isBoolean: isBoolean, 
        isNull: isNull, 
        isJsonType: isJsonType, 
        verbJsonType: verbJsonType, 
        foldJsonObject: foldJsonObject, 
        foldJsonArray: foldJsonArray, 
        foldJsonString: foldJsonString, 
        foldJsonNumber: foldJsonNumber, 
        foldJsonBoolean: foldJsonBoolean, 
        foldJsonNull: foldJsonNull, 
        foldJson: foldJson, 
        _foldJson: _foldJson, 
        testType: testType, 
        _stringify: _stringify, 
        eqJNull: eqJNull, 
        showJson: showJson, 
        eqJson: eqJson
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Encode = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Foldable = PS.Data_Foldable;
    function EncodeJson(encodeJson) {
        this.encodeJson = encodeJson;
    };
    var encodeJsonJson = function () {
        return new EncodeJson(Prelude.id(Prelude.categoryArr()));
    };
    var encodeJsonJString = function () {
        return new EncodeJson(Data_Argonaut_Core.fromString);
    };
    var encodeJsonJNumber = function () {
        return new EncodeJson(Data_Argonaut_Core.fromNumber);
    };
    var encodeJsonJNull = function () {
        return new EncodeJson(function (u) {
            return Data_Argonaut_Core.jsonNull;
        });
    };
    var encodeJsonJBoolean = function () {
        return new EncodeJson(Data_Argonaut_Core.fromBoolean);
    };
    var encodeJson = function (dict) {
        return dict.encodeJson;
    };
    var encodeJsonArray = function (__dict_EncodeJson_599) {
        return new EncodeJson(function (json) {
            return Data_Argonaut_Core.fromArray(Prelude["<$>"](Data_Array.functorArray())(encodeJson(__dict_EncodeJson_599))(json));
        });
    };
    var encodeMap = function (__dict_EncodeJson_600) {
        return new EncodeJson(function (json) {
            var assoc = function (_541) {
                return Data_Tuple.Tuple.create(_541.value0)(encodeJson(__dict_EncodeJson_600)(_541.value1));
            };
            var append = function (_540) {
                return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_540.value0)(_540.value1))(Prelude[">>>"](Prelude.semigroupoidArr())(Data_StrMap.insert(_540.value0)(_540.value1))(Data_Argonaut_Core.fromObject));
            };
            return Data_Foldable.foldr(Data_Foldable.foldableArray())(append)(Data_Argonaut_Core.jsonEmptyObject)(Prelude["<$>"](Data_Array.functorArray())(assoc)(Data_StrMap.toList(json)));
        });
    };
    return {
        EncodeJson: EncodeJson, 
        encodeJson: encodeJson, 
        encodeJsonJNull: encodeJsonJNull, 
        encodeJsonJBoolean: encodeJsonJBoolean, 
        encodeJsonJNumber: encodeJsonJNumber, 
        encodeJsonJString: encodeJsonJString, 
        encodeJsonJson: encodeJsonJson, 
        encodeJsonArray: encodeJsonArray, 
        encodeMap: encodeMap
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Combinators = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var $tilde$greater = function (_542) {
        return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_542.value0)(_542.value1))(Prelude[">>>"](Prelude.semigroupoidArr())(Data_StrMap.insert(_542.value0)(_542.value1))(Data_Argonaut_Core.fromObject));
    };
    var $qmark$greater$greater$eq = function (_543) {
        return function (_544) {
            if (_543 instanceof Data_Maybe.Just) {
                return new Data_Either.Right(_543.value0);
            };
            return Data_Either.Left.create("Couldn't decode " + _544);
        };
    };
    var $colon$eq = function (__dict_EncodeJson_601) {
        return function (k) {
            return function (v) {
                return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_601)(v));
            };
        };
    };
    return {
        "?>>=": $qmark$greater$greater$eq, 
        "~>": $tilde$greater, 
        ":=": $colon$eq
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    function _jsonParser(fail, succ, s) {   try { return succ(JSON.parse(s)); } catch (e) { return fail(e.message); }};
    var jsonParser = function (j) {
        return _jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
    };
    return {
        jsonParser: jsonParser
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Printer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    function Printer(printJson) {
        this.printJson = printJson;
    };
    var printerString = function () {
        return new Printer(Prelude.show(Data_Argonaut_Core.showJson()));
    };
    var printJson = function (dict) {
        return dict.printJson;
    };
    return {
        Printer: Printer, 
        printJson: printJson, 
        printerString: printerString
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Decode = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Lens = PS.Control_Lens;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Control_Lens_At = PS.Control_Lens_At;
    function DecodeJson(decodeJson) {
        this.decodeJson = decodeJson;
    };
    var foldableMap = function () {
        return new Data_Foldable.Foldable(function (__dict_Monoid_604) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldMap(Data_Foldable.foldableArray())(__dict_Monoid_604)(f)(Data_StrMap.values(ms));
                };
            };
        }, function (f) {
            return function (z) {
                return function (ms) {
                    return Data_Foldable.foldl(Data_Foldable.foldableArray())(f)(z)(Data_StrMap.values(ms));
                };
            };
        }, function (f) {
            return function (z) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray())(f)(z)(Data_StrMap.values(ms));
                };
            };
        });
    };
    var traversableMap = function () {
        return new Data_Traversable.Traversable(foldableMap, Data_StrMap.functorStrMap, function (__dict_Applicative_603) {
            return Data_Traversable.traverse(traversableMap())(__dict_Applicative_603)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_602) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray())(function (x) {
                        return function (acc) {
                            return Prelude["<*>"](__dict_Applicative_602["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_602["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_StrMap.union)(x))(acc);
                        };
                    })(Prelude.pure(__dict_Applicative_602)(Data_StrMap.empty))(Prelude["<$>"](Data_Array.functorArray())(function (fs) {
                        return Prelude["<$>"]((__dict_Applicative_602["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(Data_StrMap.singleton))(fs);
                    })(Prelude["<$>"](Data_Array.functorArray())(Data_Traversable.traverse(Data_Traversable.traversableTuple())(__dict_Applicative_602)(f))(Data_StrMap.toList(ms))));
                };
            };
        });
    };
    var decodeJsonString = function () {
        return new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String."))(Data_Either.Right.create));
    };
    var decodeJsonNumber = function () {
        return new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(Data_Either.Right.create));
    };
    var decodeJsonNull = function () {
        return new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
    };
    var decodeJsonJson = function () {
        return new DecodeJson(Data_Either.Right.create);
    };
    var decodeJsonBoolean = function () {
        return new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean."))(Data_Either.Right.create));
    };
    var decodeJsonArray = function () {
        return new DecodeJson(Data_Argonaut_Core.foldJsonArray(new Data_Either.Left("Not an Array."))(Data_Either.Right.create));
    };
    var decodeJson = function (dict) {
        return dict.decodeJson;
    };
    var decodeMaybe = function (__dict_DecodeJson_605) {
        return function (json) {
            return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(decodeJson(__dict_DecodeJson_605)(json));
        };
    };
    var decodeL = function (__dict_DecodeJson_606) {
        return function (__dict_EncodeJson_607) {
            return function (__dict_Applicative_608) {
                return function (__dict_Choice_609) {
                    return Control_Lens["prism'"](Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_607))(decodeMaybe(__dict_DecodeJson_606))(__dict_Applicative_608)(__dict_Choice_609);
                };
            };
        };
    };
    var objectFieldL = function (__dict_DecodeJson_610) {
        return function (__dict_EncodeJson_611) {
            return function (key) {
                return function (__dict_Applicative_612) {
                    return Prelude[">>>"](Prelude.semigroupoidArr())(decodeL(__dict_DecodeJson_610)(__dict_EncodeJson_611)(__dict_Applicative_612)(Data_Profunctor_Choice.choiceArr()))(Prelude[">>>"](Prelude.semigroupoidArr())(Control_Lens.ix(Control_Lens_At.ixedStrMapStringV())(key)(__dict_Applicative_612))(Data_Argonaut_Core.objectL(__dict_Applicative_612)(Data_Profunctor_Choice.choiceArr())));
                };
            };
        };
    };
    var decodeMap = function (__dict_DecodeJson_613) {
        return new DecodeJson(function (json) {
            return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe())(Data_Argonaut_Core.toObject(json))(function (_28) {
                return Data_Traversable.traverse(traversableMap())(Data_Maybe.applicativeMaybe())(decodeMaybe(__dict_DecodeJson_613))(_28);
            }));
        });
    };
    var decodeArray = function (__dict_DecodeJson_614) {
        return new DecodeJson(function (json) {
            return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe())(Data_Argonaut_Core.toArray(json))(function (_29) {
                return Data_Traversable.traverse(Data_Traversable.traversableArray())(Data_Maybe.applicativeMaybe())(decodeMaybe(__dict_DecodeJson_614))(_29);
            }));
        });
    };
    var arrayIndexL = function (__dict_DecodeJson_615) {
        return function (__dict_EncodeJson_616) {
            return function (i) {
                return function (__dict_Applicative_617) {
                    return Prelude[">>>"](Prelude.semigroupoidArr())(decodeL(__dict_DecodeJson_615)(__dict_EncodeJson_616)(__dict_Applicative_617)(Data_Profunctor_Choice.choiceArr()))(Prelude[">>>"](Prelude.semigroupoidArr())(Control_Lens.ix(Control_Lens_At.ixedArrayaNumberA())(i)(__dict_Applicative_617))(Data_Argonaut_Core.arrayL(__dict_Applicative_617)(Data_Profunctor_Choice.choiceArr())));
                };
            };
        };
    };
    return {
        DecodeJson: DecodeJson, 
        objectFieldL: objectFieldL, 
        arrayIndexL: arrayIndexL, 
        decodeL: decodeL, 
        decodeMaybe: decodeMaybe, 
        decodeJson: decodeJson, 
        decodeJsonNull: decodeJsonNull, 
        decodeJsonBoolean: decodeJsonBoolean, 
        decodeJsonNumber: decodeJsonNumber, 
        decodeJsonString: decodeJsonString, 
        decodeJsonArray: decodeJsonArray, 
        decodeJsonJson: decodeJsonJson, 
        decodeMap: decodeMap, 
        decodeArray: decodeArray, 
        foldableMap: foldableMap, 
        traversableMap: traversableMap
    };
})();
var PS = PS || {};
PS.Data_Argonaut = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_Printer = PS.Data_Argonaut_Printer;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var $tilde$greater = Data_Argonaut_Combinators["~>"];
    var $qmark$greater$greater$eq = Data_Argonaut_Combinators["?>>="];
    var $colon$eq = Data_Argonaut_Combinators[":="];
    var toString = Data_Argonaut_Core.toString;
    var toObject = Data_Argonaut_Core.toObject;
    var toNumber = Data_Argonaut_Core.toNumber;
    var toNull = Data_Argonaut_Core.toNull;
    var toBoolean = Data_Argonaut_Core.toBoolean;
    var toArray = Data_Argonaut_Core.toArray;
    var stringL = Data_Argonaut_Core.stringL;
    var printJson = Data_Argonaut_Printer.printJson;
    var objectL = Data_Argonaut_Core.objectL;
    var objectFieldL = Data_Argonaut_Decode.objectFieldL;
    var numberL = Data_Argonaut_Core.numberL;
    var nullL = Data_Argonaut_Core.nullL;
    var jsonZero = Data_Argonaut_Core.jsonZero;
    var jsonTrue = Data_Argonaut_Core.jsonTrue;
    var jsonStringL = Data_Argonaut_Core.jsonStringL;
    var jsonSingletonObject = Data_Argonaut_Core.jsonSingletonObject;
    var jsonSingletonArray = Data_Argonaut_Core.jsonSingletonArray;
    var jsonParser = Data_Argonaut_Parser.jsonParser;
    var jsonObjectL = Data_Argonaut_Core.jsonObjectL;
    var jsonNumberL = Data_Argonaut_Core.jsonNumberL;
    var jsonNullL = Data_Argonaut_Core.jsonNullL;
    var jsonNull = Data_Argonaut_Core.jsonNull;
    var jsonFalse = Data_Argonaut_Core.jsonFalse;
    var jsonEmptyString = Data_Argonaut_Core.jsonEmptyString;
    var jsonEmptyObject = Data_Argonaut_Core.jsonEmptyObject;
    var jsonEmptyArray = Data_Argonaut_Core.jsonEmptyArray;
    var jsonBooleanL = Data_Argonaut_Core.jsonBooleanL;
    var jsonArrayL = Data_Argonaut_Core.jsonArrayL;
    var isString = Data_Argonaut_Core.isString;
    var isObject = Data_Argonaut_Core.isObject;
    var isNumber = Data_Argonaut_Core.isNumber;
    var isNull = Data_Argonaut_Core.isNull;
    var isBoolean = Data_Argonaut_Core.isBoolean;
    var isArray = Data_Argonaut_Core.isArray;
    var fromString = Data_Argonaut_Core.fromString;
    var fromObject = Data_Argonaut_Core.fromObject;
    var fromNumber = Data_Argonaut_Core.fromNumber;
    var fromNull = Data_Argonaut_Core.fromNull;
    var fromBoolean = Data_Argonaut_Core.fromBoolean;
    var fromArray = Data_Argonaut_Core.fromArray;
    var foldJsonString = Data_Argonaut_Core.foldJsonString;
    var foldJsonObject = Data_Argonaut_Core.foldJsonObject;
    var foldJsonNumber = Data_Argonaut_Core.foldJsonNumber;
    var foldJsonNull = Data_Argonaut_Core.foldJsonNull;
    var foldJsonBoolean = Data_Argonaut_Core.foldJsonBoolean;
    var foldJsonArray = Data_Argonaut_Core.foldJsonArray;
    var foldJson = Data_Argonaut_Core.foldJson;
    var encodeJson = Data_Argonaut_Encode.encodeJson;
    var decodeMaybe = Data_Argonaut_Decode.decodeMaybe;
    var decodeL = Data_Argonaut_Decode.decodeL;
    var decodeJson = Data_Argonaut_Decode.decodeJson;
    var booleanL = Data_Argonaut_Core.booleanL;
    var arrayL = Data_Argonaut_Core.arrayL;
    var arrayIndexL = Data_Argonaut_Decode.arrayIndexL;
    return {
        printJson: printJson, 
        jsonParser: jsonParser, 
        encodeJson: encodeJson, 
        objectFieldL: objectFieldL, 
        arrayIndexL: arrayIndexL, 
        decodeL: decodeL, 
        decodeMaybe: decodeMaybe, 
        decodeJson: decodeJson, 
        jsonObjectL: jsonObjectL, 
        jsonArrayL: jsonArrayL, 
        jsonStringL: jsonStringL, 
        jsonNumberL: jsonNumberL, 
        jsonBooleanL: jsonBooleanL, 
        jsonNullL: jsonNullL, 
        objectL: objectL, 
        arrayL: arrayL, 
        stringL: stringL, 
        numberL: numberL, 
        booleanL: booleanL, 
        nullL: nullL, 
        jsonSingletonObject: jsonSingletonObject, 
        jsonSingletonArray: jsonSingletonArray, 
        jsonEmptyObject: jsonEmptyObject, 
        jsonEmptyArray: jsonEmptyArray, 
        jsonEmptyString: jsonEmptyString, 
        jsonNull: jsonNull, 
        jsonZero: jsonZero, 
        jsonFalse: jsonFalse, 
        jsonTrue: jsonTrue, 
        fromObject: fromObject, 
        fromArray: fromArray, 
        fromString: fromString, 
        fromNumber: fromNumber, 
        fromBoolean: fromBoolean, 
        fromNull: fromNull, 
        toObject: toObject, 
        toArray: toArray, 
        toString: toString, 
        toNumber: toNumber, 
        toBoolean: toBoolean, 
        toNull: toNull, 
        isObject: isObject, 
        isArray: isArray, 
        isString: isString, 
        isNumber: isNumber, 
        isBoolean: isBoolean, 
        isNull: isNull, 
        foldJsonObject: foldJsonObject, 
        foldJsonArray: foldJsonArray, 
        foldJsonString: foldJsonString, 
        foldJsonNumber: foldJsonNumber, 
        foldJsonBoolean: foldJsonBoolean, 
        foldJsonNull: foldJsonNull, 
        foldJson: foldJson, 
        "?>>=": $qmark$greater$greater$eq, 
        "~>": $tilde$greater, 
        ":=": $colon$eq
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Clown = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    function Clown(value0) {
        this.value0 = value0;
    };
    Clown.create = function (value0) {
        return new Clown(value0);
    };
    var runClown = function (_545) {
        return _545.value0;
    };
    var clownFunctor = function () {
        return new Prelude.Functor(function (_548) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Clown.create)(runClown);
        });
    };
    var clownFoldable = function () {
        return new Data_Foldable.Foldable(function (__dict_Monoid_620) {
            return function (_555) {
                return function (_556) {
                    return Data_Monoid.mempty(__dict_Monoid_620);
                };
            };
        }, function (_) {
            return function (z) {
                return Prelude["const"](z);
            };
        }, function (_) {
            return function (z) {
                return Prelude["const"](z);
            };
        });
    };
    var clownTraversable = function () {
        return new Data_Traversable.Traversable(clownFoldable, clownFunctor, function (__dict_Applicative_619) {
            return Data_Traversable.traverse(clownTraversable())(__dict_Applicative_619)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_618) {
            return function (_559) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.pure(__dict_Applicative_618))(Prelude["<<<"](Prelude.semigroupoidArr())(Clown.create)(runClown));
            };
        });
    };
    var clownBifunctor = function (__dict_Functor_624) {
        return new Data_Bifunctor.Bifunctor(function (_546) {
            return function (_547) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Clown.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"](__dict_Functor_624)(_546))(runClown));
            };
        });
    };
    var clownBifoldable = function (__dict_Foldable_625) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_626) {
            return function (_553) {
                return function (_554) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldMap(__dict_Foldable_625)(__dict_Monoid_626)(_553))(runClown);
                };
            };
        }, function (f) {
            return function (_) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldl(__dict_Foldable_625)(f)(z))(runClown);
                };
            };
        }, function (f) {
            return function (_) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldr(__dict_Foldable_625)(f)(z))(runClown);
                };
            };
        });
    };
    var clownBitraversable = function (__dict_Traversable_621) {
        return new Data_Bitraversable.Bitraversable(function () {
            return clownBifoldable(__dict_Traversable_621["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return clownBifunctor(__dict_Traversable_621["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_623) {
            return Data_Bitraversable.bitraverse(clownBitraversable(__dict_Traversable_621))(__dict_Applicative_623)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_622) {
            return function (_557) {
                return function (_558) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_622["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Clown.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Traversable.traverse(__dict_Traversable_621)(__dict_Applicative_622)(_557))(runClown));
                };
            };
        });
    };
    var clownBiapply = function (__dict_Apply_627) {
        return new Control_Biapply.Biapply(function (_549) {
            return function (_550) {
                return new Clown(Prelude["<*>"](__dict_Apply_627)(_549.value0)(_550.value0));
            };
        }, function () {
            return clownBifunctor(__dict_Apply_627["__superclass_Prelude.Functor_0"]());
        });
    };
    var clownBiapplicative = function (__dict_Applicative_628) {
        return new Control_Biapplicative.Biapplicative(function () {
            return clownBiapply(__dict_Applicative_628["__superclass_Prelude.Apply_0"]());
        }, function (_551) {
            return function (_552) {
                return new Clown(Prelude.pure(__dict_Applicative_628)(_551));
            };
        });
    };
    return {
        Clown: Clown, 
        runClown: runClown, 
        clownBifunctor: clownBifunctor, 
        clownFunctor: clownFunctor, 
        clownBiapply: clownBiapply, 
        clownBiapplicative: clownBiapplicative, 
        clownBifoldable: clownBifoldable, 
        clownFoldable: clownFoldable, 
        clownBitraversable: clownBitraversable, 
        clownTraversable: clownTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Flip = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    function Flip(value0) {
        this.value0 = value0;
    };
    Flip.create = function (value0) {
        return new Flip(value0);
    };
    var runFlip = function (_560) {
        return _560.value0;
    };
    var flipFunctor = function (__dict_Bifunctor_632) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifunctor.lmap(__dict_Bifunctor_632)(f))(runFlip));
        });
    };
    var flipFoldable = function (__dict_Bifoldable_633) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_634) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_633)(__dict_Monoid_634)(f)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_634))))(runFlip);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldl(__dict_Bifoldable_633)(f)(Prelude["const"])(z))(runFlip);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldr(__dict_Bifoldable_633)(f)(Prelude.flip(Prelude["const"]))(z))(runFlip);
            };
        });
    };
    var flipTraversable = function (__dict_Bitraversable_629) {
        return new Data_Traversable.Traversable(function () {
            return flipFoldable(__dict_Bitraversable_629["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return flipFunctor(__dict_Bitraversable_629["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_631) {
            return Data_Traversable.traverse(flipTraversable(__dict_Bitraversable_629))(__dict_Applicative_631)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_630) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_630["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bitraversable.bitraverse(__dict_Bitraversable_629)(__dict_Applicative_630)(f)(Prelude.pure(__dict_Applicative_630)))(runFlip));
            };
        });
    };
    var flipBifunctor = function (__dict_Bifunctor_638) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifunctor.bimap(__dict_Bifunctor_638)(g)(f))(runFlip));
            };
        });
    };
    var flipBifoldable = function (__dict_Bifoldable_639) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_640) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_639)(__dict_Monoid_640)(g)(f))(runFlip);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldl(__dict_Bifoldable_639)(g)(f)(z))(runFlip);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldr(__dict_Bifoldable_639)(g)(f)(z))(runFlip);
                };
            };
        });
    };
    var flipBitraversable = function (__dict_Bitraversable_635) {
        return new Data_Bitraversable.Bitraversable(function () {
            return flipBifoldable(__dict_Bitraversable_635["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return flipBifunctor(__dict_Bitraversable_635["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_637) {
            return Data_Bitraversable.bitraverse(flipBitraversable(__dict_Bitraversable_635))(__dict_Applicative_637)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_636) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_636["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bitraversable.bitraverse(__dict_Bitraversable_635)(__dict_Applicative_636)(g)(f))(runFlip));
                };
            };
        });
    };
    var flipBiapply = function (__dict_Biapply_641) {
        return new Control_Biapply.Biapply(function (_561) {
            return function (_562) {
                return new Flip(Control_Biapply["<<*>>"](__dict_Biapply_641)(_561.value0)(_562.value0));
            };
        }, function () {
            return flipBifunctor(__dict_Biapply_641["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var flipBiapplicative = function (__dict_Biapplicative_642) {
        return new Control_Biapplicative.Biapplicative(function () {
            return flipBiapply(__dict_Biapplicative_642["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return function (b) {
                return new Flip(Control_Biapplicative.bipure(__dict_Biapplicative_642)(b)(a));
            };
        });
    };
    return {
        Flip: Flip, 
        runFlip: runFlip, 
        flipBifunctor: flipBifunctor, 
        flipFunctor: flipFunctor, 
        flipBiapply: flipBiapply, 
        flipBiapplicative: flipBiapplicative, 
        flipBifoldable: flipBifoldable, 
        flipFoldable: flipFoldable, 
        flipBitraversable: flipBitraversable, 
        flipTraversable: flipTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Join = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    function Join(value0) {
        this.value0 = value0;
    };
    Join.create = function (value0) {
        return new Join(value0);
    };
    var runJoin = function (_563) {
        return _563.value0;
    };
    var joinFunctor = function (__dict_Bifunctor_646) {
        return new Prelude.Functor(function (f) {
            return Prelude["<$>"](Prelude.functorArr())(Join.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifunctor.bimap(__dict_Bifunctor_646)(f)(f))(runJoin));
        });
    };
    var joinFoldable = function (__dict_Bifoldable_647) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_648) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_647)(__dict_Monoid_648)(f)(f))(runJoin);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldl(__dict_Bifoldable_647)(f)(f)(z))(runJoin);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldr(__dict_Bifoldable_647)(f)(f)(z))(runJoin);
            };
        });
    };
    var joinTraversable = function (__dict_Bitraversable_643) {
        return new Data_Traversable.Traversable(function () {
            return joinFoldable(__dict_Bitraversable_643["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return joinFunctor(__dict_Bitraversable_643["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_645) {
            return Data_Traversable.traverse(joinTraversable(__dict_Bitraversable_643))(__dict_Applicative_645)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_644) {
            return function (_566) {
                return function (_567) {
                    return Prelude["<$>"]((__dict_Applicative_644["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Join.create)(Data_Bitraversable.bitraverse(__dict_Bitraversable_643)(__dict_Applicative_644)(_566)(_566)(_567.value0));
                };
            };
        });
    };
    var joinApply = function (__dict_Biapply_649) {
        return new Prelude.Apply(function (_564) {
            return function (_565) {
                return new Join(Control_Biapply["<<*>>"](__dict_Biapply_649)(_564.value0)(_565.value0));
            };
        }, function () {
            return joinFunctor(__dict_Biapply_649["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var joinApplicative = function (__dict_Biapplicative_650) {
        return new Prelude.Applicative(function () {
            return joinApply(__dict_Biapplicative_650["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return new Join(Control_Biapplicative.bipure(__dict_Biapplicative_650)(a)(a));
        });
    };
    return {
        Join: Join, 
        runJoin: runJoin, 
        joinFunctor: joinFunctor, 
        joinApply: joinApply, 
        joinApplicative: joinApplicative, 
        joinFoldable: joinFoldable, 
        joinTraversable: joinTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Joker = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    function Joker(value0) {
        this.value0 = value0;
    };
    Joker.create = function (value0) {
        return new Joker(value0);
    };
    var runJoker = function (_568) {
        return _568.value0;
    };
    var jokerFunctor = function (__dict_Functor_654) {
        return new Prelude.Functor(function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Joker.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"](__dict_Functor_654)(g))(runJoker));
        });
    };
    var jokerFoldable = function (__dict_Foldable_655) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_656) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldMap(__dict_Foldable_655)(__dict_Monoid_656)(g))(runJoker);
            };
        }, function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldl(__dict_Foldable_655)(g)(z))(runJoker);
            };
        }, function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldr(__dict_Foldable_655)(g)(z))(runJoker);
            };
        });
    };
    var jokerTraversable = function (__dict_Traversable_651) {
        return new Data_Traversable.Traversable(function () {
            return jokerFoldable(__dict_Traversable_651["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return jokerFunctor(__dict_Traversable_651["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_653) {
            return Data_Traversable.traverse(jokerTraversable(__dict_Traversable_651))(__dict_Applicative_653)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_652) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_652["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Joker.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Traversable.traverse(__dict_Traversable_651)(__dict_Applicative_652)(g))(runJoker));
            };
        });
    };
    var jokerBifunctor = function (__dict_Functor_660) {
        return new Data_Bifunctor.Bifunctor(function (_) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Joker.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"](__dict_Functor_660)(g))(runJoker));
            };
        });
    };
    var jokerBifoldable = function (__dict_Foldable_661) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_662) {
            return function (_) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldMap(__dict_Foldable_661)(__dict_Monoid_662)(g))(runJoker);
                };
            };
        }, function (_) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldl(__dict_Foldable_661)(g)(z))(runJoker);
                };
            };
        }, function (_) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Foldable.foldr(__dict_Foldable_661)(g)(z))(runJoker);
                };
            };
        });
    };
    var jokerBitraversable = function (__dict_Traversable_657) {
        return new Data_Bitraversable.Bitraversable(function () {
            return jokerBifoldable(__dict_Traversable_657["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return jokerBifunctor(__dict_Traversable_657["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_659) {
            return Data_Bitraversable.bitraverse(jokerBitraversable(__dict_Traversable_657))(__dict_Applicative_659)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_658) {
            return function (_) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_658["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Joker.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Traversable.traverse(__dict_Traversable_657)(__dict_Applicative_658)(g))(runJoker));
                };
            };
        });
    };
    var jokerBiapply = function (__dict_Apply_663) {
        return new Control_Biapply.Biapply(function (_569) {
            return function (_570) {
                return new Joker(Prelude["<*>"](__dict_Apply_663)(_569.value0)(_570.value0));
            };
        }, function () {
            return jokerBifunctor(__dict_Apply_663["__superclass_Prelude.Functor_0"]());
        });
    };
    var jokerBiapplicative = function (__dict_Applicative_664) {
        return new Control_Biapplicative.Biapplicative(function () {
            return jokerBiapply(__dict_Applicative_664["__superclass_Prelude.Apply_0"]());
        }, function (_) {
            return function (b) {
                return new Joker(Prelude.pure(__dict_Applicative_664)(b));
            };
        });
    };
    return {
        Joker: Joker, 
        runJoker: runJoker, 
        jokerBifunctor: jokerBifunctor, 
        jokerFunctor: jokerFunctor, 
        jokerBiapply: jokerBiapply, 
        jokerBiapplicative: jokerBiapplicative, 
        jokerBifoldable: jokerBifoldable, 
        jokerFoldable: jokerFoldable, 
        jokerBitraversable: jokerBitraversable, 
        jokerTraversable: jokerTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Monoid_Endo = PS.Data_Monoid_Endo;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    function Pair(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Pair.create = function (value0) {
        return function (value1) {
            return new Pair(value0, value1);
        };
    };
    var productBifunctor = function (__dict_Bifunctor_669) {
        return function (__dict_Bifunctor_670) {
            return new Data_Bifunctor.Bifunctor(function (_571) {
                return function (_572) {
                    return function (_573) {
                        return new Pair(Data_Bifunctor.bimap(__dict_Bifunctor_669)(_571)(_572)(_573.value0), Data_Bifunctor.bimap(__dict_Bifunctor_670)(_571)(_572)(_573.value1));
                    };
                };
            });
        };
    };
    var productBifoldable = function (__dict_Bifoldable_671) {
        return function (__dict_Bifoldable_672) {
            return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_673) {
                return function (_576) {
                    return function (_577) {
                        return function (_578) {
                            return Prelude["<>"](__dict_Monoid_673["__superclass_Prelude.Semigroup_0"]())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_671)(__dict_Monoid_673)(_576)(_577)(_578.value0))(Data_Bifoldable.bifoldMap(__dict_Bifoldable_672)(__dict_Monoid_673)(_576)(_577)(_578.value1));
                        };
                    };
                };
            }, function (f) {
                return function (g) {
                    return function (z) {
                        return function (p) {
                            return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(Data_Bifoldable.bifoldMap(productBifoldable(__dict_Bifoldable_671)(__dict_Bifoldable_672))(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo()))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Dual.Dual.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Endo.Endo.create)(Prelude.flip(f))))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Dual.Dual.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Endo.Endo.create)(Prelude.flip(g))))(p)))(z);
                        };
                    };
                };
            }, function (f) {
                return function (g) {
                    return function (z) {
                        return function (p) {
                            return Data_Monoid_Endo.runEndo(Data_Bifoldable.bifoldMap(productBifoldable(__dict_Bifoldable_671)(__dict_Bifoldable_672))(Data_Monoid_Endo.monoidEndo())(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Endo.Endo.create)(f))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Endo.Endo.create)(g))(p))(z);
                        };
                    };
                };
            });
        };
    };
    var productBitraversable = function (__dict_Bitraversable_665) {
        return function (__dict_Bitraversable_666) {
            return new Data_Bitraversable.Bitraversable(function () {
                return productBifoldable(__dict_Bitraversable_665["__superclass_Data.Bifoldable.Bifoldable_1"]())(__dict_Bitraversable_666["__superclass_Data.Bifoldable.Bifoldable_1"]());
            }, function () {
                return productBifunctor(__dict_Bitraversable_665["__superclass_Data.Bifunctor.Bifunctor_0"]())(__dict_Bitraversable_666["__superclass_Data.Bifunctor.Bifunctor_0"]());
            }, function (__dict_Applicative_668) {
                return Data_Bitraversable.bitraverse(productBitraversable(__dict_Bitraversable_665)(__dict_Bitraversable_666))(__dict_Applicative_668)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
            }, function (__dict_Applicative_667) {
                return function (_579) {
                    return function (_580) {
                        return function (_581) {
                            return Prelude["<*>"](__dict_Applicative_667["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_667["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Pair.create)(Data_Bitraversable.bitraverse(__dict_Bitraversable_665)(__dict_Applicative_667)(_579)(_580)(_581.value0)))(Data_Bitraversable.bitraverse(__dict_Bitraversable_666)(__dict_Applicative_667)(_579)(_580)(_581.value1));
                        };
                    };
                };
            });
        };
    };
    var productBiapply = function (__dict_Biapply_674) {
        return function (__dict_Biapply_675) {
            return new Control_Biapply.Biapply(function (_574) {
                return function (_575) {
                    return new Pair(Control_Biapply["<<*>>"](__dict_Biapply_674)(_574.value0)(_575.value0), Control_Biapply["<<*>>"](__dict_Biapply_675)(_574.value1)(_575.value1));
                };
            }, function () {
                return productBifunctor(__dict_Biapply_674["__superclass_Data.Bifunctor.Bifunctor_0"]())(__dict_Biapply_675["__superclass_Data.Bifunctor.Bifunctor_0"]());
            });
        };
    };
    var productBiapplicative = function (__dict_Biapplicative_676) {
        return function (__dict_Biapplicative_677) {
            return new Control_Biapplicative.Biapplicative(function () {
                return productBiapply(__dict_Biapplicative_676["__superclass_Control.Biapply.Biapply_0"]())(__dict_Biapplicative_677["__superclass_Control.Biapply.Biapply_0"]());
            }, function (a) {
                return function (b) {
                    return new Pair(Control_Biapplicative.bipure(__dict_Biapplicative_676)(a)(b), Control_Biapplicative.bipure(__dict_Biapplicative_677)(a)(b));
                };
            });
        };
    };
    return {
        Pair: Pair, 
        productBifunctor: productBifunctor, 
        productBiapply: productBiapply, 
        productBiapplicative: productBiapplicative, 
        productBifoldable: productBifoldable, 
        productBitraversable: productBitraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Wrap = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    function Wrap(value0) {
        this.value0 = value0;
    };
    Wrap.create = function (value0) {
        return new Wrap(value0);
    };
    var unwrap = function (_582) {
        return _582.value0;
    };
    var wrapBifoldable = function (__dict_Bifoldable_680) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_681) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_680)(__dict_Monoid_681)(f)(g))(unwrap);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldl(__dict_Bifoldable_680)(f)(g)(z))(unwrap);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldr(__dict_Bifoldable_680)(f)(g)(z))(unwrap);
                };
            };
        });
    };
    var wrapBifunctor = function (__dict_Bifunctor_682) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifunctor.bimap(__dict_Bifunctor_682)(f)(g))(unwrap));
            };
        });
    };
    var wrapBiapply = function (__dict_Biapply_678) {
        return new Control_Biapply.Biapply(function (_583) {
            return function (_584) {
                return new Wrap(Control_Biapply["<<*>>"](__dict_Biapply_678)(_583.value0)(_584.value0));
            };
        }, function () {
            return wrapBifunctor(__dict_Biapply_678["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var wrapBiapplicative = function (__dict_Biapplicative_679) {
        return new Control_Biapplicative.Biapplicative(function () {
            return wrapBiapply(__dict_Biapplicative_679["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return function (b) {
                return new Wrap(Control_Biapplicative.bipure(__dict_Biapplicative_679)(a)(b));
            };
        });
    };
    var wrapBitraversable = function (__dict_Bitraversable_683) {
        return new Data_Bitraversable.Bitraversable(function () {
            return wrapBifoldable(__dict_Bitraversable_683["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return wrapBifunctor(__dict_Bitraversable_683["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_685) {
            return Data_Bitraversable.bitraverse(wrapBitraversable(__dict_Bitraversable_683))(__dict_Applicative_685)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_684) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_684["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bitraversable.bitraverse(__dict_Bitraversable_683)(__dict_Applicative_684)(f)(g))(unwrap));
                };
            };
        });
    };
    var wrapFoldable = function (__dict_Bifoldable_686) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_687) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_686)(__dict_Monoid_687)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_687)))(f))(unwrap);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldl(__dict_Bifoldable_686)(Prelude["const"])(f)(z))(unwrap);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifoldable.bifoldr(__dict_Bifoldable_686)(Prelude.flip(Prelude["const"]))(f)(z))(unwrap);
            };
        });
    };
    var wrapFunctor = function (__dict_Bifunctor_688) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bifunctor.rmap(__dict_Bifunctor_688)(f))(unwrap));
        });
    };
    var wrapTraversable = function (__dict_Bitraversable_689) {
        return new Data_Traversable.Traversable(function () {
            return wrapFoldable(__dict_Bitraversable_689["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return wrapFunctor(__dict_Bitraversable_689["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_691) {
            return Data_Traversable.traverse(wrapTraversable(__dict_Bitraversable_689))(__dict_Applicative_691)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_690) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"]((__dict_Applicative_690["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Bitraversable.bitraverse(__dict_Bitraversable_689)(__dict_Applicative_690)(Prelude.pure(__dict_Applicative_690))(f))(unwrap));
            };
        });
    };
    return {
        Wrap: Wrap, 
        unwrap: unwrap, 
        wrapBifunctor: wrapBifunctor, 
        wrapFunctor: wrapFunctor, 
        wrapBiapply: wrapBiapply, 
        wrapBiapplicative: wrapBiapplicative, 
        wrapBifoldable: wrapBifoldable, 
        wrapFoldable: wrapFoldable, 
        wrapBitraversable: wrapBitraversable, 
        wrapTraversable: wrapTraversable
    };
})();
var PS = PS || {};
PS.Data_Graph = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Math = PS.Math;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Map = PS.Data_Map;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad = PS.Control_Monad;
    var Data_Array = PS.Data_Array;
    function AcyclicSCC(value0) {
        this.value0 = value0;
    };
    AcyclicSCC.create = function (value0) {
        return new AcyclicSCC(value0);
    };
    function CyclicSCC(value0) {
        this.value0 = value0;
    };
    CyclicSCC.create = function (value0) {
        return new CyclicSCC(value0);
    };
    function Edge(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Edge.create = function (value0) {
        return function (value1) {
            return new Edge(value0, value1);
        };
    };
    function Graph(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Graph.create = function (value0) {
        return function (value1) {
            return new Graph(value0, value1);
        };
    };
    var vertices = function (_587) {
        if (_587 instanceof AcyclicSCC) {
            return [ _587.value0 ];
        };
        if (_587 instanceof CyclicSCC) {
            return _587.value0;
        };
        throw new Error("Failed pattern match");
    };
    var showSCC = function (__dict_Show_692) {
        return new Prelude.Show(function (_597) {
            if (_597 instanceof AcyclicSCC) {
                return "AcyclicSCC (" + (Prelude.show(__dict_Show_692)(_597.value0) + ")");
            };
            if (_597 instanceof CyclicSCC) {
                return "CyclicSCC " + Prelude.show(Prelude.showArray(__dict_Show_692))(_597.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var popUntil = function (__copy___dict_Eq_693) {
        return function (__copy__591) {
            return function (__copy__592) {
                return function (__copy__593) {
                    return function (__copy__594) {
                        var __dict_Eq_693 = __copy___dict_Eq_693;
                        var _591 = __copy__591;
                        var _592 = __copy__592;
                        var _593 = __copy__593;
                        var _594 = __copy__594;
                        tco: while (true) {
                            if (_593.length === 0) {
                                return {
                                    path: [  ], 
                                    component: _594
                                };
                            };
                            if (_593.length >= 1) {
                                var _2108 = _593.slice(1);
                                if (Prelude["=="](__dict_Eq_693)(_591(_592))(_591(_593[0]))) {
                                    return {
                                        path: _2108, 
                                        component: Prelude[":"](_593[0])(_594)
                                    };
                                };
                            };
                            if (_593.length >= 1) {
                                var _2110 = _593.slice(1);
                                var __tco___dict_Eq_693 = __dict_Eq_693;
                                var __tco__591 = _591;
                                var __tco__592 = _592;
                                var __tco__594 = Prelude[":"](_593[0])(_594);
                                __dict_Eq_693 = __tco___dict_Eq_693;
                                _591 = __tco__591;
                                _592 = __tco__592;
                                _593 = _2110;
                                _594 = __tco__594;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    var maybeMin = function (_595) {
        return function (_596) {
            if (_596 instanceof Data_Maybe.Nothing) {
                return new Data_Maybe.Just(_595);
            };
            if (_596 instanceof Data_Maybe.Just) {
                return Data_Maybe.Just.create(Math.min(_595)(_596.value0));
            };
            throw new Error("Failed pattern match");
        };
    };
    var scc$prime = function (__dict_Eq_694) {
        return function (__dict_Ord_695) {
            return function (_588) {
                return function (_589) {
                    return function (_590) {
                        return Control_Monad_Eff.runPure(function __do() {
                            var _45 = {
                                value: 0
                            };
                            var _44 = {
                                value: [  ]
                            };
                            var _43 = {
                                value: Data_Map.empty
                            };
                            var _42 = {
                                value: Data_Map.empty
                            };
                            var _41 = {
                                value: [  ]
                            };
                            return (function () {
                                var lowlinkOfKey = function (k) {
                                    return function __do() {
                                        return Data_Map.lookup(__dict_Ord_695)(k)(_42.value);
                                    };
                                };
                                var lowlinkOf = function (v) {
                                    return lowlinkOfKey(_588(v));
                                };
                                var isCycle = function (k) {
                                    return Data_Foldable.any(Data_Foldable.foldableArray())(function (_586) {
                                        return Prelude["=="](__dict_Eq_694)(_586.value0)(k) && Prelude["=="](__dict_Eq_694)(_586.value1)(k);
                                    })(_590.value1);
                                };
                                var makeComponent = function (_601) {
                                    if (_601.length === 1 && !isCycle(_588(_601[0]))) {
                                        return new AcyclicSCC(_601[0]);
                                    };
                                    return new CyclicSCC(_601);
                                };
                                var indexOfKey = function (k) {
                                    return function __do() {
                                        return Data_Map.lookup(__dict_Ord_695)(k)(_43.value);
                                    };
                                };
                                var strongConnect = function (k) {
                                    var v = _589(k);
                                    return function __do() {
                                        var _40 = _45.value;
                                        _43.value = Data_Map.insert(__dict_Ord_695)(k)(_40)(_43.value);
                                        _42.value = Data_Map.insert(__dict_Ord_695)(k)(_40)(_42.value);
                                        _45.value = _40 + 1;
                                        _44.value = Prelude[":"](v)(_44.value);
                                        Data_Traversable["for"](Control_Monad_Eff.applicativeEff())(Data_Traversable.traversableArray())(_590.value1)(function (_585) {
                                            return Control_Monad.when(Control_Monad_Eff.monadEff())(Prelude["=="](__dict_Eq_694)(k)(_585.value0))(function __do() {
                                                var _36 = indexOfKey(_585.value1)();
                                                return (function () {
                                                    if (_36 instanceof Data_Maybe.Nothing) {
                                                        var w = _589(_585.value1);
                                                        return function __do() {
                                                            strongConnect(_585.value1)();
                                                            var _33 = lowlinkOfKey(_585.value1)();
                                                            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff())(Data_Foldable.foldableMaybe())(_33)(function (lowlink) {
                                                                return Control_Monad_ST.modifySTRef(_42)(Data_Map.alter(__dict_Ord_695)(maybeMin(lowlink))(k));
                                                            })();
                                                        };
                                                    };
                                                    return Control_Monad.when(Control_Monad_Eff.monadEff())(Data_Foldable.elem(__dict_Eq_694)(Data_Foldable.foldableArray())(_585.value1)(Data_Array.map(_588)(_44.value)))(function __do() {
                                                        var _34 = indexOfKey(_585.value1)();
                                                        return Data_Foldable.for_(Control_Monad_Eff.applicativeEff())(Data_Foldable.foldableMaybe())(_34)(function (index_1) {
                                                            return Control_Monad_ST.modifySTRef(_42)(Data_Map.alter(__dict_Ord_695)(maybeMin(index_1))(k));
                                                        })();
                                                    });
                                                })()();
                                            });
                                        })();
                                        var _39 = indexOfKey(k)();
                                        var _38 = lowlinkOfKey(k)();
                                        return Control_Monad.when(Control_Monad_Eff.monadEff())(Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqNumber()))(_39)(_38))(function __do() {
                                            var _37 = _44.value;
                                            return (function () {
                                                var newPath = popUntil(__dict_Eq_694)(_588)(v)(_37)([  ]);
                                                return function __do() {
                                                    _41.value = Prelude.flip(Prelude["++"](Data_Array.semigroupArray()))([ makeComponent(newPath.component) ])(_41.value);
                                                    _44.value = newPath.path;
                                                    return Prelude.unit;
                                                };
                                            })()();
                                        })();
                                    };
                                };
                                var indexOf = function (v) {
                                    return indexOfKey(_588(v));
                                };
                                var go = function (_600) {
                                    if (_600.length === 0) {
                                        return Control_Monad_ST.readSTRef(_41);
                                    };
                                    if (_600.length >= 1) {
                                        var _2144 = _600.slice(1);
                                        return function __do() {
                                            var _32 = indexOf(_600[0])();
                                            Control_Monad.when(Control_Monad_Eff.monadEff())(Data_Maybe.isNothing(_32))(strongConnect(_588(_600[0])))();
                                            return go(_2144)();
                                        };
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                return go(_590.value0);
                            })()();
                        });
                    };
                };
            };
        };
    };
    var scc = function (__dict_Eq_696) {
        return function (__dict_Ord_697) {
            return scc$prime(__dict_Eq_696)(__dict_Ord_697)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        };
    };
    var topSort$prime = function (__dict_Eq_698) {
        return function (__dict_Ord_699) {
            return function (makeKey) {
                return function (makeVert) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Array.reverse)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Array.concatMap(vertices))(scc$prime(__dict_Eq_698)(__dict_Ord_699)(makeKey)(makeVert)));
                };
            };
        };
    };
    var topSort = function (__dict_Eq_700) {
        return function (__dict_Ord_701) {
            return topSort$prime(__dict_Eq_700)(__dict_Ord_701)(Prelude.id(Prelude.categoryArr()))(Prelude.id(Prelude.categoryArr()));
        };
    };
    var eqSCC = function (__dict_Eq_702) {
        return new Prelude.Eq(function (scc1) {
            return function (scc2) {
                return !Prelude["=="](eqSCC(__dict_Eq_702))(scc1)(scc2);
            };
        }, function (_598) {
            return function (_599) {
                if (_598 instanceof AcyclicSCC && _599 instanceof AcyclicSCC) {
                    return Prelude["=="](__dict_Eq_702)(_598.value0)(_599.value0);
                };
                if (_598 instanceof CyclicSCC && _599 instanceof CyclicSCC) {
                    return Prelude["=="](Prelude.eqArray(__dict_Eq_702))(_598.value0)(_599.value0);
                };
                return false;
            };
        });
    };
    return {
        AcyclicSCC: AcyclicSCC, 
        CyclicSCC: CyclicSCC, 
        Graph: Graph, 
        Edge: Edge, 
        "topSort'": topSort$prime, 
        topSort: topSort, 
        "scc'": scc$prime, 
        scc: scc, 
        vertices: vertices, 
        showSCC: showSCC, 
        eqSCC: eqSCC
    };
})();
var PS = PS || {};
PS.Test_QuickCheck_LCG = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Math = PS.Math;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Debug_Trace = PS.Debug_Trace;
    function Gen(value0) {
        this.value0 = value0;
    };
    Gen.create = function (value0) {
        return new Gen(value0);
    };
    function float32ToInt32(n) {  var arr = new ArrayBuffer(4);  var fv = new Float32Array(arr);  var iv = new Int32Array(arr);  fv[0] = n;  return iv[0];};
    var runGen = function (_602) {
        return _602.value0;
    };
    var stateful = function (f) {
        return new Gen(function (s) {
            return runGen(f(s))(s);
        });
    };
    var sized = function (f) {
        return stateful(function (s) {
            return f(s.size);
        });
    };
    var variant = function (n) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _2155 = {};
                    for (var _2156 in s) {
                        if (s.hasOwnProperty(_2156)) {
                            _2155[_2156] = s[_2156];
                        };
                    };
                    _2155.newSeed = n;
                    return _2155;
                })());
            });
        };
    };
    var resize = function (sz) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _2157 = {};
                    for (var _2158 in s) {
                        if (s.hasOwnProperty(_2158)) {
                            _2157[_2158] = s[_2158];
                        };
                    };
                    _2157.size = sz;
                    return _2157;
                })());
            });
        };
    };
    var repeatable = function (f) {
        return Gen.create(function (s) {
            return {
                value: function (a) {
                    return (runGen(f(a))(s)).value;
                }, 
                state: s
            };
        });
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var lcgStep = (function () {
        var f = function (s) {
            return {
                value: s.newSeed, 
                state: (function () {
                    var _2159 = {};
                    for (var _2160 in s) {
                        if (s.hasOwnProperty(_2160)) {
                            _2159[_2160] = s[_2160];
                        };
                    };
                    _2159.newSeed = lcgNext(s.newSeed);
                    return _2159;
                })()
            };
        };
        return new Gen(f);
    })();
    var perturbGen = function (_603) {
        return function (_604) {
            return Gen.create(function (s) {
                return _604.value0((function () {
                    var _2163 = {};
                    for (var _2164 in s) {
                        if (s.hasOwnProperty(_2164)) {
                            _2163[_2164] = s[_2164];
                        };
                    };
                    _2163.newSeed = lcgNext(float32ToInt32(_603)) + s.newSeed;
                    return _2163;
                })());
            });
        };
    };
    var functorGen = function () {
        return new Prelude.Functor(function (_608) {
            return function (_609) {
                return Gen.create(function (s) {
                    var _2168 = _609.value0(s);
                    return {
                        value: _608(_2168.value), 
                        state: _2168.state
                    };
                });
            };
        });
    };
    var uniform = Prelude["<$>"](functorGen())(function (n) {
        return n / (1 << 30);
    })(lcgStep);
    var evalGen = function (gen) {
        return function (st) {
            return (runGen(gen)(st)).value;
        };
    };
    var choose = function (a) {
        return function (b) {
            var min = Math.min(a)(b);
            var max = Math.max(a)(b);
            return Prelude["<$>"](functorGen())(Prelude[">>>"](Prelude.semigroupoidArr())(Prelude["*"](Prelude.numNumber())(max - min))(Prelude["+"](Prelude.numNumber())(min)))(uniform);
        };
    };
    var chooseInt = function (a) {
        return function (b) {
            return Prelude["<$>"](functorGen())(Math.floor)(choose(Math.ceil(a))(Math.floor(b) + 0.9999999989999999));
        };
    };
    var applyGen = function () {
        return new Prelude.Apply(function (_610) {
            return function (_611) {
                return Gen.create(function (s) {
                    var _2174 = _610.value0(s);
                    var _2175 = _611.value0(_2174.state);
                    return {
                        value: _2174.value(_2175.value), 
                        state: _2175.state
                    };
                });
            };
        }, functorGen);
    };
    var bindGen = function () {
        return new Prelude.Bind(function (_612) {
            return function (_613) {
                return Gen.create(function (s) {
                    var _2184 = _612.value0(s);
                    return runGen(_613(_2184.value))(_2184.state);
                });
            };
        }, applyGen);
    };
    var frequency = function (x) {
        return function (xs) {
            var xxs = Prelude[":"](x)(xs);
            var total = Data_Monoid_Sum.runSum(Data_Foldable.fold(Data_Foldable.foldableArray())(Data_Monoid_Sum.monoidSum())(Prelude["<$>"](Data_Array.functorArray())(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Sum.Sum.create)(Data_Tuple.fst))(xxs)));
            var pick = function (_605) {
                return function (_606) {
                    return function (_607) {
                        if (_607.length === 0) {
                            return _606;
                        };
                        if (_607.length >= 1) {
                            var _2194 = _607.slice(1);
                            return _605 <= (_607[0]).value0 ? (_607[0]).value1 : pick(_605 - (_607[0]).value0)(_606)(_2194);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return Prelude[">>="](bindGen())(chooseInt(1)(total))(function (_47) {
                return pick(_47)(Data_Tuple.snd(x))(xxs);
            });
        };
    };
    var oneOf = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen())(chooseInt(0)(Data_Array.length(xs)))(function (_46) {
                return _46 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_46 - 1));
            });
        };
    };
    var applicativeGen = function () {
        return new Prelude.Applicative(applyGen, function (a) {
            return new Gen(function (s) {
                return {
                    value: a, 
                    state: s
                };
            });
        });
    };
    var elements = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen())(chooseInt(0)(Data_Array.length(xs)))(function (_52) {
                return Prelude.pure(applicativeGen())(_52 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_52 - 1)));
            });
        };
    };
    var monadGen = function () {
        return new Prelude.Monad(applicativeGen, bindGen);
    };
    var vectorOf = function (k) {
        return function (g) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray())(applicativeGen())(Prelude["<$>"](Data_Array.functorArray())(Prelude["const"](g))(Data_Array.range(1)(k)));
        };
    };
    var listOf = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen())(chooseInt(0)(n))(function (_48) {
                return vectorOf(_48)(g);
            });
        });
    };
    var listOf1 = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen())(chooseInt(0)(n))(function (_51) {
                return Prelude[">>="](bindGen())(g)(function (_50) {
                    return Prelude[">>="](bindGen())(vectorOf(_51 - 1)(g))(function (_49) {
                        return Prelude["return"](monadGen())(new Data_Tuple.Tuple(_50, _49));
                    });
                });
            });
        });
    };
    var sample = function (sz) {
        return function (g) {
            return evalGen(vectorOf(sz)(g))({
                newSeed: 0, 
                size: sz
            });
        };
    };
    var showSample$prime = function (__dict_Show_703) {
        return function (n) {
            return function (g) {
                return Debug_Trace.print(Prelude.showArray(__dict_Show_703))(sample(n)(g));
            };
        };
    };
    var showSample = function (__dict_Show_704) {
        return showSample$prime(__dict_Show_704)(10);
    };
    return {
        "showSample'": showSample$prime, 
        showSample: showSample, 
        uniform: uniform, 
        perturbGen: perturbGen, 
        evalGen: evalGen, 
        runGen: runGen, 
        elements: elements, 
        vectorOf: vectorOf, 
        listOf1: listOf1, 
        listOf: listOf, 
        frequency: frequency, 
        oneOf: oneOf, 
        chooseInt: chooseInt, 
        choose: choose, 
        resize: resize, 
        sized: sized, 
        variant: variant, 
        stateful: stateful, 
        repeatable: repeatable, 
        functorGen: functorGen, 
        applyGen: applyGen, 
        applicativeGen: applicativeGen, 
        bindGen: bindGen, 
        monadGen: monadGen
    };
})();
var PS = PS || {};
PS.Test_QuickCheck = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Test_QuickCheck_LCG = PS.Test_QuickCheck_LCG;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Array = PS.Data_Array;
    var Data_String = PS.Data_String;
    var Math = PS.Math;
    function Success() {

    };
    Success.value = new Success();
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    var AlphaNumString = {
        create: function (value) {
            return value;
        }
    };
    function Arbitrary(arbitrary) {
        this.arbitrary = arbitrary;
    };
    function CoArbitrary(coarbitrary) {
        this.coarbitrary = coarbitrary;
    };
    function Testable(test) {
        this.test = test;
    };
    var $less$qmark$greater = function (_614) {
        return function (_615) {
            if (_614) {
                return Success.value;
            };
            if (!_614) {
                return new Failed(_615);
            };
            throw new Error("Failed pattern match");
        };
    };
    var testableResult = function () {
        return new Testable(Prelude["return"](Test_QuickCheck_LCG.monadGen()));
    };
    var testableBoolean = function () {
        return new Testable(function (_623) {
            if (_623) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGen())(Success.value);
            };
            if (!_623) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGen())(new Failed("Test returned false"));
            };
            throw new Error("Failed pattern match");
        });
    };
    var test = function (dict) {
        return dict.test;
    };
    var showResult = function () {
        return new Prelude.Show(function (_616) {
            if (_616 instanceof Success) {
                return "Success";
            };
            if (_616 instanceof Failed) {
                return "Failed: " + _616.value0;
            };
            throw new Error("Failed pattern match");
        });
    };
    var quickCheckPure = function (__dict_Testable_705) {
        return function (s) {
            var quickCheckPure$prime = function (st) {
                return function (n) {
                    return function (prop) {
                        var go = function (_624) {
                            if (_624 <= 0) {
                                return Prelude["return"](Test_QuickCheck_LCG.monadGen())([  ]);
                            };
                            return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(test(__dict_Testable_705)(prop))(function (_64) {
                                return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(go(_624 - 1))(function (_63) {
                                    return Prelude["return"](Test_QuickCheck_LCG.monadGen())(Prelude[":"](_64)(_63));
                                });
                            });
                        };
                        return Test_QuickCheck_LCG.evalGen(go(n))(st);
                    };
                };
            };
            return quickCheckPure$prime({
                newSeed: s, 
                size: 10
            });
        };
    };
    var quickCheck$prime = function (__dict_Testable_706) {
        return function (n) {
            return function (prop) {
                var throwOnFirstFailure = function (__copy__625) {
                    return function (__copy__626) {
                        var _625 = __copy__625;
                        var _626 = __copy__626;
                        tco: while (true) {
                            if (_626.length === 0) {
                                return Prelude["return"](Control_Monad_Eff.monadEff())(Prelude.unit);
                            };
                            if (_626.length >= 1) {
                                var _2214 = _626.slice(1);
                                if (_626[0] instanceof Failed) {
                                    return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Test " + (Prelude.show(Prelude.showNumber())(_625) + (" failed: \n" + (_626[0]).value0))));
                                };
                            };
                            if (_626.length >= 1) {
                                var _2216 = _626.slice(1);
                                var __tco__625 = _625 + 1;
                                _625 = __tco__625;
                                _626 = _2216;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                var countSuccesses = function (_627) {
                    if (_627.length === 0) {
                        return 0;
                    };
                    if (_627.length >= 1) {
                        var _2219 = _627.slice(1);
                        if (_627[0] instanceof Success) {
                            return 1 + countSuccesses(_2219);
                        };
                    };
                    if (_627.length >= 1) {
                        var _2221 = _627.slice(1);
                        return countSuccesses(_2221);
                    };
                    throw new Error("Failed pattern match");
                };
                return function __do() {
                    var _65 = Control_Monad_Eff_Random.random();
                    return (function () {
                        var results = quickCheckPure(__dict_Testable_706)(_65)(n)(prop);
                        var successes = countSuccesses(results);
                        return function __do() {
                            Debug_Trace.trace(Prelude.show(Prelude.showNumber())(successes) + ("/" + (Prelude.show(Prelude.showNumber())(n) + " test(s) passed.")))();
                            return throwOnFirstFailure(1)(results)();
                        };
                    })()();
                };
            };
        };
    };
    var quickCheck = function (__dict_Testable_707) {
        return function (prop) {
            return quickCheck$prime(__dict_Testable_707)(100)(prop);
        };
    };
    var coarbitrary = function (dict) {
        return dict.coarbitrary;
    };
    var coarbTuple = function (__dict_CoArbitrary_708) {
        return function (__dict_CoArbitrary_709) {
            return new CoArbitrary(function (_619) {
                return Prelude[">>>"](Prelude.semigroupoidArr())(coarbitrary(__dict_CoArbitrary_708)(_619.value0))(coarbitrary(__dict_CoArbitrary_709)(_619.value1));
            });
        };
    };
    var coarbNumber = function () {
        return new CoArbitrary(Test_QuickCheck_LCG.perturbGen);
    };
    var coarbMaybe = function (__dict_CoArbitrary_710) {
        return new CoArbitrary(function (_621) {
            if (_621 instanceof Data_Maybe.Nothing) {
                return Test_QuickCheck_LCG.perturbGen(1);
            };
            if (_621 instanceof Data_Maybe.Just) {
                return coarbitrary(__dict_CoArbitrary_710)(_621.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbEither = function (__dict_CoArbitrary_711) {
        return function (__dict_CoArbitrary_712) {
            return new CoArbitrary(function (_620) {
                if (_620 instanceof Data_Either.Left) {
                    return coarbitrary(__dict_CoArbitrary_711)(_620.value0);
                };
                if (_620 instanceof Data_Either.Right) {
                    return coarbitrary(__dict_CoArbitrary_712)(_620.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var coarbBoolean = function () {
        return new CoArbitrary(function (_617) {
            if (_617) {
                return Test_QuickCheck_LCG.perturbGen(1);
            };
            if (!_617) {
                return Test_QuickCheck_LCG.perturbGen(2);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbArray = function (__dict_CoArbitrary_713) {
        return new CoArbitrary(function (_622) {
            if (_622.length === 0) {
                return Prelude.id(Prelude.categoryArr());
            };
            if (_622.length >= 1) {
                var _2234 = _622.slice(1);
                return Prelude["<<<"](Prelude.semigroupoidArr())(coarbitrary(coarbArray(__dict_CoArbitrary_713))(_2234))(coarbitrary(__dict_CoArbitrary_713)(_622[0]));
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbString = function () {
        return new CoArbitrary(function (s) {
            return coarbitrary(coarbArray(coarbNumber()))(Prelude["<$>"](Data_Array.functorArray())(Data_String.charCodeAt(0))(Data_String.split("")(s)));
        });
    };
    var coarbAlphaNumString = function () {
        return new CoArbitrary(function (_618) {
            return coarbitrary(coarbString())(_618);
        });
    };
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var testableFunction = function (__dict_Arbitrary_716) {
        return function (__dict_Testable_717) {
            return new Testable(function (f) {
                return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(__dict_Arbitrary_716))(function (_62) {
                    return test(__dict_Testable_717)(f(_62));
                });
            });
        };
    };
    var arbTuple = function (__dict_Arbitrary_718) {
        return function (__dict_Arbitrary_719) {
            return new Arbitrary(Prelude["<*>"](Test_QuickCheck_LCG.applyGen())(Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_718)))(arbitrary(__dict_Arbitrary_719)));
        };
    };
    var arbNumber = function () {
        return new Arbitrary(Test_QuickCheck_LCG.uniform);
    };
    var arbFunction = function (__dict_CoArbitrary_721) {
        return function (__dict_Arbitrary_722) {
            return new Arbitrary(Test_QuickCheck_LCG.repeatable(function (a) {
                return coarbitrary(__dict_CoArbitrary_721)(a)(arbitrary(__dict_Arbitrary_722));
            }));
        };
    };
    var arbBoolean = function () {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGen())(Test_QuickCheck_LCG.uniform)(function (_53) {
            return Prelude["return"](Test_QuickCheck_LCG.monadGen())((_53 * 2) < 1);
        }));
    };
    var arbEither = function (__dict_Arbitrary_723) {
        return function (__dict_Arbitrary_724) {
            return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbBoolean()))(function (_56) {
                return _56 ? Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Either.Left.create)(arbitrary(__dict_Arbitrary_723)) : Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Either.Right.create)(arbitrary(__dict_Arbitrary_724));
            }));
        };
    };
    var arbMaybe = function (__dict_Arbitrary_720) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbBoolean()))(function (_57) {
            return _57 ? Prelude.pure(Test_QuickCheck_LCG.applicativeGen())(Data_Maybe.Nothing.value) : Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Maybe.Just.create)(arbitrary(__dict_Arbitrary_720));
        }));
    };
    var arbArray = function (__dict_Arbitrary_725) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbBoolean()))(function (_61) {
            return _61 ? Prelude["return"](Test_QuickCheck_LCG.monadGen())([  ]) : Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(__dict_Arbitrary_725))(function (_60) {
    return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbArray(__dict_Arbitrary_725)))(function (_59) {
        return Prelude["return"](Test_QuickCheck_LCG.monadGen())(Prelude[":"](_60)(_59));
    });
});
        }));
    };
    var arbString = function () {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbArray(arbNumber())))(function (_54) {
            return Prelude["return"](Test_QuickCheck_LCG.monadGen())(Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray())(Prelude["<<<"](Prelude.semigroupoidArr())(Data_String.fromCharCode)(Prelude["*"](Prelude.numNumber())(65535)))(_54)));
        }));
    };
    var coarbFunction = function (__dict_Arbitrary_714) {
        return function (__dict_CoArbitrary_715) {
            return new CoArbitrary(function (f) {
                return function (gen) {
                    return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbArray(__dict_Arbitrary_714)))(function (_58) {
                        return coarbitrary(coarbArray(__dict_CoArbitrary_715))(Data_Array.map(f)(_58))(gen);
                    });
                };
            });
        };
    };
    var arbAlphaNumString = function () {
        return new Arbitrary((function () {
            var lookup = function (x) {
                var index = Math.round(x * (Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1));
                return Data_String.charAt(index)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
            };
            return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(arbitrary(arbArray(arbNumber())))(function (_55) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGen())(Prelude["<<<"](Prelude.semigroupoidArr())(AlphaNumString.create)(Data_String.joinWith(""))(Prelude["<$>"](Data_Array.functorArray())(lookup)(_55)));
            });
        })());
    };
    return {
        Success: Success, 
        Failed: Failed, 
        AlphaNumString: AlphaNumString, 
        Testable: Testable, 
        CoArbitrary: CoArbitrary, 
        Arbitrary: Arbitrary, 
        quickCheck: quickCheck, 
        "quickCheck'": quickCheck$prime, 
        quickCheckPure: quickCheckPure, 
        test: test, 
        "<?>": $less$qmark$greater, 
        coarbitrary: coarbitrary, 
        arbitrary: arbitrary, 
        showResult: showResult, 
        arbNumber: arbNumber, 
        coarbNumber: coarbNumber, 
        arbBoolean: arbBoolean, 
        coarbBoolean: coarbBoolean, 
        arbString: arbString, 
        coarbString: coarbString, 
        arbAlphaNumString: arbAlphaNumString, 
        coarbAlphaNumString: coarbAlphaNumString, 
        arbTuple: arbTuple, 
        coarbTuple: coarbTuple, 
        arbEither: arbEither, 
        coarbEither: coarbEither, 
        arbMaybe: arbMaybe, 
        coarbMaybe: coarbMaybe, 
        arbFunction: arbFunction, 
        coarbFunction: coarbFunction, 
        arbArray: arbArray, 
        coarbArray: coarbArray, 
        testableResult: testableResult, 
        testableBoolean: testableBoolean, 
        testableFunction: testableFunction
    };
})();
var PS = PS || {};
PS.Test_Data_Argonaut = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut = PS.Data_Argonaut;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Test_QuickCheck_LCG = PS.Test_QuickCheck_LCG;
    var Test_QuickCheck = PS.Test_QuickCheck;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Data_StrMap = PS.Data_StrMap;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    var prop_encode_then_decode = function (json) {
        return Prelude["=="](Data_Either.eqEither(Prelude.eqString())(Data_Argonaut_Core.eqJson()))(new Data_Either.Right(json))(Data_Argonaut.decodeJson(Data_Argonaut_Decode.decodeJsonJson())(Data_Argonaut.encodeJson(Data_Argonaut_Encode.encodeJsonJson())(json)));
    };
    var prop_decode_then_encode = function (json) {
        var decoded = Data_Argonaut.decodeJson(Data_Argonaut_Decode.decodeJsonJson())(json);
        return Prelude["=="](Data_Either.eqEither(Prelude.eqString())(Data_Argonaut_Core.eqJson()))(new Data_Either.Right(json))(Prelude[">>="](Data_Either.bindEither())(decoded)(Prelude[">>>"](Prelude.semigroupoidArr())(Data_Argonaut.encodeJson(Data_Argonaut_Encode.encodeJsonJson()))(Prelude.pure(Data_Either.applicativeEither()))));
    };
    var genJString = Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Argonaut.fromString)(Test_QuickCheck.arbitrary(Test_QuickCheck.arbString()));
    var genJNumber = Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Argonaut.fromNumber)(Test_QuickCheck.arbitrary(Test_QuickCheck.arbNumber()));
    var genJNull = Prelude.pure(Test_QuickCheck_LCG.applicativeGen())(Data_Argonaut.jsonNull);
    var genJBool = Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Argonaut.fromBoolean)(Test_QuickCheck.arbitrary(Test_QuickCheck.arbBoolean()));
    var genJArray = function (sz) {
        return Prelude["<$>"](Test_QuickCheck_LCG.functorGen())(Data_Argonaut.fromArray)(Test_QuickCheck_LCG.vectorOf(sz)(genJson(sz - 1)));
    };
    var genJson = function (_628) {
        if (_628 === 0) {
            return Test_QuickCheck_LCG.oneOf(genJNull)([ genJBool, genJNumber, genJString ]);
        };
        var rest = [ new Data_Tuple.Tuple(2, genJBool), new Data_Tuple.Tuple(2, genJNumber), new Data_Tuple.Tuple(3, genJString), new Data_Tuple.Tuple(1, genJArray(_628)), new Data_Tuple.Tuple(1, genJObject(_628)) ];
        return Test_QuickCheck_LCG.frequency(new Data_Tuple.Tuple(1, genJNull))(rest);
    };
    var genJObject = function (sz) {
        return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(Test_QuickCheck_LCG.vectorOf(sz)(genJson(sz - 1)))(function (_67) {
            return Prelude[">>="](Test_QuickCheck_LCG.bindGen())(Test_QuickCheck_LCG.vectorOf(Data_Array.length(_67))(Test_QuickCheck.arbitrary(Test_QuickCheck.arbAlphaNumString())))(function (_66) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGen())((function () {
                    var f = function (_629) {
                        return _629;
                    };
                    var k$prime = Prelude["<$>"](Data_Array.functorArray())(f)(_66);
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Data_Argonaut.fromObject)(Data_StrMap.fromList)(Data_Array.zipWith(Data_Tuple.Tuple.create)(k$prime)(_67));
                })());
            });
        });
    };
    var arbitraryJson = function () {
        return new Test_QuickCheck.Arbitrary(Test_QuickCheck_LCG.sized(genJson));
    };
    var main = function __do() {
        Debug_Trace.trace("Sample of JSON")();
        Test_QuickCheck_LCG.showSample(Data_Argonaut_Core.showJson())(genJson(10))();
        Debug_Trace.trace("Testing that any JSON can be encoded and then decoded")();
        Test_QuickCheck.quickCheck(Test_QuickCheck.testableFunction(arbitraryJson())(Test_QuickCheck.testableBoolean()))(prop_encode_then_decode)();
        Debug_Trace.trace("Testing that any JSON can be decoded and then encoded")();
        return Test_QuickCheck.quickCheck(Test_QuickCheck.testableFunction(arbitraryJson())(Test_QuickCheck.testableBoolean()))(prop_decode_then_encode)();
    };
    return {
        main: main, 
        prop_decode_then_encode: prop_decode_then_encode, 
        prop_encode_then_decode: prop_encode_then_decode, 
        genJson: genJson, 
        genJObject: genJObject, 
        genJArray: genJArray, 
        genJString: genJString, 
        genJNumber: genJNumber, 
        genJBool: genJBool, 
        genJNull: genJNull, 
        arbitraryJson: arbitraryJson
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function ParseError(value0) {
        this.value0 = value0;
    };
    ParseError.create = function (value0) {
        return new ParseError(value0);
    };
    var ParserT = {
        create: function (value) {
            return value;
        }
    };
    var unParserT = function (_630) {
        return _630;
    };
    var runParserT = function (__dict_Monad_726) {
        return function (s) {
            return function (p) {
                return Prelude[">>="](__dict_Monad_726["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_68) {
                    return Prelude["return"](__dict_Monad_726)(_68.result);
                });
            };
        };
    };
    var runParser = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(runParserT(Control_Monad_Identity.monadIdentity())(s));
    };
    var monadTransParserT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_727) {
            return function (m) {
                return ParserT.create(function (s) {
                    return Prelude["<$>"](((__dict_Monad_727["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                        return {
                            input: s, 
                            consumed: false, 
                            result: new Data_Either.Right(a)
                        };
                    })(m);
                });
            };
        });
    };
    var monadStateParserT = function (__dict_Monad_728) {
        return new Control_Monad_State_Class.MonadState(function (f) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_728)((function () {
                    var _2252 = f(s);
                    return {
                        input: _2252.value1, 
                        consumed: false, 
                        result: new Data_Either.Right(_2252.value0)
                    };
                })());
            });
        });
    };
    var lazy1ParserT = function () {
        return new Control_Lazy.Lazy1(function (f) {
            return ParserT.create(function (s) {
                return unParserT(f(Prelude.unit))(s);
            });
        });
    };
    var functorParserT = function (__dict_Functor_731) {
        return new Prelude.Functor(function (f) {
            return function (p) {
                var f$prime = function (o) {
                    return {
                        input: o.input, 
                        result: Prelude["<$>"](Data_Either.functorEither())(f)(o.result), 
                        consumed: o.consumed
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude["<$>"](__dict_Functor_731)(f$prime)(unParserT(p)(s));
                });
            };
        });
    };
    var fail = function (__dict_Monad_732) {
        return function (message) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_732)({
                    input: s, 
                    consumed: false, 
                    result: new Data_Either.Left(new ParseError({
                        message: message
                    }))
                });
            });
        };
    };
    var errorParseError = function () {
        return new Control_Monad_Error.Error(new ParseError({
            message: ""
        }), function (msg) {
            return new ParseError({
                message: msg
            });
        });
    };
    var consume = function (__dict_Monad_734) {
        return ParserT.create(function (s) {
            return Prelude["return"](__dict_Monad_734)({
                consumed: true, 
                input: s, 
                result: new Data_Either.Right(Prelude.unit)
            });
        });
    };
    var applicativeParserT = function (__dict_Monad_737) {
        return new Prelude.Applicative(function () {
            return applyParserT(__dict_Monad_737);
        }, function (a) {
            return ParserT.create(function (s) {
                return Prelude.pure(__dict_Monad_737["__superclass_Prelude.Applicative_0"]())({
                    input: s, 
                    result: new Data_Either.Right(a), 
                    consumed: false
                });
            });
        });
    };
    var applyParserT = function (__dict_Monad_736) {
        return new Prelude.Apply(Prelude.ap(monadParserT(__dict_Monad_736)), function () {
            return functorParserT(((__dict_Monad_736["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var monadParserT = function (__dict_Monad_730) {
        return new Prelude.Monad(function () {
            return applicativeParserT(__dict_Monad_730);
        }, function () {
            return bindParserT(__dict_Monad_730);
        });
    };
    var bindParserT = function (__dict_Monad_735) {
        return new Prelude.Bind(function (p) {
            return function (f) {
                var updateConsumedFlag = function (c) {
                    return function (o) {
                        return {
                            input: o.input, 
                            consumed: c || o.consumed, 
                            result: o.result
                        };
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_735["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_735)({
                                input: o.input, 
                                result: new Data_Either.Left(o.result.value0), 
                                consumed: o.consumed
                            });
                        };
                        if (o.result instanceof Data_Either.Right) {
                            return Prelude["<$>"](((__dict_Monad_735["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(o.input));
                        };
                        throw new Error("Failed pattern match");
                    });
                });
            };
        }, function () {
            return applyParserT(__dict_Monad_735);
        });
    };
    var altParserT = function (__dict_Monad_739) {
        return new Control_Alt.Alt(function (p1) {
            return function (p2) {
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_739["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left && !o.consumed) {
                            return unParserT(p2)(s);
                        };
                        return Prelude["return"](__dict_Monad_739)(o);
                    });
                });
            };
        }, function () {
            return functorParserT(((__dict_Monad_739["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusParserT = function (__dict_Monad_733) {
        return new Control_Plus.Plus(function () {
            return altParserT(__dict_Monad_733);
        }, fail(__dict_Monad_733)("No alternative"));
    };
    var alternativeParserT = function (__dict_Monad_738) {
        return new Control_Alternative.Alternative(function () {
            return plusParserT(__dict_Monad_738);
        }, function () {
            return applicativeParserT(__dict_Monad_738);
        });
    };
    var monadPlusParserT = function (__dict_Monad_729) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeParserT(__dict_Monad_729);
        }, function () {
            return monadParserT(__dict_Monad_729);
        });
    };
    return {
        ParserT: ParserT, 
        ParseError: ParseError, 
        fail: fail, 
        consume: consume, 
        runParser: runParser, 
        runParserT: runParserT, 
        unParserT: unParserT, 
        errorParseError: errorParseError, 
        functorParserT: functorParserT, 
        applyParserT: applyParserT, 
        applicativeParserT: applicativeParserT, 
        altParserT: altParserT, 
        plusParserT: plusParserT, 
        alternativeParserT: alternativeParserT, 
        bindParserT: bindParserT, 
        monadParserT: monadParserT, 
        monadPlusParserT: monadPlusParserT, 
        monadTransParserT: monadTransParserT, 
        monadStateParserT: monadStateParserT, 
        lazy1ParserT: lazy1ParserT
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Combinators = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Data_Either = PS.Data_Either;
    var Control_Alternative = PS.Control_Alternative;
    var Data_Maybe = PS.Data_Maybe;
    var $less$qmark$greater = function (__dict_Monad_740) {
        return function (p) {
            return function (msg) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_740))(p)(Text_Parsing_Parser.fail(__dict_Monad_740)("Expected " + msg));
            };
        };
    };
    var $$try = function (__dict_Functor_741) {
        return function (p) {
            var try$prime = function (_632) {
                return function (_633) {
                    if (_633.result instanceof Data_Either.Left) {
                        return {
                            input: _632, 
                            result: _633.result, 
                            consumed: false
                        };
                    };
                    return _633;
                };
            };
            return Text_Parsing_Parser.ParserT.create(function (s) {
                return Prelude["<$>"](__dict_Functor_741)(try$prime(s))(Text_Parsing_Parser.unParserT(p)(s));
            });
        };
    };
    var sepEndBy = function (__dict_Monad_742) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_742))(sepEndBy1(__dict_Monad_742)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_742))([  ]));
            };
        };
    };
    var sepEndBy1 = function (__dict_Monad_743) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_743))(p)(function (_73) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_743))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_743))(sep)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_743))(sepEndBy(__dict_Monad_743)(p)(sep))(function (_72) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_743))(Prelude[":"](_73)(_72));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_743))([ _73 ]));
                });
            };
        };
    };
    var sepBy1 = function (__dict_Monad_744) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_744))(p)(function (_71) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_744))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_744))(Text_Parsing_Parser.lazy1ParserT())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_744))(sep)(function () {
                        return p;
                    })))(function (_70) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_744))(Prelude[":"](_71)(_70));
                    });
                });
            };
        };
    };
    var sepBy = function (__dict_Monad_745) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_745))(sepBy1(__dict_Monad_745)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_745))([  ]));
            };
        };
    };
    var optional = function (__dict_Monad_746) {
        return function (p) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_746))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_746))(p)(function () {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_746))({});
            }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_746))({}));
        };
    };
    var option = function (__dict_Monad_747) {
        return function (a) {
            return function (p) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_747))(p)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_747))(a));
            };
        };
    };
    var optionMaybe = function (__dict_Functor_748) {
        return function (__dict_Monad_749) {
            return function (p) {
                return option(__dict_Monad_749)(Data_Maybe.Nothing.value)(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_748))(Data_Maybe.Just.create)(p));
            };
        };
    };
    var endBy1 = function (__dict_Monad_750) {
        return function (p) {
            return function (sep) {
                return Control_Alternative.some(Text_Parsing_Parser.alternativeParserT(__dict_Monad_750))(Text_Parsing_Parser.lazy1ParserT())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_750))(p)(function (_74) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_750))(sep)(function () {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_750))(_74);
                    });
                }));
            };
        };
    };
    var endBy = function (__dict_Monad_751) {
        return function (p) {
            return function (sep) {
                return Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_751))(Text_Parsing_Parser.lazy1ParserT())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_751))(p)(function (_75) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_751))(sep)(function () {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_751))(_75);
                    });
                }));
            };
        };
    };
    var choice = function (__dict_Monad_752) {
        return function (_631) {
            if (_631.length === 0) {
                return Text_Parsing_Parser.fail(__dict_Monad_752)("Nothing to parse");
            };
            if (_631.length === 1) {
                return _631[0];
            };
            if (_631.length >= 1) {
                var _2273 = _631.slice(1);
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_752))(_631[0])(choice(__dict_Monad_752)(_2273));
            };
            throw new Error("Failed pattern match");
        };
    };
    var chainr1 = function (__dict_Monad_753) {
        return function (p) {
            return function (f) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_753))(p)(function (_79) {
                    return chainr1$prime(__dict_Monad_753)(p)(f)(_79);
                });
            };
        };
    };
    var chainr1$prime = function (__dict_Monad_754) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_754))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_754))(f)(function (_81) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_754))(chainr1(__dict_Monad_754)(p)(f))(function (_80) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_754))(_81(a)(_80));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_754))(a));
                };
            };
        };
    };
    var chainr = function (__dict_Monad_755) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_755))(chainr1(__dict_Monad_755)(p)(f))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_755))(a));
                };
            };
        };
    };
    var chainl1$prime = function (__dict_Monad_756) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_756))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_756))(f)(function (_78) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_756))(p)(function (_77) {
                            return chainl1$prime(__dict_Monad_756)(p)(f)(_78(a)(_77));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_756))(a));
                };
            };
        };
    };
    var chainl1 = function (__dict_Monad_757) {
        return function (p) {
            return function (f) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_757))(p)(function (_76) {
                    return chainl1$prime(__dict_Monad_757)(p)(f)(_76);
                });
            };
        };
    };
    var chainl = function (__dict_Monad_758) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_758))(chainl1(__dict_Monad_758)(p)(f))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_758))(a));
                };
            };
        };
    };
    var between = function (__dict_Monad_759) {
        return function (open) {
            return function (close) {
                return function (p) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_759))(open)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_759))(p)(function (_69) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_759))(close)(function () {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_759))(_69);
                            });
                        });
                    });
                };
            };
        };
    };
    return {
        choice: choice, 
        "chainr1'": chainr1$prime, 
        chainr1: chainr1, 
        "chainl1'": chainl1$prime, 
        chainl1: chainl1, 
        chainl: chainl, 
        chainr: chainr, 
        endBy: endBy, 
        endBy1: endBy1, 
        sepEndBy1: sepEndBy1, 
        sepEndBy: sepEndBy, 
        sepBy1: sepBy1, 
        sepBy: sepBy, 
        "try": $$try, 
        optionMaybe: optionMaybe, 
        optional: optional, 
        option: option, 
        between: between, 
        "<?>": $less$qmark$greater
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Expr = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Control_Alt = PS.Control_Alt;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    function AssocNone() {

    };
    AssocNone.value = new AssocNone();
    function AssocLeft() {

    };
    AssocLeft.value = new AssocLeft();
    function AssocRight() {

    };
    AssocRight.value = new AssocRight();
    function Infix(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Infix.create = function (value0) {
        return function (value1) {
            return new Infix(value0, value1);
        };
    };
    function Prefix(value0) {
        this.value0 = value0;
    };
    Prefix.create = function (value0) {
        return new Prefix(value0);
    };
    function Postfix(value0) {
        this.value0 = value0;
    };
    Postfix.create = function (value0) {
        return new Postfix(value0);
    };
    var termP = function (__dict_Monad_760) {
        return function (prefixP) {
            return function (term) {
                return function (postfixP) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_760))(prefixP)(function (_91) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_760))(term)(function (_90) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_760))(postfixP)(function (_89) {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_760))(_89(_91(_90)));
                            });
                        });
                    });
                };
            };
        };
    };
    var splitOp = function (_634) {
        return function (_635) {
            if (_634 instanceof Infix && _634.value1 instanceof AssocNone) {
                var _2286 = {};
                for (var _2287 in _635) {
                    if (_635.hasOwnProperty(_2287)) {
                        _2286[_2287] = _635[_2287];
                    };
                };
                _2286.nassoc = Prelude[":"](_634.value0)(_635.nassoc);
                return _2286;
            };
            if (_634 instanceof Infix && _634.value1 instanceof AssocLeft) {
                var _2290 = {};
                for (var _2291 in _635) {
                    if (_635.hasOwnProperty(_2291)) {
                        _2290[_2291] = _635[_2291];
                    };
                };
                _2290.lassoc = Prelude[":"](_634.value0)(_635.lassoc);
                return _2290;
            };
            if (_634 instanceof Infix && _634.value1 instanceof AssocRight) {
                var _2294 = {};
                for (var _2295 in _635) {
                    if (_635.hasOwnProperty(_2295)) {
                        _2294[_2295] = _635[_2295];
                    };
                };
                _2294.rassoc = Prelude[":"](_634.value0)(_635.rassoc);
                return _2294;
            };
            if (_634 instanceof Prefix) {
                var _2298 = {};
                for (var _2299 in _635) {
                    if (_635.hasOwnProperty(_2299)) {
                        _2298[_2299] = _635[_2299];
                    };
                };
                _2298.prefix = Prelude[":"](_634.value0)(_635.prefix);
                return _2298;
            };
            if (_634 instanceof Postfix) {
                var _2301 = {};
                for (var _2302 in _635) {
                    if (_635.hasOwnProperty(_2302)) {
                        _2301[_2302] = _635[_2302];
                    };
                };
                _2301.postfix = Prelude[":"](_634.value0)(_635.postfix);
                return _2301;
            };
            throw new Error("Failed pattern match");
        };
    };
    var rassocP = function (__dict_Monad_761) {
        return function (x) {
            return function (rassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_761))(rassocOp)(function (_84) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_761))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_761))(termP(__dict_Monad_761)(prefixP)(term)(postfixP))(function (_82) {
                                    return rassocP1(__dict_Monad_761)(_82)(rassocOp)(prefixP)(term)(postfixP);
                                }))(function (_83) {
                                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_761))(_84(x)(_83));
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var rassocP1 = function (__dict_Monad_762) {
        return function (x) {
            return function (rassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_762))(rassocP(__dict_Monad_762)(x)(rassocOp)(prefixP)(term)(postfixP))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_762))(x));
                        };
                    };
                };
            };
        };
    };
    var nassocP = function (__dict_Monad_763) {
        return function (x) {
            return function (nassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_763))(nassocOp)(function (_88) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_763))(termP(__dict_Monad_763)(prefixP)(term)(postfixP))(function (_87) {
                                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_763))(_88(x)(_87));
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var lassocP = function (__dict_Monad_764) {
        return function (x) {
            return function (lassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_764))(lassocOp)(function (_86) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_764))(termP(__dict_Monad_764)(prefixP)(term)(postfixP))(function (_85) {
                                    return lassocP1(__dict_Monad_764)(_86(x)(_85))(lassocOp)(prefixP)(term)(postfixP);
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var lassocP1 = function (__dict_Monad_765) {
        return function (x) {
            return function (lassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_765))(lassocP(__dict_Monad_765)(x)(lassocOp)(prefixP)(term)(postfixP))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_765))(x));
                        };
                    };
                };
            };
        };
    };
    var buildExprParser = function (__dict_Monad_766) {
        return function (operators) {
            return function (simpleExpr) {
                var makeParser = function (term) {
                    return function (ops) {
                        var accum = Data_Foldable.foldr(Data_Foldable.foldableArray())(splitOp)({
                            rassoc: [  ], 
                            lassoc: [  ], 
                            nassoc: [  ], 
                            prefix: [  ], 
                            postfix: [  ]
                        })(ops);
                        var rassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_766)(accum.rassoc);
                        var lassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_766)(accum.lassoc);
                        var nassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_766)(accum.nassoc);
                        var prefixOp = Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_766)(Text_Parsing_Parser_Combinators.choice(__dict_Monad_766)(accum.prefix))("");
                        var postfixOp = Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_766)(Text_Parsing_Parser_Combinators.choice(__dict_Monad_766)(accum.postfix))("");
                        var postfixP = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_766))(postfixOp)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_766))(Prelude.id(Prelude.categoryArr())));
                        var prefixP = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_766))(prefixOp)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_766))(Prelude.id(Prelude.categoryArr())));
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_766))(termP(__dict_Monad_766)(prefixP)(term)(postfixP))(function (_92) {
                            return Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_766)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_766))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_766))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_766))(rassocP(__dict_Monad_766)(_92)(rassocOp)(prefixP)(term)(postfixP))(lassocP(__dict_Monad_766)(_92)(lassocOp)(prefixP)(term)(postfixP)))(nassocP(__dict_Monad_766)(_92)(nassocOp)(prefixP)(term)(postfixP)))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_766))(_92)))("operator");
                        });
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray())(makeParser)(simpleExpr)(operators);
            };
        };
    };
    return {
        Infix: Infix, 
        Prefix: Prefix, 
        Postfix: Postfix, 
        AssocNone: AssocNone, 
        AssocLeft: AssocLeft, 
        AssocRight: AssocRight, 
        buildExprParser: buildExprParser, 
        termP: termP, 
        nassocP: nassocP, 
        lassocP1: lassocP1, 
        lassocP: lassocP, 
        rassocP1: rassocP1, 
        rassocP: rassocP, 
        splitOp: splitOp
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Alt = PS.Control_Alt;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var string = function (__dict_Monad_767) {
        return function (s) {
            return Text_Parsing_Parser.ParserT.create(function (s$prime) {
                return Prelude["return"](__dict_Monad_767)((function () {
                    var _2312 = Data_String.indexOf(s)(s$prime);
                    if (_2312 === 0) {
                        return {
                            consumed: true, 
                            input: Data_String.drop(Data_String.length(s))(s$prime), 
                            result: new Data_Either.Right(s)
                        };
                    };
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError())("Expected " + Prelude.show(Prelude.showString())(s)))
                    };
                })());
            });
        };
    };
    var whiteSpace = function (__dict_Monad_768) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_768))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_768))(Text_Parsing_Parser.lazy1ParserT())(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_768))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_768))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_768))(string(__dict_Monad_768)("\n"))(string(__dict_Monad_768)("\r")))(string(__dict_Monad_768)(" ")))(string(__dict_Monad_768)("\t"))))(function (_94) {
            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_768))(Data_Foldable.foldMap(Data_Foldable.foldableArray())(Data_Monoid.monoidString())(Prelude.id(Prelude.categoryArr()))(_94));
        });
    };
    var eof = function (__dict_Monad_769) {
        return Text_Parsing_Parser.ParserT.create(function (s) {
            return Prelude["return"](__dict_Monad_769)((function () {
                if (s === "") {
                    return {
                        consumed: false, 
                        input: s, 
                        result: new Data_Either.Right({})
                    };
                };
                return {
                    consumed: false, 
                    input: s, 
                    result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError())("Expected EOF"))
                };
            })());
        });
    };
    var $$char = function (__dict_Monad_770) {
        return Text_Parsing_Parser.ParserT.create(function (s$prime) {
            return Prelude["return"](__dict_Monad_770)((function () {
                if (s$prime === "") {
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError())("Unexpected EOF"))
                    };
                };
                return {
                    consumed: true, 
                    input: Data_String.drop(1)(s$prime), 
                    result: new Data_Either.Right(Data_String.charAt(0)(s$prime))
                };
            })());
        });
    };
    var satisfy = function (__dict_Monad_771) {
        return function (f) {
            return Text_Parsing_Parser_Combinators["try"](((__dict_Monad_771["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_771))($$char(__dict_Monad_771))(function (_93) {
                return f(_93) ? Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_771))(_93) : Text_Parsing_Parser.fail(__dict_Monad_771)("Character did not satisfy predicate");
            }));
        };
    };
    return {
        whiteSpace: whiteSpace, 
        satisfy: satisfy, 
        "char": $$char, 
        string: string, 
        eof: eof
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Token = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {};
})();
PS.Test_Data_Argonaut.main();

